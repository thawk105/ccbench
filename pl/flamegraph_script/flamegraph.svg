<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="630.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="613" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="613" > </text>
<g id="frames">
<g >
<title>__schedule (1 samples, 0.01%)</title><rect x="398.7" y="245" width="0.1" height="15.0" fill="rgb(245,170,16)" rx="2" ry="2" />
<text  x="401.66" y="255.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.01%)</title><rect x="1185.0" y="357" width="0.2" height="15.0" fill="rgb(229,94,47)" rx="2" ry="2" />
<text  x="1188.04" y="367.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.01%)</title><rect x="333.4" y="149" width="0.2" height="15.0" fill="rgb(227,41,54)" rx="2" ry="2" />
<text  x="336.45" y="159.5" ></text>
</g>
<g >
<title>TxExecutor::concat (3 samples, 0.04%)</title><rect x="547.6" y="341" width="0.5" height="15.0" fill="rgb(218,31,45)" rx="2" ry="2" />
<text  x="550.62" y="351.5" ></text>
</g>
<g >
<title>do_nmi (1 samples, 0.01%)</title><rect x="479.1" y="149" width="0.1" height="15.0" fill="rgb(214,19,52)" rx="2" ry="2" />
<text  x="482.05" y="159.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.04%)</title><rect x="572.9" y="37" width="0.4" height="15.0" fill="rgb(248,100,51)" rx="2" ry="2" />
<text  x="575.86" y="47.5" ></text>
</g>
<g >
<title>update_load_avg (6 samples, 0.07%)</title><rect x="326.4" y="181" width="0.9" height="15.0" fill="rgb(211,162,2)" rx="2" ry="2" />
<text  x="329.45" y="191.5" ></text>
</g>
<g >
<title>TxExecutor::spinWait (1 samples, 0.01%)</title><rect x="18.5" y="533" width="0.1" height="15.0" fill="rgb(241,168,16)" rx="2" ry="2" />
<text  x="21.46" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="159.0" y="277" width="0.1" height="15.0" fill="rgb(215,189,5)" rx="2" ry="2" />
<text  x="161.96" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="377.5" y="325" width="0.2" height="15.0" fill="rgb(209,72,3)" rx="2" ry="2" />
<text  x="380.51" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int&amp;&gt; (9 samples, 0.11%)</title><rect x="386.7" y="341" width="1.3" height="15.0" fill="rgb(250,129,31)" rx="2" ry="2" />
<text  x="389.70" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::back (1 samples, 0.01%)</title><rect x="159.0" y="309" width="0.1" height="15.0" fill="rgb(227,107,8)" rx="2" ry="2" />
<text  x="161.96" y="319.5" ></text>
</g>
<g >
<title>exit_mmap (938 samples, 11.60%)</title><rect x="1048.2" y="453" width="136.8" height="15.0" fill="rgb(234,81,51)" rx="2" ry="2" />
<text  x="1051.19" y="463.5" >exit_mmap</text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.05%)</title><rect x="464.6" y="165" width="0.6" height="15.0" fill="rgb(236,149,24)" rx="2" ry="2" />
<text  x="467.61" y="175.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.01%)</title><rect x="465.2" y="277" width="0.1" height="15.0" fill="rgb(215,13,21)" rx="2" ry="2" />
<text  x="468.19" y="287.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.06%)</title><rect x="15.0" y="373" width="0.7" height="15.0" fill="rgb(236,47,9)" rx="2" ry="2" />
<text  x="17.96" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (3 samples, 0.04%)</title><rect x="156.9" y="309" width="0.5" height="15.0" fill="rgb(254,215,39)" rx="2" ry="2" />
<text  x="159.92" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="1186.1" y="501" width="0.1" height="15.0" fill="rgb(228,62,16)" rx="2" ry="2" />
<text  x="1189.06" y="511.5" ></text>
</g>
<g >
<title>all (8,088 samples, 100%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(239,180,27)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>TxExecutor::concat (8 samples, 0.10%)</title><rect x="112.7" y="341" width="1.2" height="15.0" fill="rgb(226,98,21)" rx="2" ry="2" />
<text  x="115.71" y="351.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.06%)</title><rect x="1185.0" y="389" width="0.8" height="15.0" fill="rgb(247,127,36)" rx="2" ry="2" />
<text  x="1188.04" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (21 samples, 0.26%)</title><rect x="413.1" y="373" width="3.1" height="15.0" fill="rgb(222,20,7)" rx="2" ry="2" />
<text  x="416.11" y="383.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="13.2" y="501" width="0.3" height="15.0" fill="rgb(212,87,47)" rx="2" ry="2" />
<text  x="16.21" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="140.9" y="325" width="0.1" height="15.0" fill="rgb(248,164,35)" rx="2" ry="2" />
<text  x="143.87" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator- (4 samples, 0.05%)</title><rect x="209.1" y="325" width="0.6" height="15.0" fill="rgb(213,101,17)" rx="2" ry="2" />
<text  x="212.15" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.01%)</title><rect x="311.4" y="357" width="0.2" height="15.0" fill="rgb(221,194,51)" rx="2" ry="2" />
<text  x="314.42" y="367.5" ></text>
</g>
<g >
<title>x86_pmu_enable (35 samples, 0.43%)</title><rect x="567.5" y="197" width="5.1" height="15.0" fill="rgb(250,195,33)" rx="2" ry="2" />
<text  x="570.47" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (1 samples, 0.01%)</title><rect x="394.4" y="277" width="0.2" height="15.0" fill="rgb(218,173,19)" rx="2" ry="2" />
<text  x="397.43" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="394.1" y="309" width="0.2" height="15.0" fill="rgb(216,211,29)" rx="2" ry="2" />
<text  x="397.14" y="319.5" ></text>
</g>
<g >
<title>ctx_resched (5 samples, 0.06%)</title><rect x="464.5" y="197" width="0.7" height="15.0" fill="rgb(236,180,30)" rx="2" ry="2" />
<text  x="467.46" y="207.5" ></text>
</g>
<g >
<title>power1 (1 samples, 0.01%)</title><rect x="32.9" y="405" width="0.2" height="15.0" fill="rgb(220,98,48)" rx="2" ry="2" />
<text  x="35.91" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (3 samples, 0.04%)</title><rect x="550.0" y="325" width="0.4" height="15.0" fill="rgb(216,135,31)" rx="2" ry="2" />
<text  x="552.96" y="335.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.01%)</title><rect x="13.6" y="341" width="0.2" height="15.0" fill="rgb(209,84,26)" rx="2" ry="2" />
<text  x="16.65" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.01%)</title><rect x="159.1" y="293" width="0.2" height="15.0" fill="rgb(252,44,29)" rx="2" ry="2" />
<text  x="162.10" y="303.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (12 samples, 0.15%)</title><rect x="1188.0" y="389" width="1.7" height="15.0" fill="rgb(218,157,37)" rx="2" ry="2" />
<text  x="1190.96" y="399.5" ></text>
</g>
<g >
<title>nohz_balance_exit_idle.part.98 (1 samples, 0.01%)</title><rect x="12.5" y="389" width="0.1" height="15.0" fill="rgb(212,19,52)" rx="2" ry="2" />
<text  x="15.48" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int&amp;&gt; (1 samples, 0.01%)</title><rect x="28.2" y="533" width="0.2" height="15.0" fill="rgb(207,9,16)" rx="2" ry="2" />
<text  x="31.24" y="543.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="12.5" y="533" width="0.1" height="15.0" fill="rgb(244,5,47)" rx="2" ry="2" />
<text  x="15.48" y="543.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.01%)</title><rect x="322.8" y="181" width="0.1" height="15.0" fill="rgb(226,150,38)" rx="2" ry="2" />
<text  x="325.80" y="191.5" ></text>
</g>
<g >
<title>x86_pmu_disable (2 samples, 0.02%)</title><rect x="472.0" y="181" width="0.3" height="15.0" fill="rgb(233,141,10)" rx="2" ry="2" />
<text  x="475.05" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.15%)</title><rect x="117.8" y="325" width="1.8" height="15.0" fill="rgb(250,55,17)" rx="2" ry="2" />
<text  x="120.82" y="335.5" ></text>
</g>
<g >
<title>account_entity_dequeue (1 samples, 0.01%)</title><rect x="472.5" y="197" width="0.1" height="15.0" fill="rgb(237,194,42)" rx="2" ry="2" />
<text  x="475.49" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (6 samples, 0.07%)</title><rect x="536.8" y="357" width="0.9" height="15.0" fill="rgb(208,214,22)" rx="2" ry="2" />
<text  x="539.83" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::destroy&lt;int&gt; (2 samples, 0.02%)</title><rect x="106.1" y="293" width="0.3" height="15.0" fill="rgb(232,138,40)" rx="2" ry="2" />
<text  x="109.14" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (5 samples, 0.06%)</title><rect x="141.0" y="341" width="0.7" height="15.0" fill="rgb(214,45,16)" rx="2" ry="2" />
<text  x="144.01" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (3 samples, 0.04%)</title><rect x="105.7" y="293" width="0.4" height="15.0" fill="rgb(243,140,18)" rx="2" ry="2" />
<text  x="108.71" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.01%)</title><rect x="212.1" y="341" width="0.1" height="15.0" fill="rgb(241,118,26)" rx="2" ry="2" />
<text  x="215.06" y="351.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="272.8" y="197" width="0.1" height="15.0" fill="rgb(210,212,15)" rx="2" ry="2" />
<text  x="275.76" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (4 samples, 0.05%)</title><rect x="109.4" y="341" width="0.5" height="15.0" fill="rgb(224,80,37)" rx="2" ry="2" />
<text  x="112.35" y="351.5" ></text>
</g>
<g >
<title>sys_nanosleep (1 samples, 0.01%)</title><rect x="398.7" y="309" width="0.1" height="15.0" fill="rgb(219,167,19)" rx="2" ry="2" />
<text  x="401.66" y="319.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.05%)</title><rect x="1047.0" y="341" width="0.6" height="15.0" fill="rgb(228,48,30)" rx="2" ry="2" />
<text  x="1050.02" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::base (9 samples, 0.11%)</title><rect x="409.9" y="357" width="1.3" height="15.0" fill="rgb(243,121,21)" rx="2" ry="2" />
<text  x="412.90" y="367.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.02%)</title><rect x="29.3" y="533" width="0.2" height="15.0" fill="rgb(220,149,26)" rx="2" ry="2" />
<text  x="32.26" y="543.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.05%)</title><rect x="11.9" y="373" width="0.6" height="15.0" fill="rgb(242,116,8)" rx="2" ry="2" />
<text  x="14.90" y="383.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (15 samples, 0.19%)</title><rect x="1187.5" y="501" width="2.2" height="15.0" fill="rgb(222,28,33)" rx="2" ry="2" />
<text  x="1190.52" y="511.5" ></text>
</g>
<g >
<title>std::floor&lt;int&gt; (6 samples, 0.07%)</title><rect x="96.7" y="325" width="0.8" height="15.0" fill="rgb(223,93,25)" rx="2" ry="2" />
<text  x="99.66" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="104.8" y="293" width="0.2" height="15.0" fill="rgb(233,12,18)" rx="2" ry="2" />
<text  x="107.83" y="303.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="16.7" y="469" width="0.2" height="15.0" fill="rgb(241,48,27)" rx="2" ry="2" />
<text  x="19.71" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="159.1" y="277" width="0.2" height="15.0" fill="rgb(251,30,3)" rx="2" ry="2" />
<text  x="162.10" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="464.0" y="341" width="0.2" height="15.0" fill="rgb(232,199,23)" rx="2" ry="2" />
<text  x="467.03" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="116.8" y="245" width="0.1" height="15.0" fill="rgb(230,136,16)" rx="2" ry="2" />
<text  x="119.80" y="255.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (35 samples, 0.43%)</title><rect x="567.5" y="165" width="5.1" height="15.0" fill="rgb(249,86,42)" rx="2" ry="2" />
<text  x="570.47" y="175.5" ></text>
</g>
<g >
<title>do_nanosleep (78 samples, 0.96%)</title><rect x="562.2" y="277" width="11.4" height="15.0" fill="rgb(246,4,28)" rx="2" ry="2" />
<text  x="565.21" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt;::end (4 samples, 0.05%)</title><rect x="33.1" y="533" width="0.5" height="15.0" fill="rgb(239,184,50)" rx="2" ry="2" />
<text  x="36.05" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="112.6" y="245" width="0.1" height="15.0" fill="rgb(250,145,19)" rx="2" ry="2" />
<text  x="115.56" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Procedure&gt; &gt;::construct&lt;Procedure, Ope, unsigned long&amp;&gt; (2 samples, 0.02%)</title><rect x="30.1" y="533" width="0.3" height="15.0" fill="rgb(254,227,45)" rx="2" ry="2" />
<text  x="33.13" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::clear (3 samples, 0.04%)</title><rect x="167.9" y="389" width="0.4" height="15.0" fill="rgb(248,148,29)" rx="2" ry="2" />
<text  x="170.86" y="399.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.01%)</title><rect x="398.7" y="213" width="0.1" height="15.0" fill="rgb(246,26,9)" rx="2" ry="2" />
<text  x="401.66" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator* (7 samples, 0.09%)</title><rect x="22.8" y="533" width="1.1" height="15.0" fill="rgb(206,121,52)" rx="2" ry="2" />
<text  x="25.84" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (3 samples, 0.04%)</title><rect x="389.6" y="325" width="0.5" height="15.0" fill="rgb(205,118,40)" rx="2" ry="2" />
<text  x="392.62" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt;::end (6 samples, 0.07%)</title><rect x="621.7" y="357" width="0.9" height="15.0" fill="rgb(215,152,29)" rx="2" ry="2" />
<text  x="624.74" y="367.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (5 samples, 0.06%)</title><rect x="567.6" y="149" width="0.7" height="15.0" fill="rgb(243,201,15)" rx="2" ry="2" />
<text  x="570.61" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.01%)</title><rect x="210.9" y="341" width="0.1" height="15.0" fill="rgb(253,14,1)" rx="2" ry="2" />
<text  x="213.90" y="351.5" ></text>
</g>
<g >
<title>hrtick_update (1 samples, 0.01%)</title><rect x="327.5" y="213" width="0.1" height="15.0" fill="rgb(217,70,2)" rx="2" ry="2" />
<text  x="330.47" y="223.5" ></text>
</g>
<g >
<title>__perf_event_enable (5 samples, 0.06%)</title><rect x="1185.0" y="437" width="0.8" height="15.0" fill="rgb(236,44,26)" rx="2" ry="2" />
<text  x="1188.04" y="447.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="1189.7" y="485" width="0.3" height="15.0" fill="rgb(217,128,10)" rx="2" ry="2" />
<text  x="1192.71" y="495.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.02%)</title><rect x="13.2" y="453" width="0.3" height="15.0" fill="rgb(211,228,36)" rx="2" ry="2" />
<text  x="16.21" y="463.5" ></text>
</g>
<g >
<title>__nptl_deallocate_tsd (2 samples, 0.02%)</title><rect x="1045.0" y="501" width="0.3" height="15.0" fill="rgb(228,111,52)" rx="2" ry="2" />
<text  x="1047.98" y="511.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.01%)</title><rect x="458.2" y="309" width="0.1" height="15.0" fill="rgb(228,77,45)" rx="2" ry="2" />
<text  x="461.19" y="319.5" ></text>
</g>
<g >
<title>event_function (5 samples, 0.06%)</title><rect x="1046.0" y="437" width="0.7" height="15.0" fill="rgb(224,229,35)" rx="2" ry="2" />
<text  x="1049.00" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="143.6" y="325" width="0.2" height="15.0" fill="rgb(222,112,16)" rx="2" ry="2" />
<text  x="146.64" y="335.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.05%)</title><rect x="572.7" y="85" width="0.6" height="15.0" fill="rgb(253,93,44)" rx="2" ry="2" />
<text  x="575.72" y="95.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="1179.9" y="293" width="0.2" height="15.0" fill="rgb(218,114,25)" rx="2" ry="2" />
<text  x="1182.93" y="303.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.01%)</title><rect x="562.2" y="229" width="0.2" height="15.0" fill="rgb(234,151,54)" rx="2" ry="2" />
<text  x="565.21" y="239.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (4 samples, 0.05%)</title><rect x="325.4" y="165" width="0.6" height="15.0" fill="rgb(250,39,41)" rx="2" ry="2" />
<text  x="328.43" y="175.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.06%)</title><rect x="11.8" y="389" width="0.7" height="15.0" fill="rgb(235,147,7)" rx="2" ry="2" />
<text  x="14.75" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;SetElement&lt;Tuple&gt; &gt;::construct&lt;SetElement&lt;Tuple&gt;, unsigned long&amp;, Tuple*&amp;, char  (177 samples, 2.19%)</title><rect x="433.2" y="341" width="25.9" height="15.0" fill="rgb(230,228,17)" rx="2" ry="2" />
<text  x="436.24" y="351.5" >_..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::destroy&lt;int&gt; (2 samples, 0.02%)</title><rect x="28.4" y="533" width="0.3" height="15.0" fill="rgb(215,134,17)" rx="2" ry="2" />
<text  x="31.38" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (1 samples, 0.01%)</title><rect x="395.9" y="373" width="0.1" height="15.0" fill="rgb(212,109,27)" rx="2" ry="2" />
<text  x="398.89" y="383.5" ></text>
</g>
<g >
<title>myBinarySearch (3 samples, 0.04%)</title><rect x="393.7" y="341" width="0.4" height="15.0" fill="rgb(209,219,40)" rx="2" ry="2" />
<text  x="396.70" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::operator* (5 samples, 0.06%)</title><rect x="587.9" y="405" width="0.7" height="15.0" fill="rgb(232,128,40)" rx="2" ry="2" />
<text  x="590.89" y="415.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.02%)</title><rect x="273.5" y="229" width="0.3" height="15.0" fill="rgb(252,190,18)" rx="2" ry="2" />
<text  x="276.49" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (1 samples, 0.01%)</title><rect x="546.6" y="309" width="0.1" height="15.0" fill="rgb(229,106,28)" rx="2" ry="2" />
<text  x="549.60" y="319.5" ></text>
</g>
<g >
<title>clockevents_program_event (10 samples, 0.12%)</title><rect x="468.5" y="229" width="1.5" height="15.0" fill="rgb(205,8,38)" rx="2" ry="2" />
<text  x="471.55" y="239.5" ></text>
</g>
<g >
<title>myBinarySearch (3 samples, 0.04%)</title><rect x="223.2" y="309" width="0.4" height="15.0" fill="rgb(224,131,45)" rx="2" ry="2" />
<text  x="226.15" y="319.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.01%)</title><rect x="164.1" y="149" width="0.1" height="15.0" fill="rgb(211,90,1)" rx="2" ry="2" />
<text  x="167.07" y="159.5" ></text>
</g>
<g >
<title>TxExecutor::PromoteWaiters (23 samples, 0.28%)</title><rect x="392.5" y="373" width="3.4" height="15.0" fill="rgb(210,219,23)" rx="2" ry="2" />
<text  x="395.54" y="383.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (7 samples, 0.09%)</title><rect x="345.3" y="341" width="1.0" height="15.0" fill="rgb(229,146,42)" rx="2" ry="2" />
<text  x="348.27" y="351.5" ></text>
</g>
<g >
<title>native_write_cr2 (1 samples, 0.01%)</title><rect x="568.6" y="149" width="0.2" height="15.0" fill="rgb(238,160,29)" rx="2" ry="2" />
<text  x="571.63" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (3 samples, 0.04%)</title><rect x="394.1" y="341" width="0.5" height="15.0" fill="rgb(226,67,40)" rx="2" ry="2" />
<text  x="397.14" y="351.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (91 samples, 1.13%)</title><rect x="330.8" y="213" width="13.3" height="15.0" fill="rgb(238,43,20)" rx="2" ry="2" />
<text  x="333.82" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="397.9" y="341" width="0.2" height="15.0" fill="rgb(239,28,30)" rx="2" ry="2" />
<text  x="400.94" y="351.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (2 samples, 0.02%)</title><rect x="311.0" y="357" width="0.3" height="15.0" fill="rgb(222,16,41)" rx="2" ry="2" />
<text  x="313.98" y="367.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.01%)</title><rect x="614.0" y="229" width="0.2" height="15.0" fill="rgb(230,85,54)" rx="2" ry="2" />
<text  x="617.01" y="239.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (18 samples, 0.22%)</title><rect x="368.9" y="341" width="2.6" height="15.0" fill="rgb(224,119,0)" rx="2" ry="2" />
<text  x="371.90" y="351.5" ></text>
</g>
<g >
<title>__intel_pmu_disable_all (1 samples, 0.01%)</title><rect x="322.8" y="165" width="0.1" height="15.0" fill="rgb(205,60,43)" rx="2" ry="2" />
<text  x="325.80" y="175.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (3 samples, 0.04%)</title><rect x="12.6" y="373" width="0.5" height="15.0" fill="rgb(232,67,49)" rx="2" ry="2" />
<text  x="15.63" y="383.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.01%)</title><rect x="475.0" y="181" width="0.1" height="15.0" fill="rgb(234,52,34)" rx="2" ry="2" />
<text  x="477.97" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;SetElement&lt;Tuple&gt; &gt;::construct&lt;SetElement&lt;Tuple&gt;, unsigned long&amp;, Tuple*&amp;, char  (158 samples, 1.95%)</title><rect x="233.5" y="341" width="23.1" height="15.0" fill="rgb(226,109,40)" rx="2" ry="2" />
<text  x="236.51" y="351.5" >_..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::destroy&lt;int&gt; (1 samples, 0.01%)</title><rect x="154.0" y="293" width="0.1" height="15.0" fill="rgb(210,17,17)" rx="2" ry="2" />
<text  x="157.00" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="385.7" y="341" width="0.1" height="15.0" fill="rgb(223,156,28)" rx="2" ry="2" />
<text  x="388.68" y="351.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.01%)</title><rect x="345.0" y="245" width="0.1" height="15.0" fill="rgb(248,43,49)" rx="2" ry="2" />
<text  x="347.98" y="255.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.06%)</title><rect x="464.5" y="261" width="0.7" height="15.0" fill="rgb(222,219,5)" rx="2" ry="2" />
<text  x="467.46" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="1153.1" y="277" width="0.1" height="15.0" fill="rgb(234,99,40)" rx="2" ry="2" />
<text  x="1156.09" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::base (4 samples, 0.05%)</title><rect x="590.1" y="389" width="0.6" height="15.0" fill="rgb(249,217,49)" rx="2" ry="2" />
<text  x="593.08" y="399.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (100 samples, 1.24%)</title><rect x="478.0" y="213" width="14.6" height="15.0" fill="rgb(224,139,21)" rx="2" ry="2" />
<text  x="481.03" y="223.5" ></text>
</g>
<g >
<title>ctx_sched_out (6 samples, 0.07%)</title><rect x="471.5" y="197" width="0.8" height="15.0" fill="rgb(233,8,9)" rx="2" ry="2" />
<text  x="474.47" y="207.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.65 (3 samples, 0.04%)</title><rect x="1181.2" y="341" width="0.5" height="15.0" fill="rgb(222,194,4)" rx="2" ry="2" />
<text  x="1184.25" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (1 samples, 0.01%)</title><rect x="346.7" y="389" width="0.2" height="15.0" fill="rgb(240,186,40)" rx="2" ry="2" />
<text  x="349.73" y="399.5" ></text>
</g>
<g >
<title>__pow (1 samples, 0.01%)</title><rect x="32.9" y="437" width="0.2" height="15.0" fill="rgb(234,196,0)" rx="2" ry="2" />
<text  x="35.91" y="447.5" ></text>
</g>
<g >
<title>remote_function (5 samples, 0.06%)</title><rect x="16.0" y="453" width="0.7" height="15.0" fill="rgb(224,34,7)" rx="2" ry="2" />
<text  x="18.98" y="463.5" ></text>
</g>
<g >
<title>__GI_exit (1 samples, 0.01%)</title><rect x="1046.7" y="517" width="0.2" height="15.0" fill="rgb(245,224,3)" rx="2" ry="2" />
<text  x="1049.73" y="527.5" ></text>
</g>
<g >
<title>TxExecutor::commit (286 samples, 3.54%)</title><rect x="126.6" y="405" width="41.7" height="15.0" fill="rgb(213,120,47)" rx="2" ry="2" />
<text  x="129.57" y="415.5" >TxE..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="1060.0" y="389" width="0.2" height="15.0" fill="rgb(254,44,51)" rx="2" ry="2" />
<text  x="1063.01" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Procedure&gt;::construct&lt;Procedure, Ope, unsigned long&amp;&gt; (16 samples, 0.20%)</title><rect x="616.5" y="357" width="2.3" height="15.0" fill="rgb(243,188,15)" rx="2" ry="2" />
<text  x="619.49" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::base (2 samples, 0.02%)</title><rect x="573.7" y="389" width="0.3" height="15.0" fill="rgb(206,128,9)" rx="2" ry="2" />
<text  x="576.74" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (5 samples, 0.06%)</title><rect x="553.3" y="341" width="0.7" height="15.0" fill="rgb(223,227,34)" rx="2" ry="2" />
<text  x="556.31" y="351.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (7 samples, 0.09%)</title><rect x="118.5" y="149" width="1.1" height="15.0" fill="rgb(231,203,50)" rx="2" ry="2" />
<text  x="121.55" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (67 samples, 0.83%)</title><rect x="374.4" y="357" width="9.8" height="15.0" fill="rgb(246,39,8)" rx="2" ry="2" />
<text  x="377.45" y="367.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (3 samples, 0.04%)</title><rect x="12.6" y="517" width="0.5" height="15.0" fill="rgb(246,83,4)" rx="2" ry="2" />
<text  x="15.63" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::construct&lt;SetElement&lt;Tuple&gt;, unsigned long&amp;, Tuple*&amp;, char  (1 samples, 0.01%)</title><rect x="30.4" y="533" width="0.2" height="15.0" fill="rgb(233,170,14)" rx="2" ry="2" />
<text  x="33.43" y="543.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.02%)</title><rect x="255.8" y="325" width="0.3" height="15.0" fill="rgb(209,26,48)" rx="2" ry="2" />
<text  x="258.83" y="335.5" ></text>
</g>
<g >
<title>irq_exit (7 samples, 0.09%)</title><rect x="1186.5" y="501" width="1.0" height="15.0" fill="rgb(246,109,15)" rx="2" ry="2" />
<text  x="1189.50" y="511.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.02%)</title><rect x="1189.7" y="501" width="0.3" height="15.0" fill="rgb(205,71,39)" rx="2" ry="2" />
<text  x="1192.71" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::operator* (2 samples, 0.02%)</title><rect x="20.4" y="533" width="0.3" height="15.0" fill="rgb(248,221,34)" rx="2" ry="2" />
<text  x="23.36" y="543.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.01%)</title><rect x="164.4" y="165" width="0.1" height="15.0" fill="rgb(222,147,21)" rx="2" ry="2" />
<text  x="167.36" y="175.5" ></text>
</g>
<g >
<title>RWLock::w_unlock (42 samples, 0.52%)</title><rect x="518.6" y="373" width="6.1" height="15.0" fill="rgb(205,210,6)" rx="2" ry="2" />
<text  x="521.59" y="383.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="1153.1" y="229" width="0.1" height="15.0" fill="rgb(239,149,34)" rx="2" ry="2" />
<text  x="1156.09" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (4 samples, 0.05%)</title><rect x="531.1" y="325" width="0.6" height="15.0" fill="rgb(206,94,5)" rx="2" ry="2" />
<text  x="534.14" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (4 samples, 0.05%)</title><rect x="544.6" y="325" width="0.5" height="15.0" fill="rgb(240,34,39)" rx="2" ry="2" />
<text  x="547.56" y="335.5" ></text>
</g>
<g >
<title>mmput (938 samples, 11.60%)</title><rect x="1048.2" y="469" width="136.8" height="15.0" fill="rgb(205,135,4)" rx="2" ry="2" />
<text  x="1051.19" y="479.5" >mmput</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator* (5 samples, 0.06%)</title><rect x="297.3" y="373" width="0.7" height="15.0" fill="rgb(240,42,22)" rx="2" ry="2" />
<text  x="300.27" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="1153.1" y="293" width="0.1" height="15.0" fill="rgb(241,97,19)" rx="2" ry="2" />
<text  x="1156.09" y="303.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="272.8" y="117" width="0.1" height="15.0" fill="rgb(252,216,26)" rx="2" ry="2" />
<text  x="275.76" y="127.5" ></text>
</g>
<g >
<title>std::forward&lt;Ope&gt; (1 samples, 0.01%)</title><rect x="618.5" y="341" width="0.2" height="15.0" fill="rgb(210,210,52)" rx="2" ry="2" />
<text  x="621.53" y="351.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.05%)</title><rect x="1047.0" y="293" width="0.6" height="15.0" fill="rgb(243,157,15)" rx="2" ry="2" />
<text  x="1050.02" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.22%)</title><rect x="163.5" y="309" width="2.6" height="15.0" fill="rgb(248,159,38)" rx="2" ry="2" />
<text  x="166.48" y="319.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.01%)</title><rect x="1157.2" y="309" width="0.1" height="15.0" fill="rgb(243,124,46)" rx="2" ry="2" />
<text  x="1160.17" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="547.3" y="309" width="0.2" height="15.0" fill="rgb(238,164,31)" rx="2" ry="2" />
<text  x="550.33" y="319.5" ></text>
</g>
<g >
<title>acpi_os_read_memory (1 samples, 0.01%)</title><rect x="567.5" y="149" width="0.1" height="15.0" fill="rgb(206,207,19)" rx="2" ry="2" />
<text  x="570.47" y="159.5" ></text>
</g>
<g >
<title>event_function (3 samples, 0.04%)</title><rect x="1045.3" y="453" width="0.4" height="15.0" fill="rgb(222,29,32)" rx="2" ry="2" />
<text  x="1048.27" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::operator++ (1 samples, 0.01%)</title><rect x="20.7" y="533" width="0.1" height="15.0" fill="rgb(243,42,26)" rx="2" ry="2" />
<text  x="23.65" y="543.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.06%)</title><rect x="14.2" y="469" width="0.8" height="15.0" fill="rgb(242,208,35)" rx="2" ry="2" />
<text  x="17.23" y="479.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (1 samples, 0.01%)</title><rect x="358.8" y="389" width="0.2" height="15.0" fill="rgb(244,191,51)" rx="2" ry="2" />
<text  x="361.84" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator* (1 samples, 0.01%)</title><rect x="460.7" y="341" width="0.1" height="15.0" fill="rgb(228,24,11)" rx="2" ry="2" />
<text  x="463.67" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::cascadeAbort (8 samples, 0.10%)</title><rect x="223.0" y="341" width="1.2" height="15.0" fill="rgb(252,132,37)" rx="2" ry="2" />
<text  x="226.01" y="351.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="468.1" y="245" width="0.2" height="15.0" fill="rgb(247,193,31)" rx="2" ry="2" />
<text  x="471.11" y="255.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (12 samples, 0.15%)</title><rect x="117.8" y="277" width="1.8" height="15.0" fill="rgb(214,107,37)" rx="2" ry="2" />
<text  x="120.82" y="287.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.09%)</title><rect x="164.8" y="133" width="1.0" height="15.0" fill="rgb(207,30,7)" rx="2" ry="2" />
<text  x="167.79" y="143.5" ></text>
</g>
<g >
<title>TxExecutor::get_tuple (1 samples, 0.01%)</title><rect x="18.2" y="533" width="0.1" height="15.0" fill="rgb(225,31,7)" rx="2" ry="2" />
<text  x="21.17" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="381.0" y="309" width="0.2" height="15.0" fill="rgb(228,87,10)" rx="2" ry="2" />
<text  x="384.01" y="319.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (28 samples, 0.35%)</title><rect x="317.0" y="261" width="4.0" height="15.0" fill="rgb(211,184,6)" rx="2" ry="2" />
<text  x="319.96" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (3 samples, 0.04%)</title><rect x="389.2" y="309" width="0.4" height="15.0" fill="rgb(241,46,31)" rx="2" ry="2" />
<text  x="392.18" y="319.5" ></text>
</g>
<g >
<title>__exp1_fma (1 samples, 0.01%)</title><rect x="19.5" y="533" width="0.1" height="15.0" fill="rgb(215,99,1)" rx="2" ry="2" />
<text  x="22.48" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.02%)</title><rect x="546.0" y="309" width="0.3" height="15.0" fill="rgb(238,122,31)" rx="2" ry="2" />
<text  x="549.02" y="319.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (96 samples, 1.19%)</title><rect x="504.6" y="373" width="14.0" height="15.0" fill="rgb(247,223,41)" rx="2" ry="2" />
<text  x="507.58" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Result*, std::vector&lt;Result, std::allocator&lt;Result&gt; &gt; &gt;::base (2 samples, 0.02%)</title><rect x="591.4" y="389" width="0.3" height="15.0" fill="rgb(250,51,9)" rx="2" ry="2" />
<text  x="594.39" y="399.5" ></text>
</g>
<g >
<title>__perf_event_enable (5 samples, 0.06%)</title><rect x="1046.0" y="421" width="0.7" height="15.0" fill="rgb(241,113,52)" rx="2" ry="2" />
<text  x="1049.00" y="431.5" ></text>
</g>
<g >
<title>__GI___nanosleep (5 samples, 0.06%)</title><rect x="1046.9" y="469" width="0.7" height="15.0" fill="rgb(244,176,18)" rx="2" ry="2" />
<text  x="1049.88" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="346.3" y="389" width="0.1" height="15.0" fill="rgb(237,226,23)" rx="2" ry="2" />
<text  x="349.29" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::insert (4 samples, 0.05%)</title><rect x="532.5" y="357" width="0.5" height="15.0" fill="rgb(245,36,40)" rx="2" ry="2" />
<text  x="535.45" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::construct&lt;SetElement&lt;Tuple&gt;, unsigned long&amp;, Tuple*&amp;, char  (182 samples, 2.25%)</title><rect x="432.7" y="357" width="26.5" height="15.0" fill="rgb(239,221,42)" rx="2" ry="2" />
<text  x="435.66" y="367.5" >s..</text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.01%)</title><rect x="572.7" y="37" width="0.2" height="15.0" fill="rgb(226,178,27)" rx="2" ry="2" />
<text  x="575.72" y="47.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1186.1" y="517" width="0.1" height="15.0" fill="rgb(213,183,17)" rx="2" ry="2" />
<text  x="1189.06" y="527.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (6,883 samples, 85.10%)</title><rect x="40.8" y="469" width="1004.2" height="15.0" fill="rgb(224,96,20)" rx="2" ry="2" />
<text  x="43.78" y="479.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::operator- (1 samples, 0.01%)</title><rect x="20.8" y="533" width="0.1" height="15.0" fill="rgb(209,222,2)" rx="2" ry="2" />
<text  x="23.80" y="543.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (1 samples, 0.01%)</title><rect x="311.1" y="341" width="0.2" height="15.0" fill="rgb(223,229,32)" rx="2" ry="2" />
<text  x="314.13" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::concat (5 samples, 0.06%)</title><rect x="546.7" y="325" width="0.8" height="15.0" fill="rgb(217,16,49)" rx="2" ry="2" />
<text  x="549.75" y="335.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (41 samples, 0.51%)</title><rect x="518.7" y="357" width="6.0" height="15.0" fill="rgb(243,139,17)" rx="2" ry="2" />
<text  x="521.74" y="367.5" ></text>
</g>
<g >
<title>loadAcquire&lt;unsigned long&gt; (2 samples, 0.02%)</title><rect x="591.8" y="405" width="0.3" height="15.0" fill="rgb(235,31,34)" rx="2" ry="2" />
<text  x="594.83" y="415.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (6 samples, 0.07%)</title><rect x="494.2" y="341" width="0.9" height="15.0" fill="rgb(237,194,19)" rx="2" ry="2" />
<text  x="497.23" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (2 samples, 0.02%)</title><rect x="143.8" y="341" width="0.3" height="15.0" fill="rgb(222,127,53)" rx="2" ry="2" />
<text  x="146.79" y="351.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.01%)</title><rect x="267.2" y="165" width="0.2" height="15.0" fill="rgb(224,203,37)" rx="2" ry="2" />
<text  x="270.21" y="175.5" ></text>
</g>
<g >
<title>TxExecutor::addCommitSemaphore (28 samples, 0.35%)</title><rect x="533.6" y="373" width="4.1" height="15.0" fill="rgb(218,27,27)" rx="2" ry="2" />
<text  x="536.62" y="383.5" ></text>
</g>
<g >
<title>__perf_event_enable (5 samples, 0.06%)</title><rect x="13.5" y="421" width="0.7" height="15.0" fill="rgb(224,20,42)" rx="2" ry="2" />
<text  x="16.50" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="204.5" y="341" width="0.1" height="15.0" fill="rgb(213,206,54)" rx="2" ry="2" />
<text  x="207.48" y="351.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (15 samples, 0.19%)</title><rect x="308.8" y="357" width="2.2" height="15.0" fill="rgb(207,71,32)" rx="2" ry="2" />
<text  x="311.79" y="367.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="106.4" y="293" width="0.2" height="15.0" fill="rgb(219,124,54)" rx="2" ry="2" />
<text  x="109.44" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Procedure&gt; &gt;::construct&lt;Procedure, Ope, unsigned long&amp;&gt; (27 samples, 0.33%)</title><rect x="615.6" y="373" width="3.9" height="15.0" fill="rgb(241,142,23)" rx="2" ry="2" />
<text  x="618.61" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="150.9" y="309" width="0.2" height="15.0" fill="rgb(241,65,12)" rx="2" ry="2" />
<text  x="153.93" y="319.5" ></text>
</g>
<g >
<title>ctx_sched_out (3 samples, 0.04%)</title><rect x="265.8" y="197" width="0.4" height="15.0" fill="rgb(246,19,24)" rx="2" ry="2" />
<text  x="268.75" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="13.2" y="469" width="0.3" height="15.0" fill="rgb(229,158,38)" rx="2" ry="2" />
<text  x="16.21" y="479.5" ></text>
</g>
<g >
<title>__schedule (164 samples, 2.03%)</title><rect x="321.0" y="245" width="24.0" height="15.0" fill="rgb(225,181,31)" rx="2" ry="2" />
<text  x="324.05" y="255.5" >_..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::base (5 samples, 0.06%)</title><rect x="1046.0" y="533" width="0.7" height="15.0" fill="rgb(233,204,23)" rx="2" ry="2" />
<text  x="1049.00" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::begin (13 samples, 0.16%)</title><rect x="411.2" y="373" width="1.9" height="15.0" fill="rgb(211,84,16)" rx="2" ry="2" />
<text  x="414.21" y="383.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (2 samples, 0.02%)</title><rect x="459.5" y="357" width="0.3" height="15.0" fill="rgb(249,36,32)" rx="2" ry="2" />
<text  x="462.50" y="367.5" ></text>
</g>
<g >
<title>__perf_event_enable (3 samples, 0.04%)</title><rect x="272.9" y="117" width="0.4" height="15.0" fill="rgb(221,109,39)" rx="2" ry="2" />
<text  x="275.90" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::back (1 samples, 0.01%)</title><rect x="232.6" y="373" width="0.2" height="15.0" fill="rgb(235,162,4)" rx="2" ry="2" />
<text  x="235.64" y="383.5" ></text>
</g>
<g >
<title>ktime_get (2 samples, 0.02%)</title><rect x="318.0" y="245" width="0.3" height="15.0" fill="rgb(251,146,53)" rx="2" ry="2" />
<text  x="320.98" y="255.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (90 samples, 1.11%)</title><rect x="331.0" y="165" width="13.1" height="15.0" fill="rgb(214,39,22)" rx="2" ry="2" />
<text  x="333.97" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="311.9" y="341" width="0.1" height="15.0" fill="rgb(245,185,38)" rx="2" ry="2" />
<text  x="314.86" y="351.5" ></text>
</g>
<g >
<title>do_nanosleep (189 samples, 2.34%)</title><rect x="466.4" y="277" width="27.5" height="15.0" fill="rgb(237,188,35)" rx="2" ry="2" />
<text  x="469.36" y="287.5" >d..</text>
</g>
<g >
<title>usleep (90 samples, 1.11%)</title><rect x="560.5" y="373" width="13.1" height="15.0" fill="rgb(252,168,1)" rx="2" ry="2" />
<text  x="563.46" y="383.5" ></text>
</g>
<g >
<title>put_prev_task_fair (2 samples, 0.02%)</title><rect x="344.4" y="213" width="0.3" height="15.0" fill="rgb(243,24,5)" rx="2" ry="2" />
<text  x="347.39" y="223.5" ></text>
</g>
<g >
<title>native_apic_msr_write (1 samples, 0.01%)</title><rect x="333.3" y="149" width="0.1" height="15.0" fill="rgb(215,122,13)" rx="2" ry="2" />
<text  x="336.30" y="159.5" ></text>
</g>
<g >
<title>TxExecutor::concat (19 samples, 0.23%)</title><rect x="113.9" y="357" width="2.7" height="15.0" fill="rgb(208,166,40)" rx="2" ry="2" />
<text  x="116.88" y="367.5" ></text>
</g>
<g >
<title>remote_function (3 samples, 0.04%)</title><rect x="12.6" y="469" width="0.5" height="15.0" fill="rgb(242,149,42)" rx="2" ry="2" />
<text  x="15.63" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (3 samples, 0.04%)</title><rect x="582.9" y="373" width="0.5" height="15.0" fill="rgb(228,172,2)" rx="2" ry="2" />
<text  x="585.93" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator- (9 samples, 0.11%)</title><rect x="529.8" y="325" width="1.3" height="15.0" fill="rgb(221,216,36)" rx="2" ry="2" />
<text  x="532.82" y="335.5" ></text>
</g>
<g >
<title>reweight_entity (1 samples, 0.01%)</title><rect x="324.8" y="165" width="0.2" height="15.0" fill="rgb(236,90,11)" rx="2" ry="2" />
<text  x="327.84" y="175.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="318.1" y="229" width="0.2" height="15.0" fill="rgb(243,217,7)" rx="2" ry="2" />
<text  x="321.13" y="239.5" ></text>
</g>
<g >
<title>nmi_restore (5 samples, 0.06%)</title><rect x="343.4" y="149" width="0.7" height="15.0" fill="rgb(251,72,14)" rx="2" ry="2" />
<text  x="346.37" y="159.5" ></text>
</g>
<g >
<title>myBinarySearch (3 samples, 0.04%)</title><rect x="222.1" y="325" width="0.5" height="15.0" fill="rgb(233,20,11)" rx="2" ry="2" />
<text  x="225.13" y="335.5" ></text>
</g>
<g >
<title>__mplog_fma (1 samples, 0.01%)</title><rect x="32.9" y="373" width="0.2" height="15.0" fill="rgb(223,198,48)" rx="2" ry="2" />
<text  x="35.91" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.01%)</title><rect x="140.9" y="341" width="0.1" height="15.0" fill="rgb(219,188,44)" rx="2" ry="2" />
<text  x="143.87" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (1 samples, 0.01%)</title><rect x="398.2" y="309" width="0.2" height="15.0" fill="rgb(252,55,38)" rx="2" ry="2" />
<text  x="401.23" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator* (1 samples, 0.01%)</title><rect x="226.4" y="357" width="0.1" height="15.0" fill="rgb(218,68,42)" rx="2" ry="2" />
<text  x="229.36" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::operator- (7 samples, 0.09%)</title><rect x="620.7" y="357" width="1.0" height="15.0" fill="rgb(228,117,19)" rx="2" ry="2" />
<text  x="623.72" y="367.5" ></text>
</g>
<g >
<title>account_entity_dequeue (1 samples, 0.01%)</title><rect x="324.1" y="181" width="0.2" height="15.0" fill="rgb(222,3,12)" rx="2" ry="2" />
<text  x="327.11" y="191.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.01%)</title><rect x="398.7" y="261" width="0.1" height="15.0" fill="rgb(205,106,27)" rx="2" ry="2" />
<text  x="401.66" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_Temporary_value::_M_ptr (1 samples, 0.01%)</title><rect x="312.0" y="325" width="0.1" height="15.0" fill="rgb(250,38,29)" rx="2" ry="2" />
<text  x="315.00" y="335.5" ></text>
</g>
<g >
<title>ktime_get (2 samples, 0.02%)</title><rect x="264.6" y="245" width="0.3" height="15.0" fill="rgb(248,210,2)" rx="2" ry="2" />
<text  x="267.59" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (60 samples, 0.74%)</title><rect x="149.3" y="341" width="8.8" height="15.0" fill="rgb(207,11,21)" rx="2" ry="2" />
<text  x="152.33" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator* (3 samples, 0.04%)</title><rect x="404.8" y="373" width="0.4" height="15.0" fill="rgb(240,184,2)" rx="2" ry="2" />
<text  x="407.79" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::begin (5 samples, 0.06%)</title><rect x="123.7" y="373" width="0.7" height="15.0" fill="rgb(207,4,3)" rx="2" ry="2" />
<text  x="126.65" y="383.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (12 samples, 0.15%)</title><rect x="11.5" y="549" width="1.7" height="15.0" fill="rgb(243,23,40)" rx="2" ry="2" />
<text  x="14.46" y="559.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.06%)</title><rect x="16.0" y="469" width="0.7" height="15.0" fill="rgb(213,73,16)" rx="2" ry="2" />
<text  x="18.98" y="479.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (3 samples, 0.04%)</title><rect x="619.1" y="357" width="0.4" height="15.0" fill="rgb(238,88,22)" rx="2" ry="2" />
<text  x="622.11" y="367.5" ></text>
</g>
<g >
<title>native_apic_msr_write (1 samples, 0.01%)</title><rect x="568.5" y="149" width="0.1" height="15.0" fill="rgb(239,144,54)" rx="2" ry="2" />
<text  x="571.49" y="159.5" ></text>
</g>
<g >
<title>page_remove_rmap (48 samples, 0.59%)</title><rect x="1060.4" y="389" width="7.0" height="15.0" fill="rgb(220,144,46)" rx="2" ry="2" />
<text  x="1063.45" y="399.5" ></text>
</g>
<g >
<title>OpElement&lt;Tuple&gt;::OpElement (7 samples, 0.09%)</title><rect x="235.1" y="309" width="1.0" height="15.0" fill="rgb(231,121,38)" rx="2" ry="2" />
<text  x="238.12" y="319.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (9 samples, 0.11%)</title><rect x="1186.2" y="517" width="1.3" height="15.0" fill="rgb(238,115,23)" rx="2" ry="2" />
<text  x="1189.21" y="527.5" ></text>
</g>
<g >
<title>remote_function (5 samples, 0.06%)</title><rect x="1046.0" y="453" width="0.7" height="15.0" fill="rgb(225,81,0)" rx="2" ry="2" />
<text  x="1049.00" y="463.5" ></text>
</g>
<g >
<title>dec_zone_page_state (1 samples, 0.01%)</title><rect x="1048.2" y="405" width="0.1" height="15.0" fill="rgb(246,224,39)" rx="2" ry="2" />
<text  x="1051.19" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="398.5" y="341" width="0.2" height="15.0" fill="rgb(244,126,36)" rx="2" ry="2" />
<text  x="401.52" y="351.5" ></text>
</g>
<g >
<title>usleep (15 samples, 0.19%)</title><rect x="117.5" y="357" width="2.2" height="15.0" fill="rgb(220,46,0)" rx="2" ry="2" />
<text  x="120.52" y="367.5" ></text>
</g>
<g >
<title>myBinaryInsert (6 samples, 0.07%)</title><rect x="203.7" y="357" width="0.9" height="15.0" fill="rgb(222,183,29)" rx="2" ry="2" />
<text  x="206.75" y="367.5" ></text>
</g>
<g >
<title>myBinarySearch (29 samples, 0.36%)</title><rect x="144.2" y="341" width="4.3" height="15.0" fill="rgb(208,38,48)" rx="2" ry="2" />
<text  x="147.22" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (1 samples, 0.01%)</title><rect x="106.4" y="261" width="0.2" height="15.0" fill="rgb(224,173,52)" rx="2" ry="2" />
<text  x="109.44" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (3 samples, 0.04%)</title><rect x="545.1" y="309" width="0.5" height="15.0" fill="rgb(235,108,48)" rx="2" ry="2" />
<text  x="548.14" y="319.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="16.0" y="501" width="0.7" height="15.0" fill="rgb(214,108,41)" rx="2" ry="2" />
<text  x="18.98" y="511.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.05%)</title><rect x="572.7" y="69" width="0.6" height="15.0" fill="rgb(230,87,54)" rx="2" ry="2" />
<text  x="575.72" y="79.5" ></text>
</g>
<g >
<title>RWLock::w_unlock (11 samples, 0.14%)</title><rect x="138.4" y="357" width="1.6" height="15.0" fill="rgb(214,97,37)" rx="2" ry="2" />
<text  x="141.39" y="367.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.01%)</title><rect x="316.1" y="133" width="0.1" height="15.0" fill="rgb(207,9,23)" rx="2" ry="2" />
<text  x="319.09" y="143.5" ></text>
</g>
<g >
<title>nohz_balance_exit_idle.part.98 (2 samples, 0.02%)</title><rect x="11.5" y="373" width="0.3" height="15.0" fill="rgb(211,140,18)" rx="2" ry="2" />
<text  x="14.46" y="383.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (1 samples, 0.01%)</title><rect x="459.1" y="341" width="0.1" height="15.0" fill="rgb(234,203,49)" rx="2" ry="2" />
<text  x="462.07" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_Temporary_value::~_Temporary_value (1 samples, 0.01%)</title><rect x="312.0" y="341" width="0.1" height="15.0" fill="rgb(225,40,10)" rx="2" ry="2" />
<text  x="315.00" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.01%)</title><rect x="144.1" y="341" width="0.1" height="15.0" fill="rgb(233,93,53)" rx="2" ry="2" />
<text  x="147.08" y="351.5" ></text>
</g>
<g >
<title>ctx_resched (5 samples, 0.06%)</title><rect x="13.5" y="405" width="0.7" height="15.0" fill="rgb(216,59,45)" rx="2" ry="2" />
<text  x="16.50" y="415.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (3 samples, 0.04%)</title><rect x="272.9" y="181" width="0.4" height="15.0" fill="rgb(234,143,2)" rx="2" ry="2" />
<text  x="275.90" y="191.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.01%)</title><rect x="118.0" y="213" width="0.1" height="15.0" fill="rgb(218,27,48)" rx="2" ry="2" />
<text  x="120.96" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (15 samples, 0.19%)</title><rect x="1149.6" y="341" width="2.2" height="15.0" fill="rgb(244,198,45)" rx="2" ry="2" />
<text  x="1152.59" y="351.5" ></text>
</g>
<g >
<title>RWLock::w_unlock (1 samples, 0.01%)</title><rect x="129.1" y="373" width="0.1" height="15.0" fill="rgb(214,8,3)" rx="2" ry="2" />
<text  x="132.05" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.04%)</title><rect x="321.6" y="213" width="0.5" height="15.0" fill="rgb(219,179,40)" rx="2" ry="2" />
<text  x="324.63" y="223.5" ></text>
</g>
<g >
<title>ctx_resched (13 samples, 0.16%)</title><rect x="1187.8" y="421" width="1.9" height="15.0" fill="rgb(212,95,5)" rx="2" ry="2" />
<text  x="1190.81" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (83 samples, 1.03%)</title><rect x="561.5" y="325" width="12.1" height="15.0" fill="rgb(251,146,29)" rx="2" ry="2" />
<text  x="564.48" y="335.5" ></text>
</g>
<g >
<title>TxExecutor::spinWait (268 samples, 3.31%)</title><rect x="307.2" y="389" width="39.1" height="15.0" fill="rgb(232,99,8)" rx="2" ry="2" />
<text  x="310.19" y="399.5" >TxE..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (1 samples, 0.01%)</title><rect x="546.6" y="293" width="0.1" height="15.0" fill="rgb(214,141,37)" rx="2" ry="2" />
<text  x="549.60" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="544.3" y="309" width="0.1" height="15.0" fill="rgb(250,212,28)" rx="2" ry="2" />
<text  x="547.27" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int&amp;&gt; (1 samples, 0.01%)</title><rect x="1045.9" y="549" width="0.1" height="15.0" fill="rgb(223,68,45)" rx="2" ry="2" />
<text  x="1048.86" y="559.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.01%)</title><rect x="118.0" y="181" width="0.1" height="15.0" fill="rgb(254,40,14)" rx="2" ry="2" />
<text  x="120.96" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (3 samples, 0.04%)</title><rect x="461.1" y="325" width="0.4" height="15.0" fill="rgb(244,58,31)" rx="2" ry="2" />
<text  x="464.11" y="335.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.01%)</title><rect x="1187.4" y="469" width="0.1" height="15.0" fill="rgb(210,82,39)" rx="2" ry="2" />
<text  x="1190.37" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (3 samples, 0.04%)</title><rect x="153.7" y="309" width="0.4" height="15.0" fill="rgb(246,144,45)" rx="2" ry="2" />
<text  x="156.71" y="319.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (19 samples, 0.23%)</title><rect x="368.8" y="357" width="2.7" height="15.0" fill="rgb(249,125,23)" rx="2" ry="2" />
<text  x="371.76" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (5 samples, 0.06%)</title><rect x="148.5" y="341" width="0.7" height="15.0" fill="rgb(210,1,8)" rx="2" ry="2" />
<text  x="151.45" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (3 samples, 0.04%)</title><rect x="383.2" y="341" width="0.4" height="15.0" fill="rgb(210,181,20)" rx="2" ry="2" />
<text  x="386.20" y="351.5" ></text>
</g>
<g >
<title>update_cfs_group (8 samples, 0.10%)</title><rect x="473.1" y="181" width="1.1" height="15.0" fill="rgb(218,164,17)" rx="2" ry="2" />
<text  x="476.07" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="12.5" y="501" width="0.1" height="15.0" fill="rgb(220,147,44)" rx="2" ry="2" />
<text  x="15.48" y="511.5" ></text>
</g>
<g >
<title>Tuple::ownersAdd (48 samples, 0.59%)</title><rect x="524.7" y="373" width="7.0" height="15.0" fill="rgb(252,172,35)" rx="2" ry="2" />
<text  x="527.72" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::emplace_back&lt;unsigned long&amp;, Tuple*&amp;, char  (1 samples, 0.01%)</title><rect x="346.6" y="389" width="0.1" height="15.0" fill="rgb(232,112,52)" rx="2" ry="2" />
<text  x="349.58" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="120.2" y="373" width="0.2" height="15.0" fill="rgb(237,193,27)" rx="2" ry="2" />
<text  x="123.15" y="383.5" ></text>
</g>
<g >
<title>rebalance_domains (5 samples, 0.06%)</title><rect x="1186.6" y="453" width="0.8" height="15.0" fill="rgb(210,211,46)" rx="2" ry="2" />
<text  x="1189.64" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="88.9" y="293" width="0.2" height="15.0" fill="rgb(236,77,29)" rx="2" ry="2" />
<text  x="91.93" y="303.5" ></text>
</g>
<g >
<title>remote_function (15 samples, 0.19%)</title><rect x="1187.5" y="469" width="2.2" height="15.0" fill="rgb(219,8,45)" rx="2" ry="2" />
<text  x="1190.52" y="479.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="465.3" y="277" width="0.3" height="15.0" fill="rgb(225,177,44)" rx="2" ry="2" />
<text  x="468.34" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;Ope&gt; (2 samples, 0.02%)</title><rect x="618.8" y="357" width="0.3" height="15.0" fill="rgb(238,175,52)" rx="2" ry="2" />
<text  x="621.82" y="367.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.01%)</title><rect x="396.6" y="229" width="0.2" height="15.0" fill="rgb(232,32,22)" rx="2" ry="2" />
<text  x="399.62" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (22 samples, 0.27%)</title><rect x="120.4" y="373" width="3.3" height="15.0" fill="rgb(207,32,35)" rx="2" ry="2" />
<text  x="123.44" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (11 samples, 0.14%)</title><rect x="230.7" y="341" width="1.6" height="15.0" fill="rgb(220,72,3)" rx="2" ry="2" />
<text  x="233.74" y="351.5" ></text>
</g>
<g >
<title>call_rwsem_down_write_failed_killable (2 samples, 0.02%)</title><rect x="1045.0" y="373" width="0.3" height="15.0" fill="rgb(218,67,26)" rx="2" ry="2" />
<text  x="1047.98" y="383.5" ></text>
</g>
<g >
<title>TxExecutor::conflict (1 samples, 0.01%)</title><rect x="213.1" y="357" width="0.1" height="15.0" fill="rgb(223,111,38)" rx="2" ry="2" />
<text  x="216.09" y="367.5" ></text>
</g>
<g >
<title>TxExecutor::concat (2 samples, 0.02%)</title><rect x="224.2" y="341" width="0.3" height="15.0" fill="rgb(253,97,47)" rx="2" ry="2" />
<text  x="227.17" y="351.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="116.8" y="261" width="0.1" height="15.0" fill="rgb(206,163,21)" rx="2" ry="2" />
<text  x="119.80" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="11.5" y="485" width="0.3" height="15.0" fill="rgb(245,213,39)" rx="2" ry="2" />
<text  x="14.46" y="495.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.01%)</title><rect x="11.9" y="341" width="0.1" height="15.0" fill="rgb(240,21,15)" rx="2" ry="2" />
<text  x="14.90" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="90.5" y="341" width="0.2" height="15.0" fill="rgb(222,104,40)" rx="2" ry="2" />
<text  x="93.53" y="351.5" ></text>
</g>
<g >
<title>__ieee754_pow_fma (1 samples, 0.01%)</title><rect x="32.9" y="421" width="0.2" height="15.0" fill="rgb(206,23,41)" rx="2" ry="2" />
<text  x="35.91" y="431.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="316.1" y="261" width="0.1" height="15.0" fill="rgb(252,213,21)" rx="2" ry="2" />
<text  x="319.09" y="271.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.06%)</title><rect x="13.5" y="389" width="0.7" height="15.0" fill="rgb(229,190,48)" rx="2" ry="2" />
<text  x="16.50" y="399.5" ></text>
</g>
<g >
<title>__nptl_deallocate_tsd (2 samples, 0.02%)</title><rect x="1045.0" y="517" width="0.3" height="15.0" fill="rgb(224,98,24)" rx="2" ry="2" />
<text  x="1047.98" y="527.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (15 samples, 0.19%)</title><rect x="86.4" y="325" width="2.2" height="15.0" fill="rgb(225,108,29)" rx="2" ry="2" />
<text  x="89.45" y="335.5" ></text>
</g>
<g >
<title>myBinaryInsert (1 samples, 0.01%)</title><rect x="311.7" y="357" width="0.2" height="15.0" fill="rgb(236,168,27)" rx="2" ry="2" />
<text  x="314.71" y="367.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.01%)</title><rect x="344.8" y="197" width="0.2" height="15.0" fill="rgb(220,224,52)" rx="2" ry="2" />
<text  x="347.83" y="207.5" ></text>
</g>
<g >
<title>Tuple::ownersRemove (1 samples, 0.01%)</title><rect x="313.0" y="357" width="0.2" height="15.0" fill="rgb(216,213,13)" rx="2" ry="2" />
<text  x="316.02" y="367.5" ></text>
</g>
<g >
<title>__GI___nanosleep (3 samples, 0.04%)</title><rect x="396.5" y="357" width="0.4" height="15.0" fill="rgb(205,167,21)" rx="2" ry="2" />
<text  x="399.48" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (2 samples, 0.02%)</title><rect x="31.6" y="533" width="0.3" height="15.0" fill="rgb(231,212,52)" rx="2" ry="2" />
<text  x="34.59" y="543.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.05%)</title><rect x="572.7" y="133" width="0.6" height="15.0" fill="rgb(212,97,50)" rx="2" ry="2" />
<text  x="575.72" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::emplace_back&lt;int&amp;&gt; (28 samples, 0.35%)</title><rect x="386.0" y="357" width="4.1" height="15.0" fill="rgb(231,104,51)" rx="2" ry="2" />
<text  x="388.97" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.02%)</title><rect x="543.4" y="325" width="0.3" height="15.0" fill="rgb(234,68,20)" rx="2" ry="2" />
<text  x="546.39" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="140.4" y="325" width="0.2" height="15.0" fill="rgb(212,165,16)" rx="2" ry="2" />
<text  x="143.43" y="335.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.01%)</title><rect x="265.0" y="261" width="0.2" height="15.0" fill="rgb(218,102,13)" rx="2" ry="2" />
<text  x="268.02" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1045.0" y="453" width="0.3" height="15.0" fill="rgb(249,125,0)" rx="2" ry="2" />
<text  x="1047.98" y="463.5" ></text>
</g>
<g >
<title>ghes_copy_tofrom_phys (1 samples, 0.01%)</title><rect x="13.5" y="341" width="0.1" height="15.0" fill="rgb(236,71,21)" rx="2" ry="2" />
<text  x="16.50" y="351.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (34 samples, 0.42%)</title><rect x="267.8" y="213" width="5.0" height="15.0" fill="rgb(209,16,43)" rx="2" ry="2" />
<text  x="270.80" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (5 samples, 0.06%)</title><rect x="161.7" y="341" width="0.8" height="15.0" fill="rgb(244,204,12)" rx="2" ry="2" />
<text  x="164.73" y="351.5" ></text>
</g>
<g >
<title>Tuple::remove (1 samples, 0.01%)</title><rect x="159.1" y="341" width="0.2" height="15.0" fill="rgb(208,63,54)" rx="2" ry="2" />
<text  x="162.10" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_enable (91 samples, 1.13%)</title><rect x="330.8" y="197" width="13.3" height="15.0" fill="rgb(245,220,44)" rx="2" ry="2" />
<text  x="333.82" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;SetElement&lt;Tuple&gt; &gt;::construct&lt;SetElement&lt;Tuple&gt;, unsigned long&amp;, Tuple*&amp;, char  (1 samples, 0.01%)</title><rect x="233.4" y="357" width="0.1" height="15.0" fill="rgb(229,97,21)" rx="2" ry="2" />
<text  x="236.37" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (4 samples, 0.05%)</title><rect x="544.6" y="309" width="0.5" height="15.0" fill="rgb(248,96,37)" rx="2" ry="2" />
<text  x="547.56" y="319.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.01%)</title><rect x="327.3" y="181" width="0.2" height="15.0" fill="rgb(251,135,12)" rx="2" ry="2" />
<text  x="330.32" y="191.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.05%)</title><rect x="14.4" y="373" width="0.6" height="15.0" fill="rgb(238,185,37)" rx="2" ry="2" />
<text  x="17.38" y="383.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.05%)</title><rect x="14.4" y="389" width="0.6" height="15.0" fill="rgb(253,210,12)" rx="2" ry="2" />
<text  x="17.38" y="399.5" ></text>
</g>
<g >
<title>native_write_cr2 (1 samples, 0.01%)</title><rect x="333.7" y="149" width="0.2" height="15.0" fill="rgb(249,180,16)" rx="2" ry="2" />
<text  x="336.74" y="159.5" ></text>
</g>
<g >
<title>unmap_page_range (935 samples, 11.56%)</title><rect x="1048.6" y="405" width="136.4" height="15.0" fill="rgb(232,160,43)" rx="2" ry="2" />
<text  x="1051.63" y="415.5" >unmap_page_range</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="550.4" y="357" width="0.1" height="15.0" fill="rgb(246,46,43)" rx="2" ry="2" />
<text  x="553.40" y="367.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.01%)</title><rect x="164.2" y="149" width="0.2" height="15.0" fill="rgb(223,210,9)" rx="2" ry="2" />
<text  x="167.21" y="159.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="1046.0" y="501" width="0.7" height="15.0" fill="rgb(216,198,15)" rx="2" ry="2" />
<text  x="1049.00" y="511.5" ></text>
</g>
<g >
<title>account_entity_dequeue (1 samples, 0.01%)</title><rect x="323.4" y="197" width="0.1" height="15.0" fill="rgb(230,35,6)" rx="2" ry="2" />
<text  x="326.38" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.01%)</title><rect x="159.0" y="293" width="0.1" height="15.0" fill="rgb(247,196,19)" rx="2" ry="2" />
<text  x="161.96" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.01%)</title><rect x="430.0" y="309" width="0.2" height="15.0" fill="rgb(248,166,21)" rx="2" ry="2" />
<text  x="433.03" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.01%)</title><rect x="223.0" y="309" width="0.2" height="15.0" fill="rgb(208,174,40)" rx="2" ry="2" />
<text  x="226.01" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.02%)</title><rect x="314.8" y="341" width="0.3" height="15.0" fill="rgb(238,30,31)" rx="2" ry="2" />
<text  x="317.77" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (3 samples, 0.04%)</title><rect x="38.0" y="533" width="0.4" height="15.0" fill="rgb(216,0,44)" rx="2" ry="2" />
<text  x="41.01" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="316.1" y="149" width="0.1" height="15.0" fill="rgb(232,79,44)" rx="2" ry="2" />
<text  x="319.09" y="159.5" ></text>
</g>
<g >
<title>update_curr (2 samples, 0.02%)</title><rect x="164.1" y="165" width="0.3" height="15.0" fill="rgb(212,129,31)" rx="2" ry="2" />
<text  x="167.07" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::begin (4 samples, 0.05%)</title><rect x="302.7" y="373" width="0.5" height="15.0" fill="rgb(206,116,43)" rx="2" ry="2" />
<text  x="305.67" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="1186.1" y="485" width="0.1" height="15.0" fill="rgb(231,72,8)" rx="2" ry="2" />
<text  x="1189.06" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (1 samples, 0.01%)</title><rect x="90.4" y="341" width="0.1" height="15.0" fill="rgb(207,207,39)" rx="2" ry="2" />
<text  x="93.39" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (3 samples, 0.04%)</title><rect x="97.5" y="341" width="0.5" height="15.0" fill="rgb(230,41,16)" rx="2" ry="2" />
<text  x="100.54" y="351.5" ></text>
</g>
<g >
<title>finish_task_switch (120 samples, 1.48%)</title><rect x="475.1" y="229" width="17.5" height="15.0" fill="rgb(215,78,45)" rx="2" ry="2" />
<text  x="478.11" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;int const*, int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="211.0" y="341" width="0.2" height="15.0" fill="rgb(243,81,29)" rx="2" ry="2" />
<text  x="214.04" y="351.5" ></text>
</g>
<g >
<title>__GI___nanosleep (88 samples, 1.09%)</title><rect x="560.8" y="357" width="12.8" height="15.0" fill="rgb(214,18,19)" rx="2" ry="2" />
<text  x="563.75" y="367.5" ></text>
</g>
<g >
<title>free_pgd_range (1 samples, 0.01%)</title><rect x="1048.2" y="421" width="0.1" height="15.0" fill="rgb(224,1,6)" rx="2" ry="2" />
<text  x="1051.19" y="431.5" ></text>
</g>
<g >
<title>Tuple::ownersRemove (12 samples, 0.15%)</title><rect x="140.0" y="357" width="1.7" height="15.0" fill="rgb(226,65,30)" rx="2" ry="2" />
<text  x="142.99" y="367.5" ></text>
</g>
<g >
<title>update_cfs_group (2 samples, 0.02%)</title><rect x="564.7" y="181" width="0.3" height="15.0" fill="rgb(224,60,9)" rx="2" ry="2" />
<text  x="567.69" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (4 samples, 0.05%)</title><rect x="461.5" y="341" width="0.6" height="15.0" fill="rgb(236,181,12)" rx="2" ry="2" />
<text  x="464.55" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::woundRelease (58 samples, 0.72%)</title><rect x="541.9" y="357" width="8.5" height="15.0" fill="rgb(229,98,31)" rx="2" ry="2" />
<text  x="544.93" y="367.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.01%)</title><rect x="562.2" y="245" width="0.2" height="15.0" fill="rgb(216,30,3)" rx="2" ry="2" />
<text  x="565.21" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;Tuple*&amp;&gt; (1 samples, 0.01%)</title><rect x="256.6" y="341" width="0.1" height="15.0" fill="rgb(217,40,18)" rx="2" ry="2" />
<text  x="259.56" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;Tuple*&amp;&gt; (2 samples, 0.02%)</title><rect x="459.2" y="357" width="0.3" height="15.0" fill="rgb(227,127,21)" rx="2" ry="2" />
<text  x="462.21" y="367.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.01%)</title><rect x="470.3" y="261" width="0.1" height="15.0" fill="rgb(243,96,10)" rx="2" ry="2" />
<text  x="473.30" y="271.5" ></text>
</g>
<g >
<title>dequeue_task_fair (5 samples, 0.06%)</title><rect x="163.8" y="197" width="0.7" height="15.0" fill="rgb(219,133,38)" rx="2" ry="2" />
<text  x="166.77" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (1 samples, 0.01%)</title><rect x="385.1" y="357" width="0.1" height="15.0" fill="rgb(224,114,41)" rx="2" ry="2" />
<text  x="388.10" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (9 samples, 0.11%)</title><rect x="375.9" y="341" width="1.3" height="15.0" fill="rgb(210,6,4)" rx="2" ry="2" />
<text  x="378.91" y="351.5" ></text>
</g>
<g >
<title>__dec_node_state (2 samples, 0.02%)</title><rect x="1065.4" y="357" width="0.3" height="15.0" fill="rgb(218,190,14)" rx="2" ry="2" />
<text  x="1068.41" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::back (21 samples, 0.26%)</title><rect x="528.7" y="341" width="3.0" height="15.0" fill="rgb(248,101,12)" rx="2" ry="2" />
<text  x="531.66" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::PromoteWaiters (1 samples, 0.01%)</title><rect x="429.6" y="373" width="0.1" height="15.0" fill="rgb(246,118,7)" rx="2" ry="2" />
<text  x="432.59" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_enable (3 samples, 0.04%)</title><rect x="1045.3" y="405" width="0.4" height="15.0" fill="rgb(216,152,42)" rx="2" ry="2" />
<text  x="1048.27" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (1 samples, 0.01%)</title><rect x="311.6" y="357" width="0.1" height="15.0" fill="rgb(229,19,12)" rx="2" ry="2" />
<text  x="314.57" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt;::end (3 samples, 0.04%)</title><rect x="622.9" y="405" width="0.4" height="15.0" fill="rgb(246,166,30)" rx="2" ry="2" />
<text  x="625.91" y="415.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (3 samples, 0.04%)</title><rect x="1045.3" y="389" width="0.4" height="15.0" fill="rgb(225,223,49)" rx="2" ry="2" />
<text  x="1048.27" y="399.5" ></text>
</g>
<g >
<title>__update_load_avg_se.isra.37 (1 samples, 0.01%)</title><rect x="266.6" y="181" width="0.2" height="15.0" fill="rgb(242,147,0)" rx="2" ry="2" />
<text  x="269.63" y="191.5" ></text>
</g>
<g >
<title>Tuple::ownersAdd (1 samples, 0.01%)</title><rect x="359.1" y="389" width="0.2" height="15.0" fill="rgb(229,189,35)" rx="2" ry="2" />
<text  x="362.13" y="399.5" ></text>
</g>
<g >
<title>std::forward&lt;Tuple*&amp;&gt; (1 samples, 0.01%)</title><rect x="458.6" y="325" width="0.2" height="15.0" fill="rgb(243,146,9)" rx="2" ry="2" />
<text  x="461.63" y="335.5" ></text>
</g>
<g >
<title>__pow (2 samples, 0.02%)</title><rect x="29.0" y="533" width="0.3" height="15.0" fill="rgb(252,221,38)" rx="2" ry="2" />
<text  x="31.97" y="543.5" ></text>
</g>
<g >
<title>dequeue_task_fair (7 samples, 0.09%)</title><rect x="266.3" y="213" width="1.1" height="15.0" fill="rgb(253,98,20)" rx="2" ry="2" />
<text  x="269.34" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="89.1" y="309" width="0.1" height="15.0" fill="rgb(241,61,32)" rx="2" ry="2" />
<text  x="92.08" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_Temporary_value::_M_val (1 samples, 0.01%)</title><rect x="211.9" y="309" width="0.2" height="15.0" fill="rgb(209,129,7)" rx="2" ry="2" />
<text  x="214.92" y="319.5" ></text>
</g>
<g >
<title>dequeue_entity (27 samples, 0.33%)</title><rect x="323.5" y="197" width="4.0" height="15.0" fill="rgb(230,124,24)" rx="2" ry="2" />
<text  x="326.53" y="207.5" ></text>
</g>
<g >
<title>native_write_msr (9 samples, 0.11%)</title><rect x="319.4" y="197" width="1.4" height="15.0" fill="rgb(223,132,5)" rx="2" ry="2" />
<text  x="322.44" y="207.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (15 samples, 0.19%)</title><rect x="1187.5" y="533" width="2.2" height="15.0" fill="rgb(224,207,6)" rx="2" ry="2" />
<text  x="1190.52" y="543.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.01%)</title><rect x="493.2" y="197" width="0.2" height="15.0" fill="rgb(241,110,28)" rx="2" ry="2" />
<text  x="496.20" y="207.5" ></text>
</g>
<g >
<title>free_unref_page_commit (183 samples, 2.26%)</title><rect x="1153.4" y="325" width="26.7" height="15.0" fill="rgb(231,83,16)" rx="2" ry="2" />
<text  x="1156.38" y="335.5" >f..</text>
</g>
<g >
<title>RWLock::w_trylock (21 samples, 0.26%)</title><rect x="135.3" y="357" width="3.1" height="15.0" fill="rgb(249,165,7)" rx="2" ry="2" />
<text  x="138.32" y="367.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.01%)</title><rect x="614.0" y="261" width="0.2" height="15.0" fill="rgb(229,66,19)" rx="2" ry="2" />
<text  x="617.01" y="271.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="16.7" y="485" width="0.2" height="15.0" fill="rgb(240,195,7)" rx="2" ry="2" />
<text  x="19.71" y="495.5" ></text>
</g>
<g >
<title>event_function (5 samples, 0.06%)</title><rect x="13.5" y="437" width="0.7" height="15.0" fill="rgb(232,121,25)" rx="2" ry="2" />
<text  x="16.50" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (11 samples, 0.14%)</title><rect x="226.7" y="357" width="1.6" height="15.0" fill="rgb(216,184,24)" rx="2" ry="2" />
<text  x="229.65" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="429.9" y="325" width="0.1" height="15.0" fill="rgb(223,139,16)" rx="2" ry="2" />
<text  x="432.89" y="335.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (2 samples, 0.02%)</title><rect x="470.0" y="261" width="0.3" height="15.0" fill="rgb(215,106,34)" rx="2" ry="2" />
<text  x="473.01" y="271.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="166.1" y="325" width="0.2" height="15.0" fill="rgb(209,73,8)" rx="2" ry="2" />
<text  x="169.11" y="335.5" ></text>
</g>
<g >
<title>nmi_restore (1 samples, 0.01%)</title><rect x="1046.6" y="341" width="0.1" height="15.0" fill="rgb(234,83,1)" rx="2" ry="2" />
<text  x="1049.59" y="351.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="266.0" y="149" width="0.2" height="15.0" fill="rgb(209,148,19)" rx="2" ry="2" />
<text  x="269.05" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (4 samples, 0.05%)</title><rect x="112.1" y="309" width="0.6" height="15.0" fill="rgb(233,25,20)" rx="2" ry="2" />
<text  x="115.13" y="319.5" ></text>
</g>
<g >
<title>update_curr (2 samples, 0.02%)</title><rect x="267.1" y="181" width="0.3" height="15.0" fill="rgb(241,34,13)" rx="2" ry="2" />
<text  x="270.07" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator- (4 samples, 0.05%)</title><rect x="27.5" y="533" width="0.6" height="15.0" fill="rgb(218,51,24)" rx="2" ry="2" />
<text  x="30.51" y="543.5" ></text>
</g>
<g >
<title>uncharge_batch (1 samples, 0.01%)</title><rect x="1182.4" y="325" width="0.2" height="15.0" fill="rgb(223,51,28)" rx="2" ry="2" />
<text  x="1185.41" y="335.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (22 samples, 0.27%)</title><rect x="466.8" y="261" width="3.2" height="15.0" fill="rgb(211,204,4)" rx="2" ry="2" />
<text  x="469.80" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (4 samples, 0.05%)</title><rect x="112.1" y="277" width="0.6" height="15.0" fill="rgb(246,6,48)" rx="2" ry="2" />
<text  x="115.13" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="383.3" y="325" width="0.3" height="15.0" fill="rgb(232,54,21)" rx="2" ry="2" />
<text  x="386.35" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="297.1" y="373" width="0.2" height="15.0" fill="rgb(242,133,3)" rx="2" ry="2" />
<text  x="300.12" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.02%)</title><rect x="117.2" y="357" width="0.3" height="15.0" fill="rgb(230,45,17)" rx="2" ry="2" />
<text  x="120.23" y="367.5" ></text>
</g>
<g >
<title>TxExecutor::lockUpgrade (6 samples, 0.07%)</title><rect x="397.9" y="389" width="0.9" height="15.0" fill="rgb(251,176,2)" rx="2" ry="2" />
<text  x="400.94" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (5 samples, 0.06%)</title><rect x="14.2" y="533" width="0.8" height="15.0" fill="rgb(233,84,18)" rx="2" ry="2" />
<text  x="17.23" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_init (4 samples, 0.05%)</title><rect x="465.8" y="277" width="0.6" height="15.0" fill="rgb(210,116,46)" rx="2" ry="2" />
<text  x="468.78" y="287.5" ></text>
</g>
<g >
<title>lock_hrtimer_base.isra.20 (1 samples, 0.01%)</title><rect x="468.3" y="245" width="0.1" height="15.0" fill="rgb(231,41,12)" rx="2" ry="2" />
<text  x="471.26" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.01%)</title><rect x="311.6" y="325" width="0.1" height="15.0" fill="rgb(226,175,30)" rx="2" ry="2" />
<text  x="314.57" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="12.5" y="453" width="0.1" height="15.0" fill="rgb(243,22,44)" rx="2" ry="2" />
<text  x="15.48" y="463.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (1 samples, 0.01%)</title><rect x="561.2" y="341" width="0.1" height="15.0" fill="rgb(236,223,27)" rx="2" ry="2" />
<text  x="564.19" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::spinWait (541 samples, 6.69%)</title><rect x="416.2" y="389" width="78.9" height="15.0" fill="rgb(227,106,21)" rx="2" ry="2" />
<text  x="419.17" y="399.5" >TxExecuto..</text>
</g>
<g >
<title>native_write_msr (63 samples, 0.78%)</title><rect x="482.6" y="149" width="9.1" height="15.0" fill="rgb(209,13,20)" rx="2" ry="2" />
<text  x="485.55" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="1186.2" y="501" width="0.3" height="15.0" fill="rgb(252,96,38)" rx="2" ry="2" />
<text  x="1189.21" y="511.5" ></text>
</g>
<g >
<title>Xoroshiro128Plus::rotl (4 samples, 0.05%)</title><rect x="594.9" y="373" width="0.6" height="15.0" fill="rgb(242,85,28)" rx="2" ry="2" />
<text  x="597.89" y="383.5" ></text>
</g>
<g >
<title>main (5 samples, 0.06%)</title><rect x="1046.9" y="517" width="0.7" height="15.0" fill="rgb(216,126,3)" rx="2" ry="2" />
<text  x="1049.88" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::emplace_back&lt;unsigned long&amp;, Tuple*&amp;, char  (1 samples, 0.01%)</title><rect x="37.9" y="533" width="0.1" height="15.0" fill="rgb(240,86,44)" rx="2" ry="2" />
<text  x="40.87" y="543.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (10 samples, 0.12%)</title><rect x="321.6" y="229" width="1.5" height="15.0" fill="rgb(208,111,53)" rx="2" ry="2" />
<text  x="324.63" y="239.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.01%)</title><rect x="118.0" y="229" width="0.1" height="15.0" fill="rgb(247,7,13)" rx="2" ry="2" />
<text  x="120.96" y="239.5" ></text>
</g>
<g >
<title>[unknown] (164 samples, 2.03%)</title><rect x="16.9" y="549" width="23.9" height="15.0" fill="rgb(253,45,3)" rx="2" ry="2" />
<text  x="19.86" y="559.5" >[..</text>
</g>
<g >
<title>RWLock::w_unlock (1 samples, 0.01%)</title><rect x="359.0" y="389" width="0.1" height="15.0" fill="rgb(251,200,17)" rx="2" ry="2" />
<text  x="361.98" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int&amp;&gt; (25 samples, 0.31%)</title><rect x="205.1" y="341" width="3.6" height="15.0" fill="rgb(223,74,46)" rx="2" ry="2" />
<text  x="208.06" y="351.5" ></text>
</g>
<g >
<title>myBinarySearch (5 samples, 0.06%)</title><rect x="543.7" y="325" width="0.7" height="15.0" fill="rgb(227,119,1)" rx="2" ry="2" />
<text  x="546.68" y="335.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (18 samples, 0.22%)</title><rect x="135.8" y="341" width="2.6" height="15.0" fill="rgb(229,42,38)" rx="2" ry="2" />
<text  x="138.76" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (5 samples, 0.06%)</title><rect x="212.2" y="357" width="0.7" height="15.0" fill="rgb(252,102,29)" rx="2" ry="2" />
<text  x="215.21" y="367.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.01%)</title><rect x="118.1" y="213" width="0.2" height="15.0" fill="rgb(209,163,44)" rx="2" ry="2" />
<text  x="121.11" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator++ (1 samples, 0.01%)</title><rect x="120.0" y="373" width="0.2" height="15.0" fill="rgb(242,44,13)" rx="2" ry="2" />
<text  x="123.00" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (8 samples, 0.10%)</title><rect x="108.2" y="325" width="1.2" height="15.0" fill="rgb(234,154,50)" rx="2" ry="2" />
<text  x="111.19" y="335.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (9 samples, 0.11%)</title><rect x="164.5" y="149" width="1.3" height="15.0" fill="rgb(244,84,54)" rx="2" ry="2" />
<text  x="167.50" y="159.5" ></text>
</g>
<g >
<title>finish_task_switch (114 samples, 1.41%)</title><rect x="327.6" y="229" width="16.6" height="15.0" fill="rgb(245,171,49)" rx="2" ry="2" />
<text  x="330.61" y="239.5" ></text>
</g>
<g >
<title>do_nanosleep (5 samples, 0.06%)</title><rect x="1046.9" y="389" width="0.7" height="15.0" fill="rgb(252,124,51)" rx="2" ry="2" />
<text  x="1049.88" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::begin (11 samples, 0.14%)</title><rect x="285.5" y="373" width="1.6" height="15.0" fill="rgb(236,159,48)" rx="2" ry="2" />
<text  x="288.45" y="383.5" ></text>
</g>
<g >
<title>ctx_sched_out (6 samples, 0.07%)</title><rect x="322.1" y="197" width="0.8" height="15.0" fill="rgb(229,116,44)" rx="2" ry="2" />
<text  x="325.07" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::emplace_back&lt;unsigned long&amp;, Tuple*&amp;, char  (216 samples, 2.67%)</title><rect x="430.6" y="373" width="31.5" height="15.0" fill="rgb(244,217,45)" rx="2" ry="2" />
<text  x="433.62" y="383.5" >st..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (12 samples, 0.15%)</title><rect x="1188.0" y="373" width="1.7" height="15.0" fill="rgb(243,24,31)" rx="2" ry="2" />
<text  x="1190.96" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_enable (34 samples, 0.42%)</title><rect x="267.8" y="197" width="5.0" height="15.0" fill="rgb(217,171,31)" rx="2" ry="2" />
<text  x="270.80" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="117.1" y="357" width="0.1" height="15.0" fill="rgb(215,65,42)" rx="2" ry="2" />
<text  x="120.09" y="367.5" ></text>
</g>
<g >
<title>Backoff::update_backoff (3 samples, 0.04%)</title><rect x="591.0" y="389" width="0.4" height="15.0" fill="rgb(207,48,46)" rx="2" ry="2" />
<text  x="593.95" y="399.5" ></text>
</g>
<g >
<title>run_rebalance_domains (5 samples, 0.06%)</title><rect x="1186.6" y="469" width="0.8" height="15.0" fill="rgb(232,85,43)" rx="2" ry="2" />
<text  x="1189.64" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (4 samples, 0.05%)</title><rect x="390.8" y="325" width="0.6" height="15.0" fill="rgb(215,125,27)" rx="2" ry="2" />
<text  x="393.79" y="335.5" ></text>
</g>
<g >
<title>SetElement&lt;Tuple&gt;::SetElement (1 samples, 0.01%)</title><rect x="313.5" y="325" width="0.1" height="15.0" fill="rgb(226,183,27)" rx="2" ry="2" />
<text  x="316.46" y="335.5" ></text>
</g>
<g >
<title>TxExecutor::cascadeAbort (12 samples, 0.15%)</title><rect x="545.9" y="341" width="1.7" height="15.0" fill="rgb(211,109,16)" rx="2" ry="2" />
<text  x="548.87" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int&amp;&gt; (1 samples, 0.01%)</title><rect x="385.8" y="357" width="0.2" height="15.0" fill="rgb(209,208,38)" rx="2" ry="2" />
<text  x="388.83" y="367.5" ></text>
</g>
<g >
<title>loadAcquire&lt;bool const&gt; (1 samples, 0.01%)</title><rect x="591.7" y="405" width="0.1" height="15.0" fill="rgb(212,164,43)" rx="2" ry="2" />
<text  x="594.68" y="415.5" ></text>
</g>
<g >
<title>Tuple::remove (1 samples, 0.01%)</title><rect x="212.9" y="357" width="0.2" height="15.0" fill="rgb(212,205,54)" rx="2" ry="2" />
<text  x="215.94" y="367.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (17 samples, 0.21%)</title><rect x="308.5" y="373" width="2.5" height="15.0" fill="rgb(217,72,12)" rx="2" ry="2" />
<text  x="311.50" y="383.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (3 samples, 0.04%)</title><rect x="1045.3" y="517" width="0.4" height="15.0" fill="rgb(237,181,53)" rx="2" ry="2" />
<text  x="1048.27" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="312.9" y="341" width="0.1" height="15.0" fill="rgb(242,166,34)" rx="2" ry="2" />
<text  x="315.88" y="351.5" ></text>
</g>
<g >
<title>myBinarySearch (1 samples, 0.01%)</title><rect x="212.9" y="341" width="0.2" height="15.0" fill="rgb(212,64,54)" rx="2" ry="2" />
<text  x="215.94" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (3 samples, 0.04%)</title><rect x="383.6" y="341" width="0.5" height="15.0" fill="rgb(228,171,3)" rx="2" ry="2" />
<text  x="386.64" y="351.5" ></text>
</g>
<g >
<title>schedule (161 samples, 1.99%)</title><rect x="470.4" y="261" width="23.5" height="15.0" fill="rgb(246,136,22)" rx="2" ry="2" />
<text  x="473.45" y="271.5" >s..</text>
</g>
<g >
<title>intel_pmu_enable_all (9 samples, 0.11%)</title><rect x="164.5" y="165" width="1.3" height="15.0" fill="rgb(242,115,42)" rx="2" ry="2" />
<text  x="167.50" y="175.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.02%)</title><rect x="11.5" y="405" width="0.3" height="15.0" fill="rgb(217,203,9)" rx="2" ry="2" />
<text  x="14.46" y="415.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="1185.8" y="437" width="0.1" height="15.0" fill="rgb(237,188,10)" rx="2" ry="2" />
<text  x="1188.77" y="447.5" ></text>
</g>
<g >
<title>dequeue_entity (17 samples, 0.21%)</title><rect x="472.6" y="197" width="2.5" height="15.0" fill="rgb(214,228,1)" rx="2" ry="2" />
<text  x="475.63" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (2 samples, 0.02%)</title><rect x="430.0" y="325" width="0.3" height="15.0" fill="rgb(240,178,46)" rx="2" ry="2" />
<text  x="433.03" y="335.5" ></text>
</g>
<g >
<title>tick_program_event (4 samples, 0.05%)</title><rect x="563.2" y="245" width="0.6" height="15.0" fill="rgb(249,149,18)" rx="2" ry="2" />
<text  x="566.23" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="88.8" y="309" width="0.1" height="15.0" fill="rgb(226,35,23)" rx="2" ry="2" />
<text  x="91.78" y="319.5" ></text>
</g>
<g >
<title>sleepMs (5 samples, 0.06%)</title><rect x="1046.9" y="501" width="0.7" height="15.0" fill="rgb(238,183,52)" rx="2" ry="2" />
<text  x="1049.88" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="462.1" y="373" width="0.2" height="15.0" fill="rgb(214,7,22)" rx="2" ry="2" />
<text  x="465.13" y="383.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.02%)</title><rect x="344.7" y="229" width="0.3" height="15.0" fill="rgb(210,11,10)" rx="2" ry="2" />
<text  x="347.68" y="239.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="106.4" y="309" width="0.2" height="15.0" fill="rgb(245,112,7)" rx="2" ry="2" />
<text  x="109.44" y="319.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (1 samples, 0.01%)</title><rect x="265.9" y="181" width="0.1" height="15.0" fill="rgb(232,116,41)" rx="2" ry="2" />
<text  x="268.90" y="191.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (7 samples, 0.09%)</title><rect x="118.5" y="165" width="1.1" height="15.0" fill="rgb(226,190,42)" rx="2" ry="2" />
<text  x="121.55" y="175.5" ></text>
</g>
<g >
<title>x86_pmu_enable (13 samples, 0.16%)</title><rect x="1187.8" y="405" width="1.9" height="15.0" fill="rgb(236,184,19)" rx="2" ry="2" />
<text  x="1190.81" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.04%)</title><rect x="158.1" y="341" width="0.4" height="15.0" fill="rgb(205,164,12)" rx="2" ry="2" />
<text  x="161.08" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (6,883 samples, 85.10%)</title><rect x="40.8" y="437" width="1004.2" height="15.0" fill="rgb(227,17,12)" rx="2" ry="2" />
<text  x="43.78" y="447.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="116.8" y="357" width="0.1" height="15.0" fill="rgb(246,15,50)" rx="2" ry="2" />
<text  x="119.80" y="367.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (39 samples, 0.48%)</title><rect x="419.2" y="373" width="5.7" height="15.0" fill="rgb(241,217,5)" rx="2" ry="2" />
<text  x="422.24" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="303.0" y="357" width="0.2" height="15.0" fill="rgb(232,191,16)" rx="2" ry="2" />
<text  x="305.96" y="367.5" ></text>
</g>
<g >
<title>Tuple::sortAdd (55 samples, 0.68%)</title><rect x="384.5" y="373" width="8.0" height="15.0" fill="rgb(221,3,5)" rx="2" ry="2" />
<text  x="387.51" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (1 samples, 0.01%)</title><rect x="98.0" y="341" width="0.1" height="15.0" fill="rgb(207,14,49)" rx="2" ry="2" />
<text  x="100.97" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="316.1" y="197" width="0.1" height="15.0" fill="rgb(206,223,13)" rx="2" ry="2" />
<text  x="319.09" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="11.5" y="469" width="0.3" height="15.0" fill="rgb(239,86,21)" rx="2" ry="2" />
<text  x="14.46" y="479.5" ></text>
</g>
<g >
<title>std::floor&lt;int&gt; (1 samples, 0.01%)</title><rect x="532.2" y="341" width="0.1" height="15.0" fill="rgb(230,102,19)" rx="2" ry="2" />
<text  x="535.16" y="351.5" ></text>
</g>
<g >
<title>Tuple::sortAdd (1 samples, 0.01%)</title><rect x="17.4" y="533" width="0.2" height="15.0" fill="rgb(241,47,32)" rx="2" ry="2" />
<text  x="20.44" y="543.5" ></text>
</g>
<g >
<title>std::__copy_move_backward&lt;true, true, std::random_access_iterator_tag&gt;::__copy_move_b&lt;int&gt; (1 samples, 0.01%)</title><rect x="532.7" y="277" width="0.2" height="15.0" fill="rgb(218,199,47)" rx="2" ry="2" />
<text  x="535.74" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (77 samples, 0.95%)</title><rect x="98.1" y="341" width="11.3" height="15.0" fill="rgb(248,110,8)" rx="2" ry="2" />
<text  x="101.12" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_enable (96 samples, 1.19%)</title><rect x="478.6" y="197" width="14.0" height="15.0" fill="rgb(224,54,52)" rx="2" ry="2" />
<text  x="481.62" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="1186.1" y="549" width="0.1" height="15.0" fill="rgb(250,111,13)" rx="2" ry="2" />
<text  x="1189.06" y="559.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (35 samples, 0.43%)</title><rect x="567.5" y="213" width="5.1" height="15.0" fill="rgb(246,59,4)" rx="2" ry="2" />
<text  x="570.47" y="223.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.01%)</title><rect x="565.7" y="197" width="0.2" height="15.0" fill="rgb(240,86,2)" rx="2" ry="2" />
<text  x="568.71" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (5 samples, 0.06%)</title><rect x="209.7" y="325" width="0.8" height="15.0" fill="rgb(233,23,7)" rx="2" ry="2" />
<text  x="212.73" y="335.5" ></text>
</g>
<g >
<title>do_nanosleep (3 samples, 0.04%)</title><rect x="396.5" y="277" width="0.4" height="15.0" fill="rgb(224,103,54)" rx="2" ry="2" />
<text  x="399.48" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (8 samples, 0.10%)</title><rect x="25.5" y="533" width="1.1" height="15.0" fill="rgb(210,170,3)" rx="2" ry="2" />
<text  x="28.46" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="614.3" y="373" width="0.1" height="15.0" fill="rgb(225,136,26)" rx="2" ry="2" />
<text  x="617.30" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (2 samples, 0.02%)</title><rect x="143.5" y="341" width="0.3" height="15.0" fill="rgb(216,112,20)" rx="2" ry="2" />
<text  x="146.49" y="351.5" ></text>
</g>
<g >
<title>event_function (15 samples, 0.19%)</title><rect x="1187.5" y="453" width="2.2" height="15.0" fill="rgb(215,145,45)" rx="2" ry="2" />
<text  x="1190.52" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (73 samples, 0.90%)</title><rect x="263.4" y="325" width="10.7" height="15.0" fill="rgb(221,137,26)" rx="2" ry="2" />
<text  x="266.42" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1045.9" y="533" width="0.1" height="15.0" fill="rgb(240,43,39)" rx="2" ry="2" />
<text  x="1048.86" y="543.5" ></text>
</g>
<g >
<title>__perf_event_enable (5 samples, 0.06%)</title><rect x="15.0" y="437" width="0.7" height="15.0" fill="rgb(216,168,38)" rx="2" ry="2" />
<text  x="17.96" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="614.0" y="325" width="0.2" height="15.0" fill="rgb(240,195,21)" rx="2" ry="2" />
<text  x="617.01" y="335.5" ></text>
</g>
<g >
<title>fill_pte (1 samples, 0.01%)</title><rect x="479.3" y="149" width="0.2" height="15.0" fill="rgb(227,37,1)" rx="2" ry="2" />
<text  x="482.34" y="159.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (1 samples, 0.01%)</title><rect x="1185.9" y="517" width="0.2" height="15.0" fill="rgb(215,157,1)" rx="2" ry="2" />
<text  x="1188.91" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (3 samples, 0.04%)</title><rect x="373.9" y="357" width="0.4" height="15.0" fill="rgb(207,40,23)" rx="2" ry="2" />
<text  x="376.86" y="367.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.01%)</title><rect x="316.1" y="181" width="0.1" height="15.0" fill="rgb(207,41,27)" rx="2" ry="2" />
<text  x="319.09" y="191.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.06%)</title><rect x="14.2" y="485" width="0.8" height="15.0" fill="rgb(242,106,4)" rx="2" ry="2" />
<text  x="17.23" y="495.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (9 samples, 0.11%)</title><rect x="164.5" y="197" width="1.3" height="15.0" fill="rgb(229,131,52)" rx="2" ry="2" />
<text  x="167.50" y="207.5" ></text>
</g>
<g >
<title>schedule (165 samples, 2.04%)</title><rect x="321.0" y="261" width="24.1" height="15.0" fill="rgb(235,118,41)" rx="2" ry="2" />
<text  x="324.05" y="271.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="167.1" y="357" width="0.2" height="15.0" fill="rgb(224,106,10)" rx="2" ry="2" />
<text  x="170.13" y="367.5" ></text>
</g>
<g >
<title>TxExecutor::searchWriteSet (112 samples, 1.38%)</title><rect x="290.8" y="389" width="16.4" height="15.0" fill="rgb(218,193,33)" rx="2" ry="2" />
<text  x="293.85" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="1186.2" y="485" width="0.3" height="15.0" fill="rgb(213,111,47)" rx="2" ry="2" />
<text  x="1189.21" y="495.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (11 samples, 0.14%)</title><rect x="138.4" y="341" width="1.6" height="15.0" fill="rgb(230,75,52)" rx="2" ry="2" />
<text  x="141.39" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (5 samples, 0.06%)</title><rect x="372.8" y="357" width="0.8" height="15.0" fill="rgb(243,45,53)" rx="2" ry="2" />
<text  x="375.84" y="367.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="12.5" y="517" width="0.1" height="15.0" fill="rgb(233,135,46)" rx="2" ry="2" />
<text  x="15.48" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::begin (6 samples, 0.07%)</title><rect x="582.5" y="389" width="0.9" height="15.0" fill="rgb(215,217,24)" rx="2" ry="2" />
<text  x="585.49" y="399.5" ></text>
</g>
<g >
<title>TxExecutor::read (1,224 samples, 15.13%)</title><rect x="168.3" y="405" width="178.6" height="15.0" fill="rgb(229,107,45)" rx="2" ry="2" />
<text  x="171.30" y="415.5" >TxExecutor::read</text>
</g>
<g >
<title>Xoroshiro128Plus::rotl (1 samples, 0.01%)</title><rect x="595.5" y="389" width="0.1" height="15.0" fill="rgb(228,228,27)" rx="2" ry="2" />
<text  x="598.48" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.22%)</title><rect x="163.5" y="325" width="2.6" height="15.0" fill="rgb(230,13,30)" rx="2" ry="2" />
<text  x="166.48" y="335.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="266.0" y="181" width="0.2" height="15.0" fill="rgb(250,169,11)" rx="2" ry="2" />
<text  x="269.05" y="191.5" ></text>
</g>
<g >
<title>TxExecutor::unlockList (363 samples, 4.49%)</title><rect x="72.3" y="389" width="53.0" height="15.0" fill="rgb(235,221,44)" rx="2" ry="2" />
<text  x="75.30" y="399.5" >TxExe..</text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="572.6" y="197" width="0.7" height="15.0" fill="rgb(238,210,21)" rx="2" ry="2" />
<text  x="575.57" y="207.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="119.6" y="325" width="0.1" height="15.0" fill="rgb(207,226,52)" rx="2" ry="2" />
<text  x="122.57" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (1 samples, 0.01%)</title><rect x="394.4" y="261" width="0.2" height="15.0" fill="rgb(225,125,35)" rx="2" ry="2" />
<text  x="397.43" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="394.4" y="293" width="0.2" height="15.0" fill="rgb(209,128,16)" rx="2" ry="2" />
<text  x="397.43" y="303.5" ></text>
</g>
<g >
<title>__perf_event_enable (5 samples, 0.06%)</title><rect x="11.8" y="421" width="0.7" height="15.0" fill="rgb(205,220,34)" rx="2" ry="2" />
<text  x="14.75" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="547.5" y="325" width="0.1" height="15.0" fill="rgb(224,98,25)" rx="2" ry="2" />
<text  x="550.48" y="335.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 0.06%)</title><rect x="1046.0" y="517" width="0.7" height="15.0" fill="rgb(217,124,40)" rx="2" ry="2" />
<text  x="1049.00" y="527.5" ></text>
</g>
<g >
<title>release_pages (754 samples, 9.32%)</title><rect x="1074.9" y="357" width="110.0" height="15.0" fill="rgb(207,38,21)" rx="2" ry="2" />
<text  x="1077.89" y="367.5" >release_pages</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="398.7" y="341" width="0.1" height="15.0" fill="rgb(227,175,30)" rx="2" ry="2" />
<text  x="401.66" y="351.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (34 samples, 0.42%)</title><rect x="267.8" y="165" width="5.0" height="15.0" fill="rgb(212,28,49)" rx="2" ry="2" />
<text  x="270.80" y="175.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.02%)</title><rect x="563.5" y="197" width="0.3" height="15.0" fill="rgb(215,29,11)" rx="2" ry="2" />
<text  x="566.53" y="207.5" ></text>
</g>
<g >
<title>Tuple::remove (115 samples, 1.42%)</title><rect x="141.7" y="357" width="16.8" height="15.0" fill="rgb(210,226,35)" rx="2" ry="2" />
<text  x="144.74" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;char  (1 samples, 0.01%)</title><rect x="256.1" y="325" width="0.2" height="15.0" fill="rgb(237,108,13)" rx="2" ry="2" />
<text  x="259.13" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (5 samples, 0.06%)</title><rect x="112.0" y="325" width="0.7" height="15.0" fill="rgb(242,58,37)" rx="2" ry="2" />
<text  x="114.98" y="335.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.01%)</title><rect x="468.0" y="245" width="0.1" height="15.0" fill="rgb(209,151,41)" rx="2" ry="2" />
<text  x="470.96" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator* (1 samples, 0.01%)</title><rect x="209.0" y="325" width="0.1" height="15.0" fill="rgb(251,146,16)" rx="2" ry="2" />
<text  x="212.00" y="335.5" ></text>
</g>
<g >
<title>TxExecutor::searchReadSet (115 samples, 1.42%)</title><rect x="274.1" y="389" width="16.7" height="15.0" fill="rgb(209,88,50)" rx="2" ry="2" />
<text  x="277.07" y="399.5" ></text>
</g>
<g >
<title>__pow (95 samples, 1.17%)</title><rect x="600.3" y="373" width="13.9" height="15.0" fill="rgb(207,196,37)" rx="2" ry="2" />
<text  x="603.29" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (5 samples, 0.06%)</title><rect x="530.4" y="309" width="0.7" height="15.0" fill="rgb(215,140,35)" rx="2" ry="2" />
<text  x="533.41" y="319.5" ></text>
</g>
<g >
<title>memmove@plt (1 samples, 0.01%)</title><rect x="398.2" y="213" width="0.2" height="15.0" fill="rgb(214,164,12)" rx="2" ry="2" />
<text  x="401.23" y="223.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (805 samples, 9.95%)</title><rect x="1067.4" y="389" width="117.5" height="15.0" fill="rgb(251,13,3)" rx="2" ry="2" />
<text  x="1070.45" y="399.5" >tlb_flush_mmu_..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (3 samples, 0.04%)</title><rect x="27.1" y="533" width="0.4" height="15.0" fill="rgb(211,50,31)" rx="2" ry="2" />
<text  x="30.07" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (3 samples, 0.04%)</title><rect x="394.1" y="325" width="0.5" height="15.0" fill="rgb(243,54,50)" rx="2" ry="2" />
<text  x="397.14" y="335.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.01%)</title><rect x="492.8" y="213" width="0.1" height="15.0" fill="rgb(225,158,12)" rx="2" ry="2" />
<text  x="495.77" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;int const*, int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="390.6" y="341" width="0.2" height="15.0" fill="rgb(236,43,29)" rx="2" ry="2" />
<text  x="393.64" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.01%)</title><rect x="28.1" y="533" width="0.1" height="15.0" fill="rgb(220,8,43)" rx="2" ry="2" />
<text  x="31.09" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (2 samples, 0.02%)</title><rect x="140.3" y="341" width="0.3" height="15.0" fill="rgb(241,164,36)" rx="2" ry="2" />
<text  x="143.28" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (5 samples, 0.06%)</title><rect x="21.2" y="533" width="0.8" height="15.0" fill="rgb(237,172,33)" rx="2" ry="2" />
<text  x="24.23" y="543.5" ></text>
</g>
<g >
<title>usleep (83 samples, 1.03%)</title><rect x="262.0" y="373" width="12.1" height="15.0" fill="rgb(229,20,21)" rx="2" ry="2" />
<text  x="264.96" y="383.5" ></text>
</g>
<g >
<title>do_nanosleep (71 samples, 0.88%)</title><rect x="263.7" y="277" width="10.4" height="15.0" fill="rgb(213,181,16)" rx="2" ry="2" />
<text  x="266.71" y="287.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (13 samples, 0.16%)</title><rect x="1141.7" y="341" width="1.9" height="15.0" fill="rgb(243,146,46)" rx="2" ry="2" />
<text  x="1144.71" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::construct&lt;SetElement&lt;Tuple&gt;, unsigned long&amp;, Tuple*&amp;, char  (1 samples, 0.01%)</title><rect x="313.5" y="357" width="0.1" height="15.0" fill="rgb(214,195,11)" rx="2" ry="2" />
<text  x="316.46" y="367.5" ></text>
</g>
<g >
<title>Xoroshiro128Plus::next (15 samples, 0.19%)</title><rect x="598.1" y="373" width="2.2" height="15.0" fill="rgb(232,206,51)" rx="2" ry="2" />
<text  x="601.10" y="383.5" ></text>
</g>
<g >
<title>remote_function (5 samples, 0.06%)</title><rect x="11.8" y="453" width="0.7" height="15.0" fill="rgb(244,7,27)" rx="2" ry="2" />
<text  x="14.75" y="463.5" ></text>
</g>
<g >
<title>usleep (5 samples, 0.06%)</title><rect x="13.5" y="533" width="0.7" height="15.0" fill="rgb(250,183,20)" rx="2" ry="2" />
<text  x="16.50" y="543.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="1045.9" y="501" width="0.1" height="15.0" fill="rgb(209,93,14)" rx="2" ry="2" />
<text  x="1048.86" y="511.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="464.5" y="293" width="0.7" height="15.0" fill="rgb(219,175,21)" rx="2" ry="2" />
<text  x="467.46" y="303.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (4 samples, 0.05%)</title><rect x="1179.3" y="293" width="0.6" height="15.0" fill="rgb(248,189,30)" rx="2" ry="2" />
<text  x="1182.35" y="303.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.01%)</title><rect x="1045.9" y="469" width="0.1" height="15.0" fill="rgb(217,159,11)" rx="2" ry="2" />
<text  x="1048.86" y="479.5" ></text>
</g>
<g >
<title>ktime_get (5 samples, 0.06%)</title><rect x="562.4" y="245" width="0.7" height="15.0" fill="rgb(219,127,22)" rx="2" ry="2" />
<text  x="565.36" y="255.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.04%)</title><rect x="1047.2" y="261" width="0.4" height="15.0" fill="rgb(241,66,35)" rx="2" ry="2" />
<text  x="1050.17" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::emplace_back&lt;int&amp;&gt; (40 samples, 0.49%)</title><rect x="204.6" y="357" width="5.9" height="15.0" fill="rgb(241,97,35)" rx="2" ry="2" />
<text  x="207.62" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (2 samples, 0.02%)</title><rect x="458.8" y="325" width="0.3" height="15.0" fill="rgb(211,50,44)" rx="2" ry="2" />
<text  x="461.77" y="335.5" ></text>
</g>
<g >
<title>Procedure::Procedure (1 samples, 0.01%)</title><rect x="16.9" y="533" width="0.1" height="15.0" fill="rgb(243,68,27)" rx="2" ry="2" />
<text  x="19.86" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="344.1" y="181" width="0.1" height="15.0" fill="rgb(214,136,21)" rx="2" ry="2" />
<text  x="347.10" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (5 samples, 0.06%)</title><rect x="124.5" y="357" width="0.8" height="15.0" fill="rgb(217,62,34)" rx="2" ry="2" />
<text  x="127.53" y="367.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.01%)</title><rect x="273.9" y="245" width="0.2" height="15.0" fill="rgb(213,48,1)" rx="2" ry="2" />
<text  x="276.92" y="255.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="468.4" y="245" width="0.1" height="15.0" fill="rgb(209,158,45)" rx="2" ry="2" />
<text  x="471.40" y="255.5" ></text>
</g>
<g >
<title>dequeue_task_fair (28 samples, 0.35%)</title><rect x="323.4" y="213" width="4.1" height="15.0" fill="rgb(250,76,40)" rx="2" ry="2" />
<text  x="326.38" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::operator++ (4 samples, 0.05%)</title><rect x="588.6" y="405" width="0.6" height="15.0" fill="rgb(240,60,44)" rx="2" ry="2" />
<text  x="591.62" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="549.7" y="325" width="0.3" height="15.0" fill="rgb(234,12,36)" rx="2" ry="2" />
<text  x="552.67" y="335.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.06%)</title><rect x="16.0" y="373" width="0.7" height="15.0" fill="rgb(241,9,49)" rx="2" ry="2" />
<text  x="18.98" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="15.8" y="533" width="0.2" height="15.0" fill="rgb(227,146,51)" rx="2" ry="2" />
<text  x="18.84" y="543.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 0.06%)</title><rect x="11.8" y="517" width="0.7" height="15.0" fill="rgb(239,135,0)" rx="2" ry="2" />
<text  x="14.75" y="527.5" ></text>
</g>
<g >
<title>usleep (3 samples, 0.04%)</title><rect x="396.5" y="373" width="0.4" height="15.0" fill="rgb(211,151,9)" rx="2" ry="2" />
<text  x="399.48" y="383.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 0.06%)</title><rect x="13.5" y="517" width="0.7" height="15.0" fill="rgb(213,118,54)" rx="2" ry="2" />
<text  x="16.50" y="527.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (14 samples, 0.17%)</title><rect x="200.8" y="341" width="2.1" height="15.0" fill="rgb(244,76,35)" rx="2" ry="2" />
<text  x="203.83" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (2 samples, 0.02%)</title><rect x="525.2" y="357" width="0.2" height="15.0" fill="rgb(253,202,6)" rx="2" ry="2" />
<text  x="528.16" y="367.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (3 samples, 0.04%)</title><rect x="272.9" y="53" width="0.4" height="15.0" fill="rgb(253,132,51)" rx="2" ry="2" />
<text  x="275.90" y="63.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 0.06%)</title><rect x="464.5" y="309" width="0.7" height="15.0" fill="rgb(210,229,35)" rx="2" ry="2" />
<text  x="467.46" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int&amp;&gt; (16 samples, 0.20%)</title><rect x="526.3" y="325" width="2.4" height="15.0" fill="rgb(230,177,27)" rx="2" ry="2" />
<text  x="529.32" y="335.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.01%)</title><rect x="117.8" y="245" width="0.2" height="15.0" fill="rgb(225,150,33)" rx="2" ry="2" />
<text  x="120.82" y="255.5" ></text>
</g>
<g >
<title>TxExecutor::PromoteWaiters (10 samples, 0.12%)</title><rect x="109.9" y="357" width="1.5" height="15.0" fill="rgb(219,226,21)" rx="2" ry="2" />
<text  x="112.94" y="367.5" ></text>
</g>
<g >
<title>waitSema (2,888 samples, 35.71%)</title><rect x="623.6" y="405" width="421.4" height="15.0" fill="rgb(216,163,49)" rx="2" ry="2" />
<text  x="626.64" y="415.5" >waitSema</text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="572.6" y="181" width="0.7" height="15.0" fill="rgb(245,188,46)" rx="2" ry="2" />
<text  x="575.57" y="191.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.01%)</title><rect x="518.4" y="341" width="0.2" height="15.0" fill="rgb(212,0,1)" rx="2" ry="2" />
<text  x="521.44" y="351.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="116.8" y="229" width="0.1" height="15.0" fill="rgb(252,215,13)" rx="2" ry="2" />
<text  x="119.80" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="398.7" y="325" width="0.1" height="15.0" fill="rgb(225,227,35)" rx="2" ry="2" />
<text  x="401.66" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="590.7" y="405" width="0.3" height="15.0" fill="rgb(247,92,13)" rx="2" ry="2" />
<text  x="593.66" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::insert (2 samples, 0.02%)</title><rect x="311.9" y="357" width="0.2" height="15.0" fill="rgb(212,58,47)" rx="2" ry="2" />
<text  x="314.86" y="367.5" ></text>
</g>
<g >
<title>ctx_resched (3 samples, 0.04%)</title><rect x="272.9" y="101" width="0.4" height="15.0" fill="rgb(209,225,39)" rx="2" ry="2" />
<text  x="275.90" y="111.5" ></text>
</g>
<g >
<title>Tuple::remove (4 samples, 0.05%)</title><rect x="223.0" y="325" width="0.6" height="15.0" fill="rgb(253,80,41)" rx="2" ry="2" />
<text  x="226.01" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (11 samples, 0.14%)</title><rect x="305.6" y="357" width="1.6" height="15.0" fill="rgb(249,69,15)" rx="2" ry="2" />
<text  x="308.58" y="367.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.01%)</title><rect x="320.8" y="213" width="0.1" height="15.0" fill="rgb(205,85,38)" rx="2" ry="2" />
<text  x="323.76" y="223.5" ></text>
</g>
<g >
<title>sys_nanosleep (18 samples, 0.22%)</title><rect x="163.5" y="293" width="2.6" height="15.0" fill="rgb(232,85,18)" rx="2" ry="2" />
<text  x="166.48" y="303.5" ></text>
</g>
<g >
<title>RWLock::w_unlock (32 samples, 0.40%)</title><rect x="424.9" y="373" width="4.7" height="15.0" fill="rgb(207,114,48)" rx="2" ry="2" />
<text  x="427.93" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.01%)</title><rect x="313.2" y="341" width="0.1" height="15.0" fill="rgb(206,25,2)" rx="2" ry="2" />
<text  x="316.17" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.04%)</title><rect x="1045.3" y="357" width="0.4" height="15.0" fill="rgb(250,43,23)" rx="2" ry="2" />
<text  x="1048.27" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::_M_erase_at_end (6 samples, 0.07%)</title><rect x="125.5" y="373" width="0.9" height="15.0" fill="rgb(220,25,30)" rx="2" ry="2" />
<text  x="128.55" y="383.5" ></text>
</g>
<g >
<title>Tuple::remove (5 samples, 0.06%)</title><rect x="546.0" y="325" width="0.7" height="15.0" fill="rgb(223,12,36)" rx="2" ry="2" />
<text  x="549.02" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="222.0" y="309" width="0.1" height="15.0" fill="rgb(215,203,32)" rx="2" ry="2" />
<text  x="224.99" y="319.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="272.8" y="181" width="0.1" height="15.0" fill="rgb(240,100,40)" rx="2" ry="2" />
<text  x="275.76" y="191.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.04%)</title><rect x="12.0" y="341" width="0.5" height="15.0" fill="rgb(213,193,40)" rx="2" ry="2" />
<text  x="15.04" y="351.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="344.8" y="213" width="0.2" height="15.0" fill="rgb(221,109,28)" rx="2" ry="2" />
<text  x="347.83" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (7 samples, 0.09%)</title><rect x="391.5" y="357" width="1.0" height="15.0" fill="rgb(216,152,25)" rx="2" ry="2" />
<text  x="394.52" y="367.5" ></text>
</g>
<g >
<title>TxExecutor::addCommitSemaphore (6 samples, 0.07%)</title><rect x="394.6" y="357" width="0.9" height="15.0" fill="rgb(206,6,8)" rx="2" ry="2" />
<text  x="397.58" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="545.7" y="325" width="0.2" height="15.0" fill="rgb(251,123,21)" rx="2" ry="2" />
<text  x="548.73" y="335.5" ></text>
</g>
<g >
<title>Xoroshiro128Plus::next (8 samples, 0.10%)</title><rect x="594.3" y="389" width="1.2" height="15.0" fill="rgb(241,158,35)" rx="2" ry="2" />
<text  x="597.31" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (5 samples, 0.06%)</title><rect x="229.3" y="341" width="0.7" height="15.0" fill="rgb(210,58,32)" rx="2" ry="2" />
<text  x="232.28" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::write (1,648 samples, 20.38%)</title><rect x="346.9" y="405" width="240.4" height="15.0" fill="rgb(206,172,38)" rx="2" ry="2" />
<text  x="349.87" y="415.5" >TxExecutor::write</text>
</g>
<g >
<title>update_load_avg (2 samples, 0.02%)</title><rect x="565.4" y="181" width="0.3" height="15.0" fill="rgb(228,47,9)" rx="2" ry="2" />
<text  x="568.42" y="191.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="1046.0" y="485" width="0.7" height="15.0" fill="rgb(247,196,15)" rx="2" ry="2" />
<text  x="1049.00" y="495.5" ></text>
</g>
<g >
<title>sys_exit_group (938 samples, 11.60%)</title><rect x="1048.2" y="517" width="136.8" height="15.0" fill="rgb(236,211,48)" rx="2" ry="2" />
<text  x="1051.19" y="527.5" >sys_exit_group</text>
</g>
<g >
<title>rb_insert_color (2 samples, 0.02%)</title><rect x="467.7" y="213" width="0.3" height="15.0" fill="rgb(205,16,5)" rx="2" ry="2" />
<text  x="470.67" y="223.5" ></text>
</g>
<g >
<title>TxExecutor::cascadeAbort (17 samples, 0.21%)</title><rect x="111.4" y="357" width="2.5" height="15.0" fill="rgb(228,39,9)" rx="2" ry="2" />
<text  x="114.40" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="1153.1" y="181" width="0.1" height="15.0" fill="rgb(242,174,6)" rx="2" ry="2" />
<text  x="1156.09" y="191.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (12 samples, 0.15%)</title><rect x="331.4" y="149" width="1.8" height="15.0" fill="rgb(211,49,11)" rx="2" ry="2" />
<text  x="334.41" y="159.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.06%)</title><rect x="1185.0" y="485" width="0.8" height="15.0" fill="rgb(206,205,43)" rx="2" ry="2" />
<text  x="1188.04" y="495.5" ></text>
</g>
<g >
<title>Tuple::remove (142 samples, 1.76%)</title><rect x="89.2" y="357" width="20.7" height="15.0" fill="rgb(214,48,26)" rx="2" ry="2" />
<text  x="92.22" y="367.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (34 samples, 0.42%)</title><rect x="267.8" y="181" width="5.0" height="15.0" fill="rgb(250,117,50)" rx="2" ry="2" />
<text  x="270.80" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="209.6" y="309" width="0.1" height="15.0" fill="rgb(224,24,30)" rx="2" ry="2" />
<text  x="212.58" y="319.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (1 samples, 0.01%)</title><rect x="314.6" y="341" width="0.2" height="15.0" fill="rgb(206,201,25)" rx="2" ry="2" />
<text  x="317.63" y="351.5" ></text>
</g>
<g >
<title>log1 (43 samples, 0.53%)</title><rect x="607.9" y="341" width="6.3" height="15.0" fill="rgb(239,166,12)" rx="2" ry="2" />
<text  x="610.88" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="545.3" y="277" width="0.3" height="15.0" fill="rgb(224,199,6)" rx="2" ry="2" />
<text  x="548.29" y="287.5" ></text>
</g>
<g >
<title>event_function (5 samples, 0.06%)</title><rect x="16.0" y="437" width="0.7" height="15.0" fill="rgb(215,123,32)" rx="2" ry="2" />
<text  x="18.98" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (9 samples, 0.11%)</title><rect x="1186.2" y="533" width="1.3" height="15.0" fill="rgb(229,94,50)" rx="2" ry="2" />
<text  x="1189.21" y="543.5" ></text>
</g>
<g >
<title>RWLock::w_unlock (20 samples, 0.25%)</title><rect x="368.6" y="373" width="2.9" height="15.0" fill="rgb(237,26,52)" rx="2" ry="2" />
<text  x="371.61" y="383.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (7 samples, 0.09%)</title><rect x="322.1" y="213" width="1.0" height="15.0" fill="rgb(244,144,16)" rx="2" ry="2" />
<text  x="325.07" y="223.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.06%)</title><rect x="15.0" y="405" width="0.7" height="15.0" fill="rgb(206,182,34)" rx="2" ry="2" />
<text  x="17.96" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (3 samples, 0.04%)</title><rect x="376.8" y="325" width="0.4" height="15.0" fill="rgb(245,202,32)" rx="2" ry="2" />
<text  x="379.78" y="335.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="320.9" y="229" width="0.1" height="15.0" fill="rgb(220,46,12)" rx="2" ry="2" />
<text  x="323.90" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (6 samples, 0.07%)</title><rect x="100.5" y="325" width="0.8" height="15.0" fill="rgb(242,130,12)" rx="2" ry="2" />
<text  x="103.45" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="161.6" y="341" width="0.1" height="15.0" fill="rgb(241,78,23)" rx="2" ry="2" />
<text  x="164.59" y="351.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="316.1" y="245" width="0.1" height="15.0" fill="rgb(245,28,42)" rx="2" ry="2" />
<text  x="319.09" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (6 samples, 0.07%)</title><rect x="110.5" y="341" width="0.9" height="15.0" fill="rgb(233,66,51)" rx="2" ry="2" />
<text  x="113.52" y="351.5" ></text>
</g>
<g >
<title>reweight_entity (3 samples, 0.04%)</title><rect x="473.8" y="165" width="0.4" height="15.0" fill="rgb(241,71,17)" rx="2" ry="2" />
<text  x="476.80" y="175.5" ></text>
</g>
<g >
<title>TxExecutor::concat (5 samples, 0.06%)</title><rect x="15.0" y="549" width="0.7" height="15.0" fill="rgb(246,206,21)" rx="2" ry="2" />
<text  x="17.96" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (5 samples, 0.06%)</title><rect x="115.9" y="341" width="0.7" height="15.0" fill="rgb(231,25,47)" rx="2" ry="2" />
<text  x="118.92" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (8 samples, 0.10%)</title><rect x="411.9" y="357" width="1.2" height="15.0" fill="rgb(253,10,25)" rx="2" ry="2" />
<text  x="414.94" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator* (1 samples, 0.01%)</title><rect x="125.3" y="389" width="0.1" height="15.0" fill="rgb(220,87,35)" rx="2" ry="2" />
<text  x="128.26" y="399.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.01%)</title><rect x="563.8" y="229" width="0.2" height="15.0" fill="rgb(212,198,13)" rx="2" ry="2" />
<text  x="566.82" y="239.5" ></text>
</g>
<g >
<title>deactivate_task (13 samples, 0.16%)</title><rect x="564.0" y="229" width="1.9" height="15.0" fill="rgb(235,143,36)" rx="2" ry="2" />
<text  x="566.96" y="239.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.01%)</title><rect x="322.9" y="197" width="0.2" height="15.0" fill="rgb(251,88,26)" rx="2" ry="2" />
<text  x="325.95" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::construct&lt;SetElement&lt;Tuple&gt;, unsigned long&amp;, Tuple*&amp;, char  (160 samples, 1.98%)</title><rect x="233.5" y="357" width="23.4" height="15.0" fill="rgb(235,125,33)" rx="2" ry="2" />
<text  x="236.51" y="367.5" >s..</text>
</g>
<g >
<title>remote_function (4 samples, 0.05%)</title><rect x="572.7" y="149" width="0.6" height="15.0" fill="rgb(237,198,18)" rx="2" ry="2" />
<text  x="575.72" y="159.5" ></text>
</g>
<g >
<title>put_prev_task_fair (2 samples, 0.02%)</title><rect x="492.9" y="229" width="0.3" height="15.0" fill="rgb(243,205,19)" rx="2" ry="2" />
<text  x="495.91" y="239.5" ></text>
</g>
<g >
<title>sys_nanosleep (82 samples, 1.01%)</title><rect x="561.6" y="309" width="12.0" height="15.0" fill="rgb(221,214,19)" rx="2" ry="2" />
<text  x="564.63" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int&amp;&gt; (1 samples, 0.01%)</title><rect x="525.0" y="357" width="0.2" height="15.0" fill="rgb(231,209,2)" rx="2" ry="2" />
<text  x="528.01" y="367.5" ></text>
</g>
<g >
<title>native_write_msr (22 samples, 0.27%)</title><rect x="269.0" y="149" width="3.2" height="15.0" fill="rgb(220,199,7)" rx="2" ry="2" />
<text  x="271.96" y="159.5" ></text>
</g>
<g >
<title>TxExecutor::eraseFromLists (5 samples, 0.06%)</title><rect x="429.7" y="373" width="0.8" height="15.0" fill="rgb(243,44,18)" rx="2" ry="2" />
<text  x="432.74" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="91.4" y="325" width="0.3" height="15.0" fill="rgb(227,73,23)" rx="2" ry="2" />
<text  x="94.41" y="335.5" ></text>
</g>
<g >
<title>dequeue_task_fair (3 samples, 0.04%)</title><rect x="565.9" y="229" width="0.4" height="15.0" fill="rgb(213,201,46)" rx="2" ry="2" />
<text  x="568.86" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="40.8" y="421" width="0.1" height="15.0" fill="rgb(224,16,52)" rx="2" ry="2" />
<text  x="43.78" y="431.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="493.2" y="213" width="0.2" height="15.0" fill="rgb(207,130,33)" rx="2" ry="2" />
<text  x="496.20" y="223.5" ></text>
</g>
<g >
<title>get_timespec64 (2 samples, 0.02%)</title><rect x="561.6" y="293" width="0.3" height="15.0" fill="rgb(253,86,36)" rx="2" ry="2" />
<text  x="564.63" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="224.5" y="341" width="0.4" height="15.0" fill="rgb(247,135,12)" rx="2" ry="2" />
<text  x="227.47" y="351.5" ></text>
</g>
<g >
<title>Xoroshiro128Plus::next (2 samples, 0.02%)</title><rect x="19.0" y="533" width="0.3" height="15.0" fill="rgb(218,89,24)" rx="2" ry="2" />
<text  x="22.05" y="543.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.04%)</title><rect x="493.4" y="245" width="0.4" height="15.0" fill="rgb(223,125,31)" rx="2" ry="2" />
<text  x="496.35" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="373.4" y="341" width="0.2" height="15.0" fill="rgb(205,41,24)" rx="2" ry="2" />
<text  x="376.42" y="351.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="1185.0" y="517" width="0.8" height="15.0" fill="rgb(219,100,1)" rx="2" ry="2" />
<text  x="1188.04" y="527.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (80 samples, 0.99%)</title><rect x="561.9" y="293" width="11.7" height="15.0" fill="rgb(207,46,38)" rx="2" ry="2" />
<text  x="564.92" y="303.5" ></text>
</g>
<g >
<title>ctx_resched (5 samples, 0.06%)</title><rect x="16.0" y="405" width="0.7" height="15.0" fill="rgb(208,185,2)" rx="2" ry="2" />
<text  x="18.98" y="415.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="1185.0" y="501" width="0.8" height="15.0" fill="rgb(238,143,50)" rx="2" ry="2" />
<text  x="1188.04" y="511.5" ></text>
</g>
<g >
<title>deactivate_task (19 samples, 0.23%)</title><rect x="472.3" y="229" width="2.8" height="15.0" fill="rgb(219,202,3)" rx="2" ry="2" />
<text  x="475.34" y="239.5" ></text>
</g>
<g >
<title>sys_nanosleep (198 samples, 2.45%)</title><rect x="465.2" y="309" width="28.9" height="15.0" fill="rgb(242,10,13)" rx="2" ry="2" />
<text  x="468.19" y="319.5" >sy..</text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (1 samples, 0.01%)</title><rect x="619.5" y="373" width="0.2" height="15.0" fill="rgb(213,18,15)" rx="2" ry="2" />
<text  x="622.55" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::base (5 samples, 0.06%)</title><rect x="579.6" y="373" width="0.7" height="15.0" fill="rgb(215,67,45)" rx="2" ry="2" />
<text  x="582.57" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (2 samples, 0.02%)</title><rect x="26.6" y="533" width="0.3" height="15.0" fill="rgb(210,131,31)" rx="2" ry="2" />
<text  x="29.63" y="543.5" ></text>
</g>
<g >
<title>__schedule (5 samples, 0.06%)</title><rect x="14.2" y="453" width="0.8" height="15.0" fill="rgb(220,47,13)" rx="2" ry="2" />
<text  x="17.23" y="463.5" ></text>
</g>
<g >
<title>dequeue_entity (11 samples, 0.14%)</title><rect x="564.1" y="197" width="1.6" height="15.0" fill="rgb(227,6,31)" rx="2" ry="2" />
<text  x="567.11" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (3 samples, 0.04%)</title><rect x="25.0" y="533" width="0.5" height="15.0" fill="rgb(218,212,2)" rx="2" ry="2" />
<text  x="28.03" y="543.5" ></text>
</g>
<g >
<title>native_write_msr (9 samples, 0.11%)</title><rect x="468.7" y="197" width="1.3" height="15.0" fill="rgb(230,165,37)" rx="2" ry="2" />
<text  x="471.69" y="207.5" ></text>
</g>
<g >
<title>schedule (61 samples, 0.75%)</title><rect x="265.2" y="261" width="8.9" height="15.0" fill="rgb(241,74,22)" rx="2" ry="2" />
<text  x="268.17" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (14 samples, 0.17%)</title><rect x="414.1" y="357" width="2.1" height="15.0" fill="rgb(217,211,5)" rx="2" ry="2" />
<text  x="417.13" y="367.5" ></text>
</g>
<g >
<title>__libc_start_main (6 samples, 0.07%)</title><rect x="1046.7" y="533" width="0.9" height="15.0" fill="rgb(221,175,43)" rx="2" ry="2" />
<text  x="1049.73" y="543.5" ></text>
</g>
<g >
<title>event_function (5 samples, 0.06%)</title><rect x="464.5" y="229" width="0.7" height="15.0" fill="rgb(238,132,17)" rx="2" ry="2" />
<text  x="467.46" y="239.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.01%)</title><rect x="1182.4" y="309" width="0.2" height="15.0" fill="rgb(229,60,37)" rx="2" ry="2" />
<text  x="1185.41" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (16 samples, 0.20%)</title><rect x="230.0" y="357" width="2.3" height="15.0" fill="rgb(214,120,46)" rx="2" ry="2" />
<text  x="233.01" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="404.2" y="373" width="0.2" height="15.0" fill="rgb(221,211,45)" rx="2" ry="2" />
<text  x="407.21" y="383.5" ></text>
</g>
<g >
<title>__calc_delta (2 samples, 0.02%)</title><rect x="565.1" y="165" width="0.3" height="15.0" fill="rgb(233,64,6)" rx="2" ry="2" />
<text  x="568.13" y="175.5" ></text>
</g>
<g >
<title>TxExecutor::checkWound (130 samples, 1.61%)</title><rect x="537.7" y="373" width="19.0" height="15.0" fill="rgb(227,193,51)" rx="2" ry="2" />
<text  x="540.70" y="383.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.01%)</title><rect x="16.0" y="341" width="0.1" height="15.0" fill="rgb(206,33,6)" rx="2" ry="2" />
<text  x="18.98" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (9 samples, 0.11%)</title><rect x="106.6" y="293" width="1.3" height="15.0" fill="rgb(248,151,10)" rx="2" ry="2" />
<text  x="109.58" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (4 samples, 0.05%)</title><rect x="209.9" y="309" width="0.6" height="15.0" fill="rgb(231,5,52)" rx="2" ry="2" />
<text  x="212.88" y="319.5" ></text>
</g>
<g >
<title>TxExecutor::unlockList (283 samples, 3.50%)</title><rect x="126.6" y="389" width="41.3" height="15.0" fill="rgb(237,147,1)" rx="2" ry="2" />
<text  x="129.57" y="399.5" >TxE..</text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (4 samples, 0.05%)</title><rect x="167.3" y="373" width="0.6" height="15.0" fill="rgb(225,143,39)" rx="2" ry="2" />
<text  x="170.27" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="159.1" y="309" width="0.2" height="15.0" fill="rgb(254,1,52)" rx="2" ry="2" />
<text  x="162.10" y="319.5" ></text>
</g>
<g >
<title>TxExecutor::searchReadSet (1 samples, 0.01%)</title><rect x="18.3" y="533" width="0.2" height="15.0" fill="rgb(218,80,40)" rx="2" ry="2" />
<text  x="21.32" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.02%)</title><rect x="317.3" y="245" width="0.2" height="15.0" fill="rgb(216,171,38)" rx="2" ry="2" />
<text  x="320.26" y="255.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (14 samples, 0.17%)</title><rect x="479.5" y="149" width="2.0" height="15.0" fill="rgb(230,217,5)" rx="2" ry="2" />
<text  x="482.49" y="159.5" ></text>
</g>
<g >
<title>pow@plt (1 samples, 0.01%)</title><rect x="614.2" y="373" width="0.1" height="15.0" fill="rgb(219,71,33)" rx="2" ry="2" />
<text  x="617.15" y="383.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.01%)</title><rect x="266.0" y="165" width="0.2" height="15.0" fill="rgb(246,148,34)" rx="2" ry="2" />
<text  x="269.05" y="175.5" ></text>
</g>
<g >
<title>get_timespec64 (1 samples, 0.01%)</title><rect x="315.7" y="293" width="0.1" height="15.0" fill="rgb(242,85,40)" rx="2" ry="2" />
<text  x="318.65" y="303.5" ></text>
</g>
<g >
<title>TxExecutor::checkWound (4 samples, 0.05%)</title><rect x="398.1" y="373" width="0.6" height="15.0" fill="rgb(231,222,35)" rx="2" ry="2" />
<text  x="401.08" y="383.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.05%)</title><rect x="1047.0" y="277" width="0.6" height="15.0" fill="rgb(242,152,50)" rx="2" ry="2" />
<text  x="1050.02" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="313.5" y="309" width="0.1" height="15.0" fill="rgb(228,39,44)" rx="2" ry="2" />
<text  x="316.46" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator++ (3 samples, 0.04%)</title><rect x="279.3" y="373" width="0.5" height="15.0" fill="rgb(247,173,1)" rx="2" ry="2" />
<text  x="282.32" y="383.5" ></text>
</g>
<g >
<title>__update_load_avg_se.isra.37 (1 samples, 0.01%)</title><rect x="565.4" y="165" width="0.2" height="15.0" fill="rgb(206,9,44)" rx="2" ry="2" />
<text  x="568.42" y="175.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="12.5" y="405" width="0.1" height="15.0" fill="rgb(230,127,11)" rx="2" ry="2" />
<text  x="15.48" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.04%)</title><rect x="395.5" y="357" width="0.4" height="15.0" fill="rgb(240,136,50)" rx="2" ry="2" />
<text  x="398.45" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (4 samples, 0.05%)</title><rect x="381.2" y="325" width="0.5" height="15.0" fill="rgb(253,229,6)" rx="2" ry="2" />
<text  x="384.16" y="335.5" ></text>
</g>
<g >
<title>myBinaryInsert (4 samples, 0.05%)</title><rect x="385.2" y="357" width="0.6" height="15.0" fill="rgb(252,79,9)" rx="2" ry="2" />
<text  x="388.24" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (938 samples, 11.60%)</title><rect x="1048.2" y="533" width="136.8" height="15.0" fill="rgb(216,30,35)" rx="2" ry="2" />
<text  x="1051.19" y="543.5" >do_syscall_64</text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.05%)</title><rect x="1047.0" y="309" width="0.6" height="15.0" fill="rgb(254,201,25)" rx="2" ry="2" />
<text  x="1050.02" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="622.6" y="389" width="0.2" height="15.0" fill="rgb(238,141,33)" rx="2" ry="2" />
<text  x="625.61" y="399.5" ></text>
</g>
<g >
<title>OpElement&lt;Tuple&gt;::OpElement (1 samples, 0.01%)</title><rect x="234.1" y="325" width="0.1" height="15.0" fill="rgb(228,216,31)" rx="2" ry="2" />
<text  x="237.09" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (133 samples, 1.64%)</title><rect x="236.1" y="309" width="19.4" height="15.0" fill="rgb(254,125,19)" rx="2" ry="2" />
<text  x="239.14" y="319.5" ></text>
</g>
<g >
<title>_vm_normal_page (2 samples, 0.02%)</title><rect x="1060.2" y="389" width="0.2" height="15.0" fill="rgb(212,217,1)" rx="2" ry="2" />
<text  x="1063.15" y="399.5" ></text>
</g>
<g >
<title>finish_task_switch (48 samples, 0.59%)</title><rect x="566.3" y="229" width="7.0" height="15.0" fill="rgb(208,111,23)" rx="2" ry="2" />
<text  x="569.30" y="239.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.05%)</title><rect x="572.7" y="101" width="0.6" height="15.0" fill="rgb(242,22,52)" rx="2" ry="2" />
<text  x="575.72" y="111.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="12.5" y="437" width="0.1" height="15.0" fill="rgb(212,149,39)" rx="2" ry="2" />
<text  x="15.48" y="447.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (1 samples, 0.01%)</title><rect x="30.0" y="533" width="0.1" height="15.0" fill="rgb(243,105,19)" rx="2" ry="2" />
<text  x="32.99" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt;::begin (1 samples, 0.01%)</title><rect x="622.6" y="405" width="0.2" height="15.0" fill="rgb(208,9,2)" rx="2" ry="2" />
<text  x="625.61" y="415.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.02%)</title><rect x="264.6" y="229" width="0.3" height="15.0" fill="rgb(245,186,45)" rx="2" ry="2" />
<text  x="267.59" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="141.2" y="325" width="0.1" height="15.0" fill="rgb(252,106,37)" rx="2" ry="2" />
<text  x="144.16" y="335.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.05%)</title><rect x="14.4" y="405" width="0.6" height="15.0" fill="rgb(208,43,27)" rx="2" ry="2" />
<text  x="17.38" y="415.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="15.7" y="517" width="0.1" height="15.0" fill="rgb(220,198,46)" rx="2" ry="2" />
<text  x="18.69" y="527.5" ></text>
</g>
<g >
<title>reweight_entity (1 samples, 0.01%)</title><rect x="163.9" y="149" width="0.2" height="15.0" fill="rgb(215,221,54)" rx="2" ry="2" />
<text  x="166.92" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (1 samples, 0.01%)</title><rect x="111.5" y="325" width="0.2" height="15.0" fill="rgb(216,3,12)" rx="2" ry="2" />
<text  x="114.54" y="335.5" ></text>
</g>
<g >
<title>nmi_restore (1 samples, 0.01%)</title><rect x="16.6" y="341" width="0.1" height="15.0" fill="rgb(221,157,27)" rx="2" ry="2" />
<text  x="19.57" y="351.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (805 samples, 9.95%)</title><rect x="1067.4" y="373" width="117.5" height="15.0" fill="rgb(244,40,46)" rx="2" ry="2" />
<text  x="1070.45" y="383.5" >free_pages_and..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator- (2 samples, 0.02%)</title><rect x="24.4" y="533" width="0.3" height="15.0" fill="rgb(236,143,24)" rx="2" ry="2" />
<text  x="27.44" y="543.5" ></text>
</g>
<g >
<title>update_curr (10 samples, 0.12%)</title><rect x="325.0" y="181" width="1.4" height="15.0" fill="rgb(250,163,15)" rx="2" ry="2" />
<text  x="327.99" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="313.3" y="341" width="0.2" height="15.0" fill="rgb(216,126,8)" rx="2" ry="2" />
<text  x="316.32" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="153.6" y="293" width="0.1" height="15.0" fill="rgb(235,184,17)" rx="2" ry="2" />
<text  x="156.56" y="303.5" ></text>
</g>
<g >
<title>event_function (5 samples, 0.06%)</title><rect x="15.0" y="453" width="0.7" height="15.0" fill="rgb(212,149,22)" rx="2" ry="2" />
<text  x="17.96" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (27 samples, 0.33%)</title><rect x="303.2" y="373" width="4.0" height="15.0" fill="rgb(244,152,44)" rx="2" ry="2" />
<text  x="306.25" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (10 samples, 0.12%)</title><rect x="39.3" y="533" width="1.5" height="15.0" fill="rgb(230,86,52)" rx="2" ry="2" />
<text  x="42.32" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::insert (10 samples, 0.12%)</title><rect x="390.1" y="357" width="1.4" height="15.0" fill="rgb(220,41,11)" rx="2" ry="2" />
<text  x="393.06" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::_M_get_Tp_allocator (2 samples, 0.02%)</title><rect x="126.1" y="357" width="0.3" height="15.0" fill="rgb(214,41,32)" rx="2" ry="2" />
<text  x="129.13" y="367.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="15.7" y="533" width="0.1" height="15.0" fill="rgb(244,96,37)" rx="2" ry="2" />
<text  x="18.69" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::base (4 samples, 0.05%)</title><rect x="19.8" y="533" width="0.6" height="15.0" fill="rgb(224,74,54)" rx="2" ry="2" />
<text  x="22.77" y="543.5" ></text>
</g>
<g >
<title>__GI___nanosleep (21 samples, 0.26%)</title><rect x="163.2" y="341" width="3.1" height="15.0" fill="rgb(229,178,14)" rx="2" ry="2" />
<text  x="166.19" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::writelockAcquire (538 samples, 6.65%)</title><rect x="495.1" y="389" width="78.5" height="15.0" fill="rgb(235,216,14)" rx="2" ry="2" />
<text  x="498.10" y="399.5" >TxExecuto..</text>
</g>
<g >
<title>timerqueue_add (2 samples, 0.02%)</title><rect x="317.7" y="229" width="0.3" height="15.0" fill="rgb(243,114,6)" rx="2" ry="2" />
<text  x="320.69" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt; (39 samples, 0.48%)</title><rect x="279.8" y="373" width="5.7" height="15.0" fill="rgb(223,4,6)" rx="2" ry="2" />
<text  x="282.76" y="383.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.01%)</title><rect x="118.1" y="165" width="0.2" height="15.0" fill="rgb(210,49,42)" rx="2" ry="2" />
<text  x="121.11" y="175.5" ></text>
</g>
<g >
<title>remote_function (3 samples, 0.04%)</title><rect x="1045.3" y="469" width="0.4" height="15.0" fill="rgb(205,49,11)" rx="2" ry="2" />
<text  x="1048.27" y="479.5" ></text>
</g>
<g >
<title>__GI___nanosleep (221 samples, 2.73%)</title><rect x="314.0" y="357" width="32.3" height="15.0" fill="rgb(241,138,38)" rx="2" ry="2" />
<text  x="317.05" y="367.5" >__..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (1 samples, 0.01%)</title><rect x="397.9" y="357" width="0.2" height="15.0" fill="rgb(221,118,7)" rx="2" ry="2" />
<text  x="400.94" y="367.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="344.1" y="197" width="0.1" height="15.0" fill="rgb(221,3,39)" rx="2" ry="2" />
<text  x="347.10" y="207.5" ></text>
</g>
<g >
<title>native_write_msr (9 samples, 0.11%)</title><rect x="1188.4" y="357" width="1.3" height="15.0" fill="rgb(229,40,7)" rx="2" ry="2" />
<text  x="1191.40" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="1045.9" y="485" width="0.1" height="15.0" fill="rgb(249,77,53)" rx="2" ry="2" />
<text  x="1048.86" y="495.5" ></text>
</g>
<g >
<title>x86_pmu_enable (3 samples, 0.04%)</title><rect x="12.6" y="405" width="0.5" height="15.0" fill="rgb(217,10,28)" rx="2" ry="2" />
<text  x="15.63" y="415.5" ></text>
</g>
<g >
<title>trigger_load_balance (2 samples, 0.02%)</title><rect x="11.5" y="389" width="0.3" height="15.0" fill="rgb(245,146,23)" rx="2" ry="2" />
<text  x="14.46" y="399.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 0.06%)</title><rect x="572.6" y="213" width="0.7" height="15.0" fill="rgb(232,71,3)" rx="2" ry="2" />
<text  x="575.57" y="223.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1185.8" y="517" width="0.1" height="15.0" fill="rgb(216,33,21)" rx="2" ry="2" />
<text  x="1188.77" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="278.7" y="373" width="0.2" height="15.0" fill="rgb(240,129,45)" rx="2" ry="2" />
<text  x="281.74" y="383.5" ></text>
</g>
<g >
<title>TxExecutor::readlockAcquire (694 samples, 8.58%)</title><rect x="172.8" y="389" width="101.3" height="15.0" fill="rgb(242,218,49)" rx="2" ry="2" />
<text  x="175.82" y="399.5" >TxExecutor::..</text>
</g>
<g >
<title>ktime_get (3 samples, 0.04%)</title><rect x="318.9" y="213" width="0.4" height="15.0" fill="rgb(205,39,19)" rx="2" ry="2" />
<text  x="321.86" y="223.5" ></text>
</g>
<g >
<title>Xoroshiro128Plus::rotl (1 samples, 0.01%)</title><rect x="19.3" y="533" width="0.2" height="15.0" fill="rgb(222,131,20)" rx="2" ry="2" />
<text  x="22.34" y="543.5" ></text>
</g>
<g >
<title>perf_ctx_unlock (4 samples, 0.05%)</title><rect x="478.0" y="197" width="0.6" height="15.0" fill="rgb(241,174,5)" rx="2" ry="2" />
<text  x="481.03" y="207.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.04%)</title><rect x="464.8" y="133" width="0.4" height="15.0" fill="rgb(243,213,12)" rx="2" ry="2" />
<text  x="467.76" y="143.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="15.8" y="469" width="0.2" height="15.0" fill="rgb(217,169,31)" rx="2" ry="2" />
<text  x="18.84" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (1 samples, 0.01%)</title><rect x="159.1" y="325" width="0.2" height="15.0" fill="rgb(211,157,26)" rx="2" ry="2" />
<text  x="162.10" y="335.5" ></text>
</g>
<g >
<title>makeProcedure (1 samples, 0.01%)</title><rect x="32.9" y="453" width="0.2" height="15.0" fill="rgb(209,99,16)" rx="2" ry="2" />
<text  x="35.91" y="463.5" ></text>
</g>
<g >
<title>__GI___clone (6,885 samples, 85.13%)</title><rect x="40.8" y="549" width="1004.5" height="15.0" fill="rgb(240,36,5)" rx="2" ry="2" />
<text  x="43.78" y="559.5" >__GI___clone</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.01%)</title><rect x="394.3" y="309" width="0.1" height="15.0" fill="rgb(253,107,30)" rx="2" ry="2" />
<text  x="397.29" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.01%)</title><rect x="163.5" y="261" width="0.1" height="15.0" fill="rgb(218,144,7)" rx="2" ry="2" />
<text  x="166.48" y="271.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (1 samples, 0.01%)</title><rect x="32.9" y="533" width="0.2" height="15.0" fill="rgb(211,85,4)" rx="2" ry="2" />
<text  x="35.91" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::begin (7 samples, 0.09%)</title><rect x="224.9" y="341" width="1.0" height="15.0" fill="rgb(248,62,10)" rx="2" ry="2" />
<text  x="227.90" y="351.5" ></text>
</g>
<g >
<title>unmap_vmas (937 samples, 11.59%)</title><rect x="1048.3" y="437" width="136.7" height="15.0" fill="rgb(222,120,6)" rx="2" ry="2" />
<text  x="1051.34" y="447.5" >unmap_vmas</text>
</g>
<g >
<title>TxExecutor::concat (4 samples, 0.05%)</title><rect x="223.6" y="325" width="0.6" height="15.0" fill="rgb(233,159,50)" rx="2" ry="2" />
<text  x="226.59" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::insert (12 samples, 0.15%)</title><rect x="210.5" y="357" width="1.7" height="15.0" fill="rgb(205,182,4)" rx="2" ry="2" />
<text  x="213.46" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (2 samples, 0.02%)</title><rect x="107.9" y="325" width="0.3" height="15.0" fill="rgb(231,86,1)" rx="2" ry="2" />
<text  x="110.90" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::back (16 samples, 0.20%)</title><rect x="257.0" y="357" width="2.3" height="15.0" fill="rgb(235,134,26)" rx="2" ry="2" />
<text  x="260.00" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="471.3" y="213" width="0.2" height="15.0" fill="rgb(237,197,41)" rx="2" ry="2" />
<text  x="474.32" y="223.5" ></text>
</g>
<g >
<title>TxExecutor::eraseFromLists (3 samples, 0.04%)</title><rect x="313.0" y="373" width="0.5" height="15.0" fill="rgb(213,141,50)" rx="2" ry="2" />
<text  x="316.02" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="396.5" y="325" width="0.4" height="15.0" fill="rgb(252,70,21)" rx="2" ry="2" />
<text  x="399.48" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (3 samples, 0.04%)</title><rect x="227.8" y="341" width="0.5" height="15.0" fill="rgb(239,23,30)" rx="2" ry="2" />
<text  x="230.82" y="351.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (35 samples, 0.43%)</title><rect x="567.5" y="181" width="5.1" height="15.0" fill="rgb(251,115,26)" rx="2" ry="2" />
<text  x="570.47" y="191.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (15 samples, 0.19%)</title><rect x="1187.5" y="517" width="2.2" height="15.0" fill="rgb(222,194,10)" rx="2" ry="2" />
<text  x="1190.52" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="15.8" y="485" width="0.2" height="15.0" fill="rgb(244,93,47)" rx="2" ry="2" />
<text  x="18.84" y="495.5" ></text>
</g>
<g >
<title>TxExecutor::addCommitSemaphore (5 samples, 0.06%)</title><rect x="171.2" y="389" width="0.7" height="15.0" fill="rgb(212,108,54)" rx="2" ry="2" />
<text  x="174.21" y="399.5" ></text>
</g>
<g >
<title>__GI___nanosleep (81 samples, 1.00%)</title><rect x="262.3" y="357" width="11.8" height="15.0" fill="rgb(231,13,27)" rx="2" ry="2" />
<text  x="265.25" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="461.8" y="325" width="0.3" height="15.0" fill="rgb(243,213,15)" rx="2" ry="2" />
<text  x="464.84" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="1045.0" y="437" width="0.3" height="15.0" fill="rgb(253,5,35)" rx="2" ry="2" />
<text  x="1047.98" y="447.5" ></text>
</g>
<g >
<title>TxExecutor::checkWound (5 samples, 0.06%)</title><rect x="14.2" y="549" width="0.8" height="15.0" fill="rgb(222,178,40)" rx="2" ry="2" />
<text  x="17.23" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="166.7" y="357" width="0.1" height="15.0" fill="rgb(209,119,20)" rx="2" ry="2" />
<text  x="169.69" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (7 samples, 0.09%)</title><rect x="1186.5" y="485" width="1.0" height="15.0" fill="rgb(230,223,0)" rx="2" ry="2" />
<text  x="1189.50" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (13 samples, 0.16%)</title><rect x="154.3" y="309" width="1.9" height="15.0" fill="rgb(249,36,14)" rx="2" ry="2" />
<text  x="157.29" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="225.9" y="325" width="0.3" height="15.0" fill="rgb(238,226,49)" rx="2" ry="2" />
<text  x="228.92" y="335.5" ></text>
</g>
<g >
<title>finish_task_switch (42 samples, 0.52%)</title><rect x="267.4" y="229" width="6.1" height="15.0" fill="rgb(249,77,34)" rx="2" ry="2" />
<text  x="270.36" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="113.0" y="325" width="0.1" height="15.0" fill="rgb(250,101,38)" rx="2" ry="2" />
<text  x="116.00" y="335.5" ></text>
</g>
<g >
<title>lapic_next_deadline (2 samples, 0.02%)</title><rect x="563.5" y="213" width="0.3" height="15.0" fill="rgb(218,63,25)" rx="2" ry="2" />
<text  x="566.53" y="223.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.01%)</title><rect x="482.3" y="149" width="0.1" height="15.0" fill="rgb(247,220,33)" rx="2" ry="2" />
<text  x="485.26" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::emplace_back&lt;unsigned long&amp;, Tuple*&amp;, char  (182 samples, 2.25%)</title><rect x="232.8" y="373" width="26.5" height="15.0" fill="rgb(216,216,20)" rx="2" ry="2" />
<text  x="235.78" y="383.5" >s..</text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.01%)</title><rect x="316.1" y="165" width="0.1" height="15.0" fill="rgb(230,71,1)" rx="2" ry="2" />
<text  x="319.09" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (4 samples, 0.05%)</title><rect x="1045.3" y="549" width="0.6" height="15.0" fill="rgb(247,68,15)" rx="2" ry="2" />
<text  x="1048.27" y="559.5" ></text>
</g>
<g >
<title>std::operator&amp; (7 samples, 0.09%)</title><rect x="31.9" y="533" width="1.0" height="15.0" fill="rgb(252,39,25)" rx="2" ry="2" />
<text  x="34.88" y="543.5" ></text>
</g>
<g >
<title>get_timespec64 (2 samples, 0.02%)</title><rect x="263.4" y="293" width="0.3" height="15.0" fill="rgb(224,200,27)" rx="2" ry="2" />
<text  x="266.42" y="303.5" ></text>
</g>
<g >
<title>deactivate_task (8 samples, 0.10%)</title><rect x="266.2" y="229" width="1.2" height="15.0" fill="rgb(209,164,53)" rx="2" ry="2" />
<text  x="269.19" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="384.4" y="357" width="0.1" height="15.0" fill="rgb(210,151,25)" rx="2" ry="2" />
<text  x="387.37" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="614.0" y="245" width="0.2" height="15.0" fill="rgb(223,194,19)" rx="2" ry="2" />
<text  x="617.01" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="318.3" y="229" width="0.3" height="15.0" fill="rgb(241,17,54)" rx="2" ry="2" />
<text  x="321.28" y="239.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (7 samples, 0.09%)</title><rect x="11.5" y="533" width="1.0" height="15.0" fill="rgb(232,67,53)" rx="2" ry="2" />
<text  x="14.46" y="543.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.01%)</title><rect x="1186.1" y="453" width="0.1" height="15.0" fill="rgb(237,77,22)" rx="2" ry="2" />
<text  x="1189.06" y="463.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.06%)</title><rect x="572.6" y="165" width="0.7" height="15.0" fill="rgb(227,155,12)" rx="2" ry="2" />
<text  x="575.57" y="175.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (4 samples, 0.05%)</title><rect x="1184.0" y="341" width="0.6" height="15.0" fill="rgb(228,40,40)" rx="2" ry="2" />
<text  x="1187.02" y="351.5" ></text>
</g>
<g >
<title>free_unref_page_list (201 samples, 2.49%)</title><rect x="1151.9" y="341" width="29.3" height="15.0" fill="rgb(247,150,51)" rx="2" ry="2" />
<text  x="1154.92" y="351.5" >fr..</text>
</g>
<g >
<title>event_function (5 samples, 0.06%)</title><rect x="1185.0" y="453" width="0.8" height="15.0" fill="rgb(247,24,36)" rx="2" ry="2" />
<text  x="1188.04" y="463.5" ></text>
</g>
<g >
<title>_mi_page_reclaim (1 samples, 0.01%)</title><rect x="1046.7" y="437" width="0.2" height="15.0" fill="rgb(228,74,45)" rx="2" ry="2" />
<text  x="1049.73" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (7 samples, 0.09%)</title><rect x="224.9" y="325" width="1.0" height="15.0" fill="rgb(225,226,38)" rx="2" ry="2" />
<text  x="227.90" y="335.5" ></text>
</g>
<g >
<title>std::move_backward&lt;int*, int*&gt; (2 samples, 0.02%)</title><rect x="532.6" y="325" width="0.3" height="15.0" fill="rgb(253,44,30)" rx="2" ry="2" />
<text  x="535.60" y="335.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.06%)</title><rect x="13.5" y="373" width="0.7" height="15.0" fill="rgb(208,46,3)" rx="2" ry="2" />
<text  x="16.50" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_enable (9 samples, 0.11%)</title><rect x="164.5" y="181" width="1.3" height="15.0" fill="rgb(234,33,35)" rx="2" ry="2" />
<text  x="167.50" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="1185.8" y="453" width="0.1" height="15.0" fill="rgb(205,187,27)" rx="2" ry="2" />
<text  x="1188.77" y="463.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.06%)</title><rect x="1046.0" y="357" width="0.7" height="15.0" fill="rgb(251,187,14)" rx="2" ry="2" />
<text  x="1049.00" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator* (1 samples, 0.01%)</title><rect x="26.9" y="533" width="0.2" height="15.0" fill="rgb(241,159,15)" rx="2" ry="2" />
<text  x="29.92" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="91.7" y="341" width="0.1" height="15.0" fill="rgb(225,129,44)" rx="2" ry="2" />
<text  x="94.70" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator++ (5 samples, 0.06%)</title><rect x="298.0" y="373" width="0.7" height="15.0" fill="rgb(206,66,10)" rx="2" ry="2" />
<text  x="301.00" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_enable (7 samples, 0.09%)</title><rect x="118.5" y="181" width="1.1" height="15.0" fill="rgb(252,211,48)" rx="2" ry="2" />
<text  x="121.55" y="191.5" ></text>
</g>
<g >
<title>SetElement&lt;Tuple&gt;::SetElement (156 samples, 1.93%)</title><rect x="435.6" y="325" width="22.7" height="15.0" fill="rgb(233,115,7)" rx="2" ry="2" />
<text  x="438.58" y="335.5" >S..</text>
</g>
<g >
<title>std::__copy_move_backward_a2&lt;true, int*, int*&gt; (2 samples, 0.02%)</title><rect x="532.6" y="309" width="0.3" height="15.0" fill="rgb(234,157,44)" rx="2" ry="2" />
<text  x="535.60" y="319.5" ></text>
</g>
<g >
<title>Tuple::ownersAdd (1 samples, 0.01%)</title><rect x="17.0" y="533" width="0.1" height="15.0" fill="rgb(236,200,33)" rx="2" ry="2" />
<text  x="20.00" y="543.5" ></text>
</g>
<g >
<title>Tuple::sortAdd (1 samples, 0.01%)</title><rect x="171.1" y="389" width="0.1" height="15.0" fill="rgb(248,6,10)" rx="2" ry="2" />
<text  x="174.07" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt;::emplace_back&lt;Ope, unsigned long&amp;&gt; (1 samples, 0.01%)</title><rect x="1185.8" y="549" width="0.1" height="15.0" fill="rgb(225,157,33)" rx="2" ry="2" />
<text  x="1188.77" y="559.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.01%)</title><rect x="273.8" y="213" width="0.1" height="15.0" fill="rgb(250,112,8)" rx="2" ry="2" />
<text  x="276.78" y="223.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.01%)</title><rect x="15.8" y="453" width="0.2" height="15.0" fill="rgb(252,21,12)" rx="2" ry="2" />
<text  x="18.84" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="13.2" y="485" width="0.3" height="15.0" fill="rgb(214,105,6)" rx="2" ry="2" />
<text  x="16.21" y="495.5" ></text>
</g>
<g >
<title>TxExecutor::LockRelease (254 samples, 3.14%)</title><rect x="129.2" y="373" width="37.1" height="15.0" fill="rgb(231,4,47)" rx="2" ry="2" />
<text  x="132.20" y="383.5" >TxE..</text>
</g>
<g >
<title>worker (1 samples, 0.01%)</title><rect x="32.9" y="485" width="0.2" height="15.0" fill="rgb(222,172,24)" rx="2" ry="2" />
<text  x="35.91" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="154.1" y="277" width="0.2" height="15.0" fill="rgb(236,67,21)" rx="2" ry="2" />
<text  x="157.14" y="287.5" ></text>
</g>
<g >
<title>update_blocked_averages (4 samples, 0.05%)</title><rect x="1186.8" y="437" width="0.6" height="15.0" fill="rgb(215,86,14)" rx="2" ry="2" />
<text  x="1189.79" y="447.5" ></text>
</g>
<g >
<title>__GI___nanosleep (217 samples, 2.68%)</title><rect x="463.4" y="357" width="31.7" height="15.0" fill="rgb(213,195,40)" rx="2" ry="2" />
<text  x="466.44" y="367.5" >__..</text>
</g>
<g >
<title>OpElement&lt;Tuple&gt;::OpElement (7 samples, 0.09%)</title><rect x="436.0" y="309" width="1.0" height="15.0" fill="rgb(226,123,42)" rx="2" ry="2" />
<text  x="439.01" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (11 samples, 0.14%)</title><rect x="378.7" y="325" width="1.6" height="15.0" fill="rgb(247,135,1)" rx="2" ry="2" />
<text  x="381.68" y="335.5" ></text>
</g>
<g >
<title>sys_nanosleep (12 samples, 0.15%)</title><rect x="117.8" y="293" width="1.8" height="15.0" fill="rgb(221,166,43)" rx="2" ry="2" />
<text  x="120.82" y="303.5" ></text>
</g>
<g >
<title>makeProcedure (128 samples, 1.58%)</title><rect x="595.6" y="389" width="18.7" height="15.0" fill="rgb(248,208,52)" rx="2" ry="2" />
<text  x="598.62" y="399.5" ></text>
</g>
<g >
<title>TxExecutor::get_tuple (7 samples, 0.09%)</title><rect x="396.9" y="389" width="1.0" height="15.0" fill="rgb(214,155,16)" rx="2" ry="2" />
<text  x="399.91" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (4 samples, 0.05%)</title><rect x="390.8" y="341" width="0.6" height="15.0" fill="rgb(214,35,5)" rx="2" ry="2" />
<text  x="393.79" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="154.1" y="293" width="0.2" height="15.0" fill="rgb(234,55,44)" rx="2" ry="2" />
<text  x="157.14" y="303.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1185.8" y="533" width="0.1" height="15.0" fill="rgb(224,176,53)" rx="2" ry="2" />
<text  x="1188.77" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (2 samples, 0.02%)</title><rect x="88.9" y="325" width="0.3" height="15.0" fill="rgb(237,180,10)" rx="2" ry="2" />
<text  x="91.93" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.01%)</title><rect x="116.6" y="357" width="0.2" height="15.0" fill="rgb(231,75,50)" rx="2" ry="2" />
<text  x="119.65" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="384.2" y="357" width="0.2" height="15.0" fill="rgb(239,229,50)" rx="2" ry="2" />
<text  x="387.22" y="367.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="398.2" y="277" width="0.2" height="15.0" fill="rgb(209,96,31)" rx="2" ry="2" />
<text  x="401.23" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt; (4 samples, 0.05%)</title><rect x="166.3" y="373" width="0.5" height="15.0" fill="rgb(251,21,1)" rx="2" ry="2" />
<text  x="169.25" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (11 samples, 0.14%)</title><rect x="555.1" y="341" width="1.6" height="15.0" fill="rgb(227,211,19)" rx="2" ry="2" />
<text  x="558.06" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (2 samples, 0.02%)</title><rect x="256.3" y="325" width="0.3" height="15.0" fill="rgb(227,118,54)" rx="2" ry="2" />
<text  x="259.27" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="378.5" y="325" width="0.2" height="15.0" fill="rgb(214,134,15)" rx="2" ry="2" />
<text  x="381.53" y="335.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (201 samples, 2.49%)</title><rect x="315.8" y="293" width="29.3" height="15.0" fill="rgb(224,39,33)" rx="2" ry="2" />
<text  x="318.80" y="303.5" >hr..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.02%)</title><rect x="140.6" y="341" width="0.3" height="15.0" fill="rgb(212,71,51)" rx="2" ry="2" />
<text  x="143.58" y="351.5" ></text>
</g>
<g >
<title>read_tsc (3 samples, 0.04%)</title><rect x="318.9" y="197" width="0.4" height="15.0" fill="rgb(218,146,26)" rx="2" ry="2" />
<text  x="321.86" y="207.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="430.2" y="277" width="0.1" height="15.0" fill="rgb(212,215,19)" rx="2" ry="2" />
<text  x="433.18" y="287.5" ></text>
</g>
<g >
<title>myBinarySearch (5 samples, 0.06%)</title><rect x="1185.0" y="549" width="0.8" height="15.0" fill="rgb(211,205,36)" rx="2" ry="2" />
<text  x="1188.04" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (4 samples, 0.05%)</title><rect x="159.4" y="341" width="0.6" height="15.0" fill="rgb(246,70,19)" rx="2" ry="2" />
<text  x="162.40" y="351.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (90 samples, 1.11%)</title><rect x="331.0" y="181" width="13.1" height="15.0" fill="rgb(224,16,35)" rx="2" ry="2" />
<text  x="333.97" y="191.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.01%)</title><rect x="118.5" y="133" width="0.2" height="15.0" fill="rgb(248,70,22)" rx="2" ry="2" />
<text  x="121.55" y="143.5" ></text>
</g>
<g >
<title>TxExecutor::LockRelease (5 samples, 0.06%)</title><rect x="13.5" y="549" width="0.7" height="15.0" fill="rgb(254,23,10)" rx="2" ry="2" />
<text  x="16.50" y="559.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="1186.2" y="453" width="0.2" height="15.0" fill="rgb(205,187,5)" rx="2" ry="2" />
<text  x="1189.21" y="463.5" ></text>
</g>
<g >
<title>nmi_restore (4 samples, 0.05%)</title><rect x="272.2" y="149" width="0.6" height="15.0" fill="rgb(254,67,21)" rx="2" ry="2" />
<text  x="275.17" y="159.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="1186.4" y="453" width="0.1" height="15.0" fill="rgb(210,29,16)" rx="2" ry="2" />
<text  x="1189.35" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="573.6" y="389" width="0.1" height="15.0" fill="rgb(247,71,12)" rx="2" ry="2" />
<text  x="576.59" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3 samples, 0.04%)</title><rect x="1047.6" y="549" width="0.4" height="15.0" fill="rgb(225,188,29)" rx="2" ry="2" />
<text  x="1050.61" y="559.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1185.9" y="533" width="0.2" height="15.0" fill="rgb(227,218,52)" rx="2" ry="2" />
<text  x="1188.91" y="543.5" ></text>
</g>
<g >
<title>tick_program_event (10 samples, 0.12%)</title><rect x="468.5" y="245" width="1.5" height="15.0" fill="rgb(212,138,37)" rx="2" ry="2" />
<text  x="471.55" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="622.3" y="341" width="0.3" height="15.0" fill="rgb(251,220,54)" rx="2" ry="2" />
<text  x="625.32" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;SetElement&lt;Tuple&gt;*, SetElement&lt;Tuple&gt; &gt; (1 samples, 0.01%)</title><rect x="168.2" y="357" width="0.1" height="15.0" fill="rgb(236,137,10)" rx="2" ry="2" />
<text  x="171.15" y="367.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.01%)</title><rect x="163.9" y="165" width="0.2" height="15.0" fill="rgb(240,151,2)" rx="2" ry="2" />
<text  x="166.92" y="175.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.04%)</title><rect x="1185.3" y="357" width="0.5" height="15.0" fill="rgb(220,42,19)" rx="2" ry="2" />
<text  x="1188.33" y="367.5" ></text>
</g>
<g >
<title>fill_pmd (1 samples, 0.01%)</title><rect x="479.2" y="149" width="0.1" height="15.0" fill="rgb(223,150,8)" rx="2" ry="2" />
<text  x="482.20" y="159.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.01%)</title><rect x="493.8" y="245" width="0.1" height="15.0" fill="rgb(209,194,12)" rx="2" ry="2" />
<text  x="496.79" y="255.5" ></text>
</g>
<g >
<title>__mpexp_fma (1 samples, 0.01%)</title><rect x="32.9" y="357" width="0.2" height="15.0" fill="rgb(231,7,24)" rx="2" ry="2" />
<text  x="35.91" y="367.5" ></text>
</g>
<g >
<title>Tuple::ownersAdd (1 samples, 0.01%)</title><rect x="159.0" y="341" width="0.1" height="15.0" fill="rgb(251,84,23)" rx="2" ry="2" />
<text  x="161.96" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.01%)</title><rect x="1187.4" y="453" width="0.1" height="15.0" fill="rgb(223,66,10)" rx="2" ry="2" />
<text  x="1190.37" y="463.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.01%)</title><rect x="398.7" y="229" width="0.1" height="15.0" fill="rgb(253,45,42)" rx="2" ry="2" />
<text  x="401.66" y="239.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (15 samples, 0.19%)</title><rect x="86.4" y="341" width="2.2" height="15.0" fill="rgb(207,110,46)" rx="2" ry="2" />
<text  x="89.45" y="351.5" ></text>
</g>
<g >
<title>sys_nanosleep (73 samples, 0.90%)</title><rect x="263.4" y="309" width="10.7" height="15.0" fill="rgb(214,9,13)" rx="2" ry="2" />
<text  x="266.42" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="101.2" y="309" width="0.1" height="15.0" fill="rgb(244,181,21)" rx="2" ry="2" />
<text  x="104.18" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="24.7" y="533" width="0.3" height="15.0" fill="rgb(207,61,31)" rx="2" ry="2" />
<text  x="27.74" y="543.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.01%)</title><rect x="563.8" y="197" width="0.2" height="15.0" fill="rgb(210,116,46)" rx="2" ry="2" />
<text  x="566.82" y="207.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="468.5" y="197" width="0.2" height="15.0" fill="rgb(254,84,24)" rx="2" ry="2" />
<text  x="471.55" y="207.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="272.8" y="213" width="0.1" height="15.0" fill="rgb(216,84,38)" rx="2" ry="2" />
<text  x="275.76" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.02%)</title><rect x="203.5" y="357" width="0.2" height="15.0" fill="rgb(213,50,12)" rx="2" ry="2" />
<text  x="206.46" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="104.2" y="309" width="0.2" height="15.0" fill="rgb(214,119,42)" rx="2" ry="2" />
<text  x="107.25" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (6 samples, 0.07%)</title><rect x="124.4" y="373" width="0.9" height="15.0" fill="rgb(212,85,27)" rx="2" ry="2" />
<text  x="127.38" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (11 samples, 0.14%)</title><rect x="552.4" y="357" width="1.6" height="15.0" fill="rgb(229,66,17)" rx="2" ry="2" />
<text  x="555.44" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt;::begin (1 samples, 0.01%)</title><rect x="614.3" y="389" width="0.1" height="15.0" fill="rgb(212,175,43)" rx="2" ry="2" />
<text  x="617.30" y="399.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.05%)</title><rect x="11.9" y="357" width="0.6" height="15.0" fill="rgb(232,194,3)" rx="2" ry="2" />
<text  x="14.90" y="367.5" ></text>
</g>
<g >
<title>dequeue_task_fair (13 samples, 0.16%)</title><rect x="564.0" y="213" width="1.9" height="15.0" fill="rgb(241,79,23)" rx="2" ry="2" />
<text  x="566.96" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (4 samples, 0.05%)</title><rect x="382.6" y="309" width="0.6" height="15.0" fill="rgb(246,195,13)" rx="2" ry="2" />
<text  x="385.62" y="319.5" ></text>
</g>
<g >
<title>start_thread (6,885 samples, 85.13%)</title><rect x="40.8" y="533" width="1004.5" height="15.0" fill="rgb(210,42,39)" rx="2" ry="2" />
<text  x="43.78" y="543.5" >start_thread</text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt; (5 samples, 0.06%)</title><rect x="1046.0" y="549" width="0.7" height="15.0" fill="rgb(213,10,38)" rx="2" ry="2" />
<text  x="1049.00" y="559.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (1 samples, 0.01%)</title><rect x="262.8" y="341" width="0.2" height="15.0" fill="rgb(251,51,6)" rx="2" ry="2" />
<text  x="265.84" y="351.5" ></text>
</g>
<g >
<title>sys_nanosleep (3 samples, 0.04%)</title><rect x="396.5" y="309" width="0.4" height="15.0" fill="rgb(225,64,25)" rx="2" ry="2" />
<text  x="399.48" y="319.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.04%)</title><rect x="13.8" y="341" width="0.4" height="15.0" fill="rgb(210,87,49)" rx="2" ry="2" />
<text  x="16.79" y="351.5" ></text>
</g>
<g >
<title>usleep (221 samples, 2.73%)</title><rect x="462.9" y="373" width="32.2" height="15.0" fill="rgb(206,203,11)" rx="2" ry="2" />
<text  x="465.86" y="383.5" >us..</text>
</g>
<g >
<title>Tuple::ownersRemove (89 samples, 1.10%)</title><rect x="371.5" y="373" width="13.0" height="15.0" fill="rgb(244,3,42)" rx="2" ry="2" />
<text  x="374.53" y="383.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.01%)</title><rect x="562.2" y="213" width="0.2" height="15.0" fill="rgb(233,169,30)" rx="2" ry="2" />
<text  x="565.21" y="223.5" ></text>
</g>
<g >
<title>bamboo.exe (8,088 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(223,198,50)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >bamboo.exe</text>
</g>
<g >
<title>__sqr (1 samples, 0.01%)</title><rect x="32.9" y="341" width="0.2" height="15.0" fill="rgb(206,134,45)" rx="2" ry="2" />
<text  x="35.91" y="351.5" ></text>
</g>
<g >
<title>cgroup_cpu_stat_updated (1 samples, 0.01%)</title><rect x="325.9" y="149" width="0.1" height="15.0" fill="rgb(240,217,20)" rx="2" ry="2" />
<text  x="328.86" y="159.5" ></text>
</g>
<g >
<title>clockevents_program_event (14 samples, 0.17%)</title><rect x="318.9" y="229" width="2.0" height="15.0" fill="rgb(220,121,49)" rx="2" ry="2" />
<text  x="321.86" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="323.1" y="229" width="0.1" height="15.0" fill="rgb(220,168,37)" rx="2" ry="2" />
<text  x="326.09" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (939 samples, 11.61%)</title><rect x="1048.0" y="549" width="137.0" height="15.0" fill="rgb(238,23,51)" rx="2" ry="2" />
<text  x="1051.04" y="559.5" >entry_SYSCALL_64_..</text>
</g>
<g >
<title>__dec_node_state (12 samples, 0.15%)</title><rect x="1065.7" y="373" width="1.7" height="15.0" fill="rgb(223,103,39)" rx="2" ry="2" />
<text  x="1068.70" y="383.5" ></text>
</g>
<g >
<title>Tuple::remove (6 samples, 0.07%)</title><rect x="393.7" y="357" width="0.9" height="15.0" fill="rgb(231,128,22)" rx="2" ry="2" />
<text  x="396.70" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (1 samples, 0.01%)</title><rect x="226.5" y="357" width="0.2" height="15.0" fill="rgb(239,79,26)" rx="2" ry="2" />
<text  x="229.51" y="367.5" ></text>
</g>
<g >
<title>dequeue_entity (7 samples, 0.09%)</title><rect x="266.3" y="197" width="1.1" height="15.0" fill="rgb(209,181,14)" rx="2" ry="2" />
<text  x="269.34" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (3 samples, 0.04%)</title><rect x="151.1" y="325" width="0.4" height="15.0" fill="rgb(254,2,29)" rx="2" ry="2" />
<text  x="154.08" y="335.5" ></text>
</g>
<g >
<title>account_entity_dequeue (2 samples, 0.02%)</title><rect x="564.3" y="181" width="0.2" height="15.0" fill="rgb(218,41,36)" rx="2" ry="2" />
<text  x="567.26" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_insert_aux&lt;int&gt; (1 samples, 0.01%)</title><rect x="211.2" y="341" width="0.1" height="15.0" fill="rgb(208,228,22)" rx="2" ry="2" />
<text  x="214.19" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::searchWriteSet (119 samples, 1.47%)</title><rect x="398.8" y="389" width="17.4" height="15.0" fill="rgb(247,46,47)" rx="2" ry="2" />
<text  x="401.81" y="399.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 0.06%)</title><rect x="16.0" y="517" width="0.7" height="15.0" fill="rgb(250,48,47)" rx="2" ry="2" />
<text  x="18.98" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Result*, std::vector&lt;Result, std::allocator&lt;Result&gt; &gt; &gt;::base (2 samples, 0.02%)</title><rect x="20.9" y="533" width="0.3" height="15.0" fill="rgb(245,13,16)" rx="2" ry="2" />
<text  x="23.94" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (4 samples, 0.05%)</title><rect x="152.5" y="309" width="0.6" height="15.0" fill="rgb(228,187,18)" rx="2" ry="2" />
<text  x="155.54" y="319.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="15.8" y="501" width="0.2" height="15.0" fill="rgb(218,124,45)" rx="2" ry="2" />
<text  x="18.84" y="511.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (1 samples, 0.01%)</title><rect x="387.9" y="309" width="0.1" height="15.0" fill="rgb(224,26,51)" rx="2" ry="2" />
<text  x="390.87" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (38 samples, 0.47%)</title><rect x="377.7" y="341" width="5.5" height="15.0" fill="rgb(244,166,7)" rx="2" ry="2" />
<text  x="380.66" y="351.5" ></text>
</g>
<g >
<title>remote_function (5 samples, 0.06%)</title><rect x="15.0" y="469" width="0.7" height="15.0" fill="rgb(226,227,10)" rx="2" ry="2" />
<text  x="17.96" y="479.5" ></text>
</g>
<g >
<title>TxExecutor::LockRelease (295 samples, 3.65%)</title><rect x="76.7" y="373" width="43.0" height="15.0" fill="rgb(228,216,18)" rx="2" ry="2" />
<text  x="79.67" y="383.5" >TxEx..</text>
</g>
<g >
<title>intel_bts_enable_local (3 samples, 0.04%)</title><rect x="1188.0" y="357" width="0.4" height="15.0" fill="rgb(218,156,9)" rx="2" ry="2" />
<text  x="1190.96" y="367.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (6,883 samples, 85.10%)</title><rect x="40.8" y="453" width="1004.2" height="15.0" fill="rgb(227,192,0)" rx="2" ry="2" />
<text  x="43.78" y="463.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (15 samples, 0.19%)</title><rect x="580.3" y="389" width="2.2" height="15.0" fill="rgb(242,160,49)" rx="2" ry="2" />
<text  x="583.30" y="399.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="13.4" y="437" width="0.1" height="15.0" fill="rgb(243,173,31)" rx="2" ry="2" />
<text  x="16.36" y="447.5" ></text>
</g>
<g >
<title>libc_feholdsetround_sse_ctx (4 samples, 0.05%)</title><rect x="607.3" y="341" width="0.6" height="15.0" fill="rgb(231,183,43)" rx="2" ry="2" />
<text  x="610.29" y="351.5" ></text>
</g>
<g >
<title>do_nmi (1 samples, 0.01%)</title><rect x="267.8" y="149" width="0.1" height="15.0" fill="rgb(239,74,51)" rx="2" ry="2" />
<text  x="270.80" y="159.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="116.8" y="341" width="0.1" height="15.0" fill="rgb(254,9,6)" rx="2" ry="2" />
<text  x="119.80" y="351.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1045.9" y="517" width="0.1" height="15.0" fill="rgb(248,56,21)" rx="2" ry="2" />
<text  x="1048.86" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (2 samples, 0.02%)</title><rect x="430.0" y="341" width="0.3" height="15.0" fill="rgb(244,191,30)" rx="2" ry="2" />
<text  x="433.03" y="351.5" ></text>
</g>
<g >
<title>put_prev_entity (2 samples, 0.02%)</title><rect x="344.4" y="197" width="0.3" height="15.0" fill="rgb(248,127,54)" rx="2" ry="2" />
<text  x="347.39" y="207.5" ></text>
</g>
<g >
<title>usleep (5 samples, 0.06%)</title><rect x="16.0" y="533" width="0.7" height="15.0" fill="rgb(232,33,24)" rx="2" ry="2" />
<text  x="18.98" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="547.9" y="325" width="0.2" height="15.0" fill="rgb(208,193,53)" rx="2" ry="2" />
<text  x="550.92" y="335.5" ></text>
</g>
<g >
<title>_mi_abandoned_reclaim_all (1 samples, 0.01%)</title><rect x="1046.7" y="453" width="0.2" height="15.0" fill="rgb(248,130,23)" rx="2" ry="2" />
<text  x="1049.73" y="463.5" ></text>
</g>
<g >
<title>__run_exit_handlers (1 samples, 0.01%)</title><rect x="1046.7" y="501" width="0.2" height="15.0" fill="rgb(215,101,49)" rx="2" ry="2" />
<text  x="1049.73" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::begin (2 samples, 0.02%)</title><rect x="549.7" y="341" width="0.3" height="15.0" fill="rgb(251,184,35)" rx="2" ry="2" />
<text  x="552.67" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::read (1 samples, 0.01%)</title><rect x="15.7" y="549" width="0.1" height="15.0" fill="rgb(211,150,20)" rx="2" ry="2" />
<text  x="18.69" y="559.5" ></text>
</g>
<g >
<title>TxExecutor::PromoteWaiters (4 samples, 0.05%)</title><rect x="533.0" y="373" width="0.6" height="15.0" fill="rgb(243,161,2)" rx="2" ry="2" />
<text  x="536.03" y="383.5" ></text>
</g>
<g >
<title>get_timespec64 (3 samples, 0.04%)</title><rect x="465.2" y="293" width="0.4" height="15.0" fill="rgb(233,32,6)" rx="2" ry="2" />
<text  x="468.19" y="303.5" ></text>
</g>
<g >
<title>Tuple::sortAdd (3 samples, 0.04%)</title><rect x="311.7" y="373" width="0.4" height="15.0" fill="rgb(240,187,43)" rx="2" ry="2" />
<text  x="314.71" y="383.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="112.4" y="261" width="0.3" height="15.0" fill="rgb(211,53,2)" rx="2" ry="2" />
<text  x="115.42" y="271.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.01%)</title><rect x="118.1" y="181" width="0.2" height="15.0" fill="rgb(205,61,37)" rx="2" ry="2" />
<text  x="121.11" y="191.5" ></text>
</g>
<g >
<title>down_write_killable (2 samples, 0.02%)</title><rect x="1045.0" y="389" width="0.3" height="15.0" fill="rgb(210,17,15)" rx="2" ry="2" />
<text  x="1047.98" y="399.5" ></text>
</g>
<g >
<title>TxExecutor::searchWriteSet (1 samples, 0.01%)</title><rect x="15.8" y="549" width="0.2" height="15.0" fill="rgb(229,214,26)" rx="2" ry="2" />
<text  x="18.84" y="559.5" ></text>
</g>
<g >
<title>Xoroshiro128Plus::next (3 samples, 0.04%)</title><rect x="587.5" y="405" width="0.4" height="15.0" fill="rgb(232,119,25)" rx="2" ry="2" />
<text  x="590.45" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::destroy&lt;int&gt; (1 samples, 0.01%)</title><rect x="381.6" y="309" width="0.1" height="15.0" fill="rgb(250,117,33)" rx="2" ry="2" />
<text  x="384.59" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="148.9" y="325" width="0.3" height="15.0" fill="rgb(244,86,1)" rx="2" ry="2" />
<text  x="151.89" y="335.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.01%)</title><rect x="344.1" y="165" width="0.1" height="15.0" fill="rgb(245,170,10)" rx="2" ry="2" />
<text  x="347.10" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator++ (7 samples, 0.09%)</title><rect x="405.2" y="373" width="1.1" height="15.0" fill="rgb(248,22,14)" rx="2" ry="2" />
<text  x="408.23" y="383.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (101 samples, 1.25%)</title><rect x="185.9" y="373" width="14.8" height="15.0" fill="rgb(244,46,22)" rx="2" ry="2" />
<text  x="188.95" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="468.3" y="229" width="0.1" height="15.0" fill="rgb(233,58,37)" rx="2" ry="2" />
<text  x="471.26" y="239.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.01%)</title><rect x="474.7" y="165" width="0.1" height="15.0" fill="rgb(207,169,6)" rx="2" ry="2" />
<text  x="477.68" y="175.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.05%)</title><rect x="572.7" y="117" width="0.6" height="15.0" fill="rgb(219,112,43)" rx="2" ry="2" />
<text  x="575.72" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.01%)</title><rect x="162.5" y="357" width="0.1" height="15.0" fill="rgb(208,95,54)" rx="2" ry="2" />
<text  x="165.46" y="367.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (71 samples, 0.88%)</title><rect x="263.7" y="293" width="10.4" height="15.0" fill="rgb(213,135,16)" rx="2" ry="2" />
<text  x="266.71" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="373.7" y="341" width="0.2" height="15.0" fill="rgb(240,106,16)" rx="2" ry="2" />
<text  x="376.72" y="351.5" ></text>
</g>
<g >
<title>update_cfs_group (5 samples, 0.06%)</title><rect x="324.3" y="181" width="0.7" height="15.0" fill="rgb(246,21,40)" rx="2" ry="2" />
<text  x="327.26" y="191.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.01%)</title><rect x="232.5" y="373" width="0.1" height="15.0" fill="rgb(245,17,30)" rx="2" ry="2" />
<text  x="235.49" y="383.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 0.07%)</title><rect x="118.7" y="133" width="0.9" height="15.0" fill="rgb(225,140,33)" rx="2" ry="2" />
<text  x="121.69" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::begin (3 samples, 0.04%)</title><rect x="166.8" y="373" width="0.5" height="15.0" fill="rgb(227,177,47)" rx="2" ry="2" />
<text  x="169.84" y="383.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.06%)</title><rect x="13.5" y="357" width="0.7" height="15.0" fill="rgb(216,96,12)" rx="2" ry="2" />
<text  x="16.50" y="367.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="13.2" y="517" width="0.3" height="15.0" fill="rgb(232,101,8)" rx="2" ry="2" />
<text  x="16.21" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (7 samples, 0.09%)</title><rect x="101.3" y="325" width="1.1" height="15.0" fill="rgb(254,209,3)" rx="2" ry="2" />
<text  x="104.33" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="116.8" y="309" width="0.1" height="15.0" fill="rgb(226,196,32)" rx="2" ry="2" />
<text  x="119.80" y="319.5" ></text>
</g>
<g >
<title>rwsem_down_write_failed_killable (2 samples, 0.02%)</title><rect x="1045.0" y="357" width="0.3" height="15.0" fill="rgb(236,171,24)" rx="2" ry="2" />
<text  x="1047.98" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.02%)</title><rect x="373.6" y="357" width="0.3" height="15.0" fill="rgb(205,141,27)" rx="2" ry="2" />
<text  x="376.57" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt;::back (20 samples, 0.25%)</title><rect x="619.7" y="373" width="2.9" height="15.0" fill="rgb(233,189,17)" rx="2" ry="2" />
<text  x="622.70" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (206 samples, 2.55%)</title><rect x="464.2" y="341" width="30.0" height="15.0" fill="rgb(227,27,42)" rx="2" ry="2" />
<text  x="467.17" y="351.5" >en..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="467.5" y="245" width="0.2" height="15.0" fill="rgb(206,28,50)" rx="2" ry="2" />
<text  x="470.53" y="255.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.01%)</title><rect x="325.3" y="165" width="0.1" height="15.0" fill="rgb(247,33,19)" rx="2" ry="2" />
<text  x="328.28" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="211.0" y="325" width="0.2" height="15.0" fill="rgb(206,145,11)" rx="2" ry="2" />
<text  x="214.04" y="335.5" ></text>
</g>
<g >
<title>__GI___nanosleep (1 samples, 0.01%)</title><rect x="398.7" y="357" width="0.1" height="15.0" fill="rgb(250,229,38)" rx="2" ry="2" />
<text  x="401.66" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.01%)</title><rect x="374.3" y="357" width="0.1" height="15.0" fill="rgb(241,8,25)" rx="2" ry="2" />
<text  x="377.30" y="367.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (21 samples, 0.26%)</title><rect x="83.2" y="357" width="3.1" height="15.0" fill="rgb(212,67,27)" rx="2" ry="2" />
<text  x="86.24" y="367.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.01%)</title><rect x="492.6" y="213" width="0.2" height="15.0" fill="rgb(232,140,33)" rx="2" ry="2" />
<text  x="495.62" y="223.5" ></text>
</g>
<g >
<title>std::operator&amp; (3 samples, 0.04%)</title><rect x="424.5" y="341" width="0.4" height="15.0" fill="rgb(248,116,6)" rx="2" ry="2" />
<text  x="427.49" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (3 samples, 0.04%)</title><rect x="552.0" y="341" width="0.4" height="15.0" fill="rgb(205,41,14)" rx="2" ry="2" />
<text  x="555.00" y="351.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.01%)</title><rect x="430.5" y="373" width="0.1" height="15.0" fill="rgb(217,4,13)" rx="2" ry="2" />
<text  x="433.47" y="383.5" ></text>
</g>
<g >
<title>dequeue_task_fair (18 samples, 0.22%)</title><rect x="472.5" y="213" width="2.6" height="15.0" fill="rgb(241,109,24)" rx="2" ry="2" />
<text  x="475.49" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="1153.1" y="213" width="0.1" height="15.0" fill="rgb(206,227,38)" rx="2" ry="2" />
<text  x="1156.09" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (84 samples, 1.04%)</title><rect x="561.3" y="341" width="12.3" height="15.0" fill="rgb(243,181,11)" rx="2" ry="2" />
<text  x="564.34" y="351.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (95 samples, 1.17%)</title><rect x="478.8" y="165" width="13.8" height="15.0" fill="rgb(252,28,33)" rx="2" ry="2" />
<text  x="481.76" y="175.5" ></text>
</g>
<g >
<title>TxExecutor::PromoteWaiters (10 samples, 0.12%)</title><rect x="158.5" y="357" width="1.5" height="15.0" fill="rgb(231,133,54)" rx="2" ry="2" />
<text  x="161.52" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (4 samples, 0.05%)</title><rect x="462.3" y="373" width="0.6" height="15.0" fill="rgb(224,93,18)" rx="2" ry="2" />
<text  x="465.27" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="13.2" y="533" width="0.3" height="15.0" fill="rgb(235,118,32)" rx="2" ry="2" />
<text  x="16.21" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (1 samples, 0.01%)</title><rect x="222.9" y="325" width="0.1" height="15.0" fill="rgb(253,151,9)" rx="2" ry="2" />
<text  x="225.86" y="335.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="13.5" y="501" width="0.7" height="15.0" fill="rgb(247,119,29)" rx="2" ry="2" />
<text  x="16.50" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="97.8" y="325" width="0.2" height="15.0" fill="rgb(218,11,38)" rx="2" ry="2" />
<text  x="100.83" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (3 samples, 0.04%)</title><rect x="141.3" y="325" width="0.4" height="15.0" fill="rgb(240,110,12)" rx="2" ry="2" />
<text  x="144.31" y="335.5" ></text>
</g>
<g >
<title>__GI_munmap (2 samples, 0.02%)</title><rect x="1045.0" y="469" width="0.3" height="15.0" fill="rgb(230,29,32)" rx="2" ry="2" />
<text  x="1047.98" y="479.5" ></text>
</g>
<g >
<title>pick_next_task_idle (2 samples, 0.02%)</title><rect x="492.6" y="229" width="0.3" height="15.0" fill="rgb(206,192,32)" rx="2" ry="2" />
<text  x="495.62" y="239.5" ></text>
</g>
<g >
<title>x86_pmu_enable (3 samples, 0.04%)</title><rect x="272.9" y="85" width="0.4" height="15.0" fill="rgb(214,60,22)" rx="2" ry="2" />
<text  x="275.90" y="95.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (2 samples, 0.02%)</title><rect x="264.3" y="245" width="0.3" height="15.0" fill="rgb(213,89,2)" rx="2" ry="2" />
<text  x="267.30" y="255.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="1153.1" y="197" width="0.1" height="15.0" fill="rgb(224,20,12)" rx="2" ry="2" />
<text  x="1156.09" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="19.6" y="533" width="0.2" height="15.0" fill="rgb(212,84,31)" rx="2" ry="2" />
<text  x="22.63" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="208.6" y="325" width="0.1" height="15.0" fill="rgb(248,63,49)" rx="2" ry="2" />
<text  x="211.56" y="335.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.06%)</title><rect x="14.2" y="437" width="0.8" height="15.0" fill="rgb(240,91,50)" rx="2" ry="2" />
<text  x="17.23" y="447.5" ></text>
</g>
<g >
<title>std::__addressof&lt;int&gt; (1 samples, 0.01%)</title><rect x="29.5" y="533" width="0.2" height="15.0" fill="rgb(213,137,44)" rx="2" ry="2" />
<text  x="32.55" y="543.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.01%)</title><rect x="166.0" y="229" width="0.1" height="15.0" fill="rgb(226,135,1)" rx="2" ry="2" />
<text  x="168.96" y="239.5" ></text>
</g>
<g >
<title>TxExecutor::conflict (2 samples, 0.02%)</title><rect x="220.8" y="357" width="0.3" height="15.0" fill="rgb(254,87,28)" rx="2" ry="2" />
<text  x="223.82" y="367.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="154.1" y="309" width="0.2" height="15.0" fill="rgb(252,35,32)" rx="2" ry="2" />
<text  x="157.14" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.01%)</title><rect x="222.0" y="325" width="0.1" height="15.0" fill="rgb(219,110,35)" rx="2" ry="2" />
<text  x="224.99" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (2 samples, 0.02%)</title><rect x="545.3" y="293" width="0.3" height="15.0" fill="rgb(249,177,14)" rx="2" ry="2" />
<text  x="548.29" y="303.5" ></text>
</g>
<g >
<title>TxExecutor::conflict (1 samples, 0.01%)</title><rect x="18.0" y="533" width="0.2" height="15.0" fill="rgb(241,41,38)" rx="2" ry="2" />
<text  x="21.02" y="543.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="614.0" y="293" width="0.2" height="15.0" fill="rgb(246,50,36)" rx="2" ry="2" />
<text  x="617.01" y="303.5" ></text>
</g>
<g >
<title>TxExecutor::addCommitSemaphore (1 samples, 0.01%)</title><rect x="533.2" y="357" width="0.1" height="15.0" fill="rgb(207,156,19)" rx="2" ry="2" />
<text  x="536.18" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="148.3" y="325" width="0.2" height="15.0" fill="rgb(224,51,50)" rx="2" ry="2" />
<text  x="151.31" y="335.5" ></text>
</g>
<g >
<title>__perf_event_enable (3 samples, 0.04%)</title><rect x="12.6" y="437" width="0.5" height="15.0" fill="rgb(239,101,36)" rx="2" ry="2" />
<text  x="15.63" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1186.1" y="533" width="0.1" height="15.0" fill="rgb(230,60,26)" rx="2" ry="2" />
<text  x="1189.06" y="543.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.05%)</title><rect x="1047.0" y="373" width="0.6" height="15.0" fill="rgb(252,3,39)" rx="2" ry="2" />
<text  x="1050.02" y="383.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="1189.7" y="437" width="0.3" height="15.0" fill="rgb(214,134,49)" rx="2" ry="2" />
<text  x="1192.71" y="447.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 0.06%)</title><rect x="15.0" y="533" width="0.7" height="15.0" fill="rgb(228,161,38)" rx="2" ry="2" />
<text  x="17.96" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (4 samples, 0.05%)</title><rect x="104.4" y="309" width="0.6" height="15.0" fill="rgb(214,148,16)" rx="2" ry="2" />
<text  x="107.39" y="319.5" ></text>
</g>
<g >
<title>RWLock::w_unlock (2 samples, 0.02%)</title><rect x="311.0" y="373" width="0.3" height="15.0" fill="rgb(223,99,13)" rx="2" ry="2" />
<text  x="313.98" y="383.5" ></text>
</g>
<g >
<title>reweight_entity (2 samples, 0.02%)</title><rect x="266.8" y="165" width="0.3" height="15.0" fill="rgb(235,92,7)" rx="2" ry="2" />
<text  x="269.78" y="175.5" ></text>
</g>
<g >
<title>ctx_resched (5 samples, 0.06%)</title><rect x="11.8" y="405" width="0.7" height="15.0" fill="rgb(235,87,11)" rx="2" ry="2" />
<text  x="14.75" y="415.5" ></text>
</g>
<g >
<title>remote_function (3 samples, 0.04%)</title><rect x="272.9" y="149" width="0.4" height="15.0" fill="rgb(208,208,51)" rx="2" ry="2" />
<text  x="275.90" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (10 samples, 0.12%)</title><rect x="381.7" y="325" width="1.5" height="15.0" fill="rgb(227,54,42)" rx="2" ry="2" />
<text  x="384.74" y="335.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (3 samples, 0.04%)</title><rect x="317.5" y="245" width="0.5" height="15.0" fill="rgb(246,5,23)" rx="2" ry="2" />
<text  x="320.55" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="1186.4" y="421" width="0.1" height="15.0" fill="rgb(205,130,24)" rx="2" ry="2" />
<text  x="1189.35" y="431.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="15.7" y="453" width="0.1" height="15.0" fill="rgb(215,11,19)" rx="2" ry="2" />
<text  x="18.69" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="390.5" y="341" width="0.1" height="15.0" fill="rgb(222,179,5)" rx="2" ry="2" />
<text  x="393.49" y="351.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.05%)</title><rect x="1047.0" y="357" width="0.6" height="15.0" fill="rgb(231,123,46)" rx="2" ry="2" />
<text  x="1050.02" y="367.5" ></text>
</g>
<g >
<title>sys_nanosleep (5 samples, 0.06%)</title><rect x="1046.9" y="421" width="0.7" height="15.0" fill="rgb(248,95,8)" rx="2" ry="2" />
<text  x="1049.88" y="431.5" ></text>
</g>
<g >
<title>native_apic_msr_write (4 samples, 0.05%)</title><rect x="481.7" y="149" width="0.6" height="15.0" fill="rgb(239,219,22)" rx="2" ry="2" />
<text  x="484.68" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.01%)</title><rect x="532.9" y="325" width="0.1" height="15.0" fill="rgb(222,181,4)" rx="2" ry="2" />
<text  x="535.89" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (2 samples, 0.02%)</title><rect x="225.9" y="341" width="0.3" height="15.0" fill="rgb(213,165,53)" rx="2" ry="2" />
<text  x="228.92" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (38 samples, 0.47%)</title><rect x="102.4" y="325" width="5.5" height="15.0" fill="rgb(209,186,54)" rx="2" ry="2" />
<text  x="105.35" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="532.9" y="309" width="0.1" height="15.0" fill="rgb(240,165,10)" rx="2" ry="2" />
<text  x="535.89" y="319.5" ></text>
</g>
<g >
<title>__perf_event_enable (5 samples, 0.06%)</title><rect x="464.5" y="213" width="0.7" height="15.0" fill="rgb(217,73,34)" rx="2" ry="2" />
<text  x="467.46" y="223.5" ></text>
</g>
<g >
<title>decay_load (1 samples, 0.01%)</title><rect x="565.6" y="165" width="0.1" height="15.0" fill="rgb(250,1,33)" rx="2" ry="2" />
<text  x="568.57" y="175.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (3 samples, 0.04%)</title><rect x="12.6" y="533" width="0.5" height="15.0" fill="rgb(243,219,50)" rx="2" ry="2" />
<text  x="15.63" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::base (11 samples, 0.14%)</title><rect x="283.8" y="357" width="1.7" height="15.0" fill="rgb(250,220,25)" rx="2" ry="2" />
<text  x="286.85" y="367.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.01%)</title><rect x="493.9" y="277" width="0.2" height="15.0" fill="rgb(207,221,34)" rx="2" ry="2" />
<text  x="496.93" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.01%)</title><rect x="391.4" y="341" width="0.1" height="15.0" fill="rgb(226,198,34)" rx="2" ry="2" />
<text  x="394.37" y="351.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.01%)</title><rect x="200.5" y="341" width="0.2" height="15.0" fill="rgb(253,220,51)" rx="2" ry="2" />
<text  x="203.54" y="351.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.02%)</title><rect x="396.6" y="261" width="0.3" height="15.0" fill="rgb(213,229,10)" rx="2" ry="2" />
<text  x="399.62" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (2 samples, 0.02%)</title><rect x="31.3" y="533" width="0.3" height="15.0" fill="rgb(253,47,38)" rx="2" ry="2" />
<text  x="34.30" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_Temporary_value::_M_ptr (3 samples, 0.04%)</title><rect x="211.6" y="325" width="0.5" height="15.0" fill="rgb(242,155,5)" rx="2" ry="2" />
<text  x="214.63" y="335.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (3 samples, 0.04%)</title><rect x="1045.3" y="533" width="0.4" height="15.0" fill="rgb(207,192,26)" rx="2" ry="2" />
<text  x="1048.27" y="543.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (156 samples, 1.93%)</title><rect x="1157.3" y="309" width="22.8" height="15.0" fill="rgb(231,121,38)" rx="2" ry="2" />
<text  x="1160.32" y="319.5" >f..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (9 samples, 0.11%)</title><rect x="149.8" y="325" width="1.3" height="15.0" fill="rgb(224,198,53)" rx="2" ry="2" />
<text  x="152.77" y="335.5" ></text>
</g>
<g >
<title>RWLock::w_unlock (16 samples, 0.20%)</title><rect x="86.3" y="357" width="2.3" height="15.0" fill="rgb(205,168,0)" rx="2" ry="2" />
<text  x="89.30" y="367.5" ></text>
</g>
<g >
<title>TxExecutor::addCommitSemaphore (2 samples, 0.02%)</title><rect x="312.7" y="357" width="0.3" height="15.0" fill="rgb(219,172,21)" rx="2" ry="2" />
<text  x="315.73" y="367.5" ></text>
</g>
<g >
<title>watchdog_timer_fn (1 samples, 0.01%)</title><rect x="15.7" y="469" width="0.1" height="15.0" fill="rgb(241,71,32)" rx="2" ry="2" />
<text  x="18.69" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.02%)</title><rect x="39.0" y="533" width="0.3" height="15.0" fill="rgb(214,175,7)" rx="2" ry="2" />
<text  x="42.03" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int&amp;&gt; (21 samples, 0.26%)</title><rect x="205.5" y="325" width="3.1" height="15.0" fill="rgb(222,38,19)" rx="2" ry="2" />
<text  x="208.50" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::back (12 samples, 0.15%)</title><rect x="208.7" y="341" width="1.8" height="15.0" fill="rgb(241,149,53)" rx="2" ry="2" />
<text  x="211.71" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="396.5" y="341" width="0.4" height="15.0" fill="rgb(217,126,4)" rx="2" ry="2" />
<text  x="399.48" y="351.5" ></text>
</g>
<g >
<title>SetElement&lt;Tuple&gt;::SetElement (148 samples, 1.83%)</title><rect x="234.2" y="325" width="21.6" height="15.0" fill="rgb(244,148,26)" rx="2" ry="2" />
<text  x="237.24" y="335.5" >S..</text>
</g>
<g >
<title>osq_lock (2 samples, 0.02%)</title><rect x="1045.0" y="341" width="0.3" height="15.0" fill="rgb(213,140,12)" rx="2" ry="2" />
<text  x="1047.98" y="351.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (1 samples, 0.01%)</title><rect x="76.5" y="373" width="0.2" height="15.0" fill="rgb(236,78,37)" rx="2" ry="2" />
<text  x="79.53" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="377.2" y="341" width="0.2" height="15.0" fill="rgb(254,204,18)" rx="2" ry="2" />
<text  x="380.22" y="351.5" ></text>
</g>
<g >
<title>_vm_normal_page (2 samples, 0.02%)</title><rect x="1048.3" y="405" width="0.3" height="15.0" fill="rgb(240,171,42)" rx="2" ry="2" />
<text  x="1051.34" y="415.5" ></text>
</g>
<g >
<title>TxExecutor::cascadeAbort (2 samples, 0.02%)</title><rect x="398.2" y="341" width="0.3" height="15.0" fill="rgb(232,43,39)" rx="2" ry="2" />
<text  x="401.23" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (5 samples, 0.06%)</title><rect x="113.1" y="325" width="0.8" height="15.0" fill="rgb(231,209,24)" rx="2" ry="2" />
<text  x="116.15" y="335.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (3 samples, 0.04%)</title><rect x="396.5" y="293" width="0.4" height="15.0" fill="rgb(231,115,38)" rx="2" ry="2" />
<text  x="399.48" y="303.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.01%)</title><rect x="474.8" y="165" width="0.2" height="15.0" fill="rgb(221,106,11)" rx="2" ry="2" />
<text  x="477.82" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (26 samples, 0.32%)</title><rect x="287.1" y="373" width="3.7" height="15.0" fill="rgb(229,161,40)" rx="2" ry="2" />
<text  x="290.05" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="430.3" y="341" width="0.2" height="15.0" fill="rgb(231,181,11)" rx="2" ry="2" />
<text  x="433.32" y="351.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="493.2" y="181" width="0.2" height="15.0" fill="rgb(226,28,0)" rx="2" ry="2" />
<text  x="496.20" y="191.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.01%)</title><rect x="14.4" y="357" width="0.1" height="15.0" fill="rgb(223,97,54)" rx="2" ry="2" />
<text  x="17.38" y="367.5" ></text>
</g>
<g >
<title>lock_hrtimer_base.isra.20 (2 samples, 0.02%)</title><rect x="318.3" y="245" width="0.3" height="15.0" fill="rgb(234,169,38)" rx="2" ry="2" />
<text  x="321.28" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="232.3" y="373" width="0.2" height="15.0" fill="rgb(223,207,51)" rx="2" ry="2" />
<text  x="235.34" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::back (14 samples, 0.17%)</title><rect x="388.0" y="341" width="2.1" height="15.0" fill="rgb(239,127,38)" rx="2" ry="2" />
<text  x="391.01" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator* (1 samples, 0.01%)</title><rect x="388.5" y="325" width="0.1" height="15.0" fill="rgb(219,85,21)" rx="2" ry="2" />
<text  x="391.45" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (1 samples, 0.01%)</title><rect x="32.9" y="501" width="0.2" height="15.0" fill="rgb(218,13,45)" rx="2" ry="2" />
<text  x="35.91" y="511.5" ></text>
</g>
<g >
<title>TxExecutor::cascadeAbort (1 samples, 0.01%)</title><rect x="119.7" y="373" width="0.2" height="15.0" fill="rgb(218,30,37)" rx="2" ry="2" />
<text  x="122.71" y="383.5" ></text>
</g>
<g >
<title>leaderBackoffWork (5 samples, 0.06%)</title><rect x="591.0" y="405" width="0.7" height="15.0" fill="rgb(252,63,23)" rx="2" ry="2" />
<text  x="593.95" y="415.5" ></text>
</g>
<g >
<title>Tuple::remove (2 samples, 0.02%)</title><rect x="313.2" y="357" width="0.3" height="15.0" fill="rgb(248,219,42)" rx="2" ry="2" />
<text  x="316.17" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="15.7" y="485" width="0.1" height="15.0" fill="rgb(251,138,36)" rx="2" ry="2" />
<text  x="18.69" y="495.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (3 samples, 0.04%)</title><rect x="1045.3" y="501" width="0.4" height="15.0" fill="rgb(247,33,0)" rx="2" ry="2" />
<text  x="1048.27" y="511.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.06%)</title><rect x="16.0" y="389" width="0.7" height="15.0" fill="rgb(217,223,5)" rx="2" ry="2" />
<text  x="18.98" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (2 samples, 0.02%)</title><rect x="623.3" y="405" width="0.3" height="15.0" fill="rgb(224,129,51)" rx="2" ry="2" />
<text  x="626.34" y="415.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (5 samples, 0.06%)</title><rect x="1072.3" y="357" width="0.7" height="15.0" fill="rgb(239,170,32)" rx="2" ry="2" />
<text  x="1075.26" y="367.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="16.7" y="437" width="0.2" height="15.0" fill="rgb(233,150,19)" rx="2" ry="2" />
<text  x="19.71" y="447.5" ></text>
</g>
<g >
<title>__accumulate_pelt_segments (1 samples, 0.01%)</title><rect x="565.4" y="149" width="0.2" height="15.0" fill="rgb(230,141,8)" rx="2" ry="2" />
<text  x="568.42" y="159.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (7 samples, 0.09%)</title><rect x="471.3" y="229" width="1.0" height="15.0" fill="rgb(253,171,44)" rx="2" ry="2" />
<text  x="474.32" y="239.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (12 samples, 0.15%)</title><rect x="84.6" y="341" width="1.7" height="15.0" fill="rgb(240,176,32)" rx="2" ry="2" />
<text  x="87.55" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (4 samples, 0.05%)</title><rect x="123.8" y="357" width="0.6" height="15.0" fill="rgb(252,28,36)" rx="2" ry="2" />
<text  x="126.80" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (4 samples, 0.05%)</title><rect x="88.6" y="341" width="0.6" height="15.0" fill="rgb(245,9,4)" rx="2" ry="2" />
<text  x="91.64" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::concat (17 samples, 0.21%)</title><rect x="160.0" y="357" width="2.5" height="15.0" fill="rgb(239,208,22)" rx="2" ry="2" />
<text  x="162.98" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.02%)</title><rect x="162.8" y="357" width="0.2" height="15.0" fill="rgb(237,161,15)" rx="2" ry="2" />
<text  x="165.75" y="367.5" ></text>
</g>
<g >
<title>sys_nanosleep (1 samples, 0.01%)</title><rect x="494.1" y="325" width="0.1" height="15.0" fill="rgb(205,194,31)" rx="2" ry="2" />
<text  x="497.08" y="335.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="16.7" y="517" width="0.2" height="15.0" fill="rgb(226,30,42)" rx="2" ry="2" />
<text  x="19.71" y="527.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.01%)</title><rect x="561.8" y="277" width="0.1" height="15.0" fill="rgb(241,132,2)" rx="2" ry="2" />
<text  x="564.78" y="287.5" ></text>
</g>
<g >
<title>SetElement&lt;Tuple&gt;::SetElement (2 samples, 0.02%)</title><rect x="13.2" y="549" width="0.3" height="15.0" fill="rgb(226,134,24)" rx="2" ry="2" />
<text  x="16.21" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (9 samples, 0.11%)</title><rect x="106.6" y="309" width="1.3" height="15.0" fill="rgb(227,97,10)" rx="2" ry="2" />
<text  x="109.58" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.01%)</title><rect x="562.1" y="277" width="0.1" height="15.0" fill="rgb(230,174,5)" rx="2" ry="2" />
<text  x="565.07" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (13 samples, 0.16%)</title><rect x="550.5" y="357" width="1.9" height="15.0" fill="rgb(246,175,4)" rx="2" ry="2" />
<text  x="553.54" y="367.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="11.8" y="501" width="0.7" height="15.0" fill="rgb(235,145,33)" rx="2" ry="2" />
<text  x="14.75" y="511.5" ></text>
</g>
<g >
<title>std::forward&lt;Tuple*&amp;&gt; (1 samples, 0.01%)</title><rect x="256.9" y="357" width="0.1" height="15.0" fill="rgb(254,79,36)" rx="2" ry="2" />
<text  x="259.85" y="367.5" ></text>
</g>
<g >
<title>lapic_next_deadline (9 samples, 0.11%)</title><rect x="468.7" y="213" width="1.3" height="15.0" fill="rgb(249,99,46)" rx="2" ry="2" />
<text  x="471.69" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::base (3 samples, 0.04%)</title><rect x="404.4" y="373" width="0.4" height="15.0" fill="rgb(242,123,31)" rx="2" ry="2" />
<text  x="407.35" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.06%)</title><rect x="1046.0" y="389" width="0.7" height="15.0" fill="rgb(214,116,21)" rx="2" ry="2" />
<text  x="1049.00" y="399.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.05%)</title><rect x="464.6" y="149" width="0.6" height="15.0" fill="rgb(214,118,2)" rx="2" ry="2" />
<text  x="467.61" y="159.5" ></text>
</g>
<g >
<title>std::atomic&lt;double&gt;::store (3 samples, 0.04%)</title><rect x="591.0" y="373" width="0.4" height="15.0" fill="rgb(208,87,37)" rx="2" ry="2" />
<text  x="593.95" y="383.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.06%)</title><rect x="1185.0" y="373" width="0.8" height="15.0" fill="rgb(228,132,21)" rx="2" ry="2" />
<text  x="1188.04" y="383.5" ></text>
</g>
<g >
<title>Tuple::sortAdd (9 samples, 0.11%)</title><rect x="531.7" y="373" width="1.3" height="15.0" fill="rgb(239,226,50)" rx="2" ry="2" />
<text  x="534.72" y="383.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.04%)</title><rect x="272.9" y="37" width="0.4" height="15.0" fill="rgb(249,113,46)" rx="2" ry="2" />
<text  x="275.90" y="47.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (95 samples, 1.17%)</title><rect x="478.8" y="181" width="13.8" height="15.0" fill="rgb(238,158,1)" rx="2" ry="2" />
<text  x="481.76" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_Temporary_value::_Temporary_value&lt;int const&amp;&gt; (1 samples, 0.01%)</title><rect x="211.3" y="341" width="0.2" height="15.0" fill="rgb(248,214,52)" rx="2" ry="2" />
<text  x="214.34" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_insert_aux&lt;int&gt; (2 samples, 0.02%)</title><rect x="532.6" y="341" width="0.3" height="15.0" fill="rgb(212,21,36)" rx="2" ry="2" />
<text  x="535.60" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="12.5" y="421" width="0.1" height="15.0" fill="rgb(214,105,23)" rx="2" ry="2" />
<text  x="15.48" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (5 samples, 0.06%)</title><rect x="286.3" y="357" width="0.8" height="15.0" fill="rgb(208,33,2)" rx="2" ry="2" />
<text  x="289.33" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_Temporary_value::~_Temporary_value (4 samples, 0.05%)</title><rect x="211.5" y="341" width="0.6" height="15.0" fill="rgb(207,172,17)" rx="2" ry="2" />
<text  x="214.48" y="351.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.01%)</title><rect x="464.6" y="133" width="0.2" height="15.0" fill="rgb(252,212,12)" rx="2" ry="2" />
<text  x="467.61" y="143.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.01%)</title><rect x="211.3" y="325" width="0.2" height="15.0" fill="rgb(221,61,3)" rx="2" ry="2" />
<text  x="214.34" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="623.2" y="389" width="0.1" height="15.0" fill="rgb(223,39,38)" rx="2" ry="2" />
<text  x="626.20" y="399.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="273.3" y="181" width="0.2" height="15.0" fill="rgb(239,68,1)" rx="2" ry="2" />
<text  x="276.34" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt;::end (1 samples, 0.01%)</title><rect x="40.9" y="421" width="0.2" height="15.0" fill="rgb(254,134,31)" rx="2" ry="2" />
<text  x="43.93" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="311.6" y="341" width="0.1" height="15.0" fill="rgb(214,51,47)" rx="2" ry="2" />
<text  x="314.57" y="351.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.01%)</title><rect x="13.1" y="533" width="0.1" height="15.0" fill="rgb(209,130,26)" rx="2" ry="2" />
<text  x="16.06" y="543.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.02%)</title><rect x="11.5" y="437" width="0.3" height="15.0" fill="rgb(240,166,45)" rx="2" ry="2" />
<text  x="14.46" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::_M_erase_at_end (2 samples, 0.02%)</title><rect x="168.0" y="373" width="0.3" height="15.0" fill="rgb(252,111,2)" rx="2" ry="2" />
<text  x="171.00" y="383.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="11.5" y="501" width="0.3" height="15.0" fill="rgb(228,56,15)" rx="2" ry="2" />
<text  x="14.46" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_init (2 samples, 0.02%)</title><rect x="315.9" y="277" width="0.3" height="15.0" fill="rgb(209,82,33)" rx="2" ry="2" />
<text  x="318.94" y="287.5" ></text>
</g>
<g >
<title>__schedule (60 samples, 0.74%)</title><rect x="265.2" y="245" width="8.7" height="15.0" fill="rgb(214,192,47)" rx="2" ry="2" />
<text  x="268.17" y="255.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (3 samples, 0.04%)</title><rect x="265.8" y="213" width="0.4" height="15.0" fill="rgb(244,0,14)" rx="2" ry="2" />
<text  x="268.75" y="223.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (2 samples, 0.02%)</title><rect x="467.7" y="245" width="0.3" height="15.0" fill="rgb(254,206,54)" rx="2" ry="2" />
<text  x="470.67" y="255.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="468.5" y="213" width="0.2" height="15.0" fill="rgb(241,10,24)" rx="2" ry="2" />
<text  x="471.55" y="223.5" ></text>
</g>
<g >
<title>usleep (22 samples, 0.27%)</title><rect x="163.0" y="357" width="3.3" height="15.0" fill="rgb(214,25,16)" rx="2" ry="2" />
<text  x="166.04" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="430.0" y="293" width="0.2" height="15.0" fill="rgb(253,118,19)" rx="2" ry="2" />
<text  x="433.03" y="303.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="13.5" y="485" width="0.7" height="15.0" fill="rgb(227,186,17)" rx="2" ry="2" />
<text  x="16.50" y="495.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.02%)</title><rect x="458.3" y="325" width="0.3" height="15.0" fill="rgb(254,101,47)" rx="2" ry="2" />
<text  x="461.34" y="335.5" ></text>
</g>
<g >
<title>_start (6 samples, 0.07%)</title><rect x="1046.7" y="549" width="0.9" height="15.0" fill="rgb(250,139,20)" rx="2" ry="2" />
<text  x="1049.73" y="559.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (3 samples, 0.04%)</title><rect x="265.8" y="229" width="0.4" height="15.0" fill="rgb(210,223,51)" rx="2" ry="2" />
<text  x="268.75" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::back (1 samples, 0.01%)</title><rect x="1185.9" y="549" width="0.2" height="15.0" fill="rgb(245,185,40)" rx="2" ry="2" />
<text  x="1188.91" y="559.5" ></text>
</g>
<g >
<title>Xoroshiro128Plus::rotl (3 samples, 0.04%)</title><rect x="599.9" y="357" width="0.4" height="15.0" fill="rgb(216,181,11)" rx="2" ry="2" />
<text  x="602.85" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (8 samples, 0.10%)</title><rect x="105.0" y="309" width="1.1" height="15.0" fill="rgb(207,39,29)" rx="2" ry="2" />
<text  x="107.98" y="319.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="272.8" y="149" width="0.1" height="15.0" fill="rgb(210,49,14)" rx="2" ry="2" />
<text  x="275.76" y="159.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="344.1" y="213" width="0.1" height="15.0" fill="rgb(214,7,41)" rx="2" ry="2" />
<text  x="347.10" y="223.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.01%)</title><rect x="478.9" y="149" width="0.2" height="15.0" fill="rgb(209,164,24)" rx="2" ry="2" />
<text  x="481.91" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::base (5 samples, 0.06%)</title><rect x="301.9" y="357" width="0.8" height="15.0" fill="rgb(251,164,11)" rx="2" ry="2" />
<text  x="304.94" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.02%)</title><rect x="1186.2" y="469" width="0.3" height="15.0" fill="rgb(215,193,49)" rx="2" ry="2" />
<text  x="1189.21" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="563.1" y="229" width="0.1" height="15.0" fill="rgb(224,158,23)" rx="2" ry="2" />
<text  x="566.09" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="141.2" y="309" width="0.1" height="15.0" fill="rgb(245,170,12)" rx="2" ry="2" />
<text  x="144.16" y="319.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="1189.7" y="517" width="0.3" height="15.0" fill="rgb(228,148,37)" rx="2" ry="2" />
<text  x="1192.71" y="527.5" ></text>
</g>
<g >
<title>finish_task_switch (9 samples, 0.11%)</title><rect x="118.3" y="213" width="1.3" height="15.0" fill="rgb(226,227,3)" rx="2" ry="2" />
<text  x="121.25" y="223.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="15.0" y="501" width="0.7" height="15.0" fill="rgb(214,176,1)" rx="2" ry="2" />
<text  x="17.96" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="162.6" y="357" width="0.2" height="15.0" fill="rgb(214,76,54)" rx="2" ry="2" />
<text  x="165.61" y="367.5" ></text>
</g>
<g >
<title>lapic_next_deadline (10 samples, 0.12%)</title><rect x="319.3" y="213" width="1.5" height="15.0" fill="rgb(247,188,1)" rx="2" ry="2" />
<text  x="322.30" y="223.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="11.8" y="485" width="0.7" height="15.0" fill="rgb(216,120,7)" rx="2" ry="2" />
<text  x="14.75" y="495.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.01%)</title><rect x="492.8" y="197" width="0.1" height="15.0" fill="rgb(206,43,53)" rx="2" ry="2" />
<text  x="495.77" y="207.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="482.4" y="149" width="0.2" height="15.0" fill="rgb(241,94,33)" rx="2" ry="2" />
<text  x="485.41" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator- (7 samples, 0.09%)</title><rect x="388.6" y="325" width="1.0" height="15.0" fill="rgb(205,104,44)" rx="2" ry="2" />
<text  x="391.60" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="264.0" y="261" width="0.1" height="15.0" fill="rgb(243,81,17)" rx="2" ry="2" />
<text  x="267.00" y="271.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1153.1" y="325" width="0.1" height="15.0" fill="rgb(221,35,7)" rx="2" ry="2" />
<text  x="1156.09" y="335.5" ></text>
</g>
<g >
<title>Tuple::remove (5 samples, 0.06%)</title><rect x="429.7" y="357" width="0.8" height="15.0" fill="rgb(234,184,13)" rx="2" ry="2" />
<text  x="432.74" y="367.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (11 samples, 0.14%)</title><rect x="562.2" y="261" width="1.6" height="15.0" fill="rgb(242,22,12)" rx="2" ry="2" />
<text  x="565.21" y="271.5" ></text>
</g>
<g >
<title>decay_load (1 samples, 0.01%)</title><rect x="564.5" y="181" width="0.2" height="15.0" fill="rgb(253,154,33)" rx="2" ry="2" />
<text  x="567.55" y="191.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="1186.4" y="437" width="0.1" height="15.0" fill="rgb(238,111,53)" rx="2" ry="2" />
<text  x="1189.35" y="447.5" ></text>
</g>
<g >
<title>__native_set_fixmap (1 samples, 0.01%)</title><rect x="331.0" y="149" width="0.1" height="15.0" fill="rgb(217,123,35)" rx="2" ry="2" />
<text  x="333.97" y="159.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (1 samples, 0.01%)</title><rect x="256.7" y="341" width="0.2" height="15.0" fill="rgb(213,104,4)" rx="2" ry="2" />
<text  x="259.71" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::writelockAcquire (3 samples, 0.04%)</title><rect x="18.6" y="533" width="0.4" height="15.0" fill="rgb(248,37,39)" rx="2" ry="2" />
<text  x="21.61" y="543.5" ></text>
</g>
<g >
<title>lock_hrtimer_base.isra.20 (1 samples, 0.01%)</title><rect x="563.1" y="245" width="0.1" height="15.0" fill="rgb(227,40,35)" rx="2" ry="2" />
<text  x="566.09" y="255.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="272.8" y="165" width="0.1" height="15.0" fill="rgb(212,165,49)" rx="2" ry="2" />
<text  x="275.76" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::back (16 samples, 0.20%)</title><rect x="459.8" y="357" width="2.3" height="15.0" fill="rgb(225,192,32)" rx="2" ry="2" />
<text  x="462.79" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.02%)</title><rect x="11.5" y="453" width="0.3" height="15.0" fill="rgb(211,51,33)" rx="2" ry="2" />
<text  x="14.46" y="463.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (1 samples, 0.01%)</title><rect x="618.7" y="341" width="0.1" height="15.0" fill="rgb(231,119,47)" rx="2" ry="2" />
<text  x="621.67" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (12 samples, 0.15%)</title><rect x="228.3" y="357" width="1.7" height="15.0" fill="rgb(249,212,40)" rx="2" ry="2" />
<text  x="231.26" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="116.8" y="325" width="0.1" height="15.0" fill="rgb(215,161,33)" rx="2" ry="2" />
<text  x="119.80" y="335.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.06%)</title><rect x="16.0" y="357" width="0.7" height="15.0" fill="rgb(206,22,4)" rx="2" ry="2" />
<text  x="18.98" y="367.5" ></text>
</g>
<g >
<title>TxExecutor::writelockAcquire (1 samples, 0.01%)</title><rect x="587.3" y="405" width="0.2" height="15.0" fill="rgb(213,21,0)" rx="2" ry="2" />
<text  x="590.31" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::emplace_back&lt;int&amp;&gt; (43 samples, 0.53%)</title><rect x="525.4" y="357" width="6.3" height="15.0" fill="rgb(242,87,11)" rx="2" ry="2" />
<text  x="528.45" y="367.5" ></text>
</g>
<g >
<title>nmi_restore (1 samples, 0.01%)</title><rect x="15.5" y="357" width="0.2" height="15.0" fill="rgb(249,140,5)" rx="2" ry="2" />
<text  x="18.54" y="367.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.01%)</title><rect x="118.1" y="149" width="0.2" height="15.0" fill="rgb(211,61,51)" rx="2" ry="2" />
<text  x="121.11" y="159.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (1 samples, 0.01%)</title><rect x="314.5" y="341" width="0.1" height="15.0" fill="rgb(212,29,31)" rx="2" ry="2" />
<text  x="317.48" y="351.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="614.0" y="309" width="0.2" height="15.0" fill="rgb(214,208,5)" rx="2" ry="2" />
<text  x="617.01" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (4 samples, 0.05%)</title><rect x="153.1" y="309" width="0.6" height="15.0" fill="rgb(207,108,22)" rx="2" ry="2" />
<text  x="156.12" y="319.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (3 samples, 0.04%)</title><rect x="12.6" y="501" width="0.5" height="15.0" fill="rgb(224,162,35)" rx="2" ry="2" />
<text  x="15.63" y="511.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (3 samples, 0.04%)</title><rect x="12.6" y="389" width="0.5" height="15.0" fill="rgb(214,109,13)" rx="2" ry="2" />
<text  x="15.63" y="399.5" ></text>
</g>
<g >
<title>schedule (67 samples, 0.83%)</title><rect x="563.8" y="261" width="9.8" height="15.0" fill="rgb(213,32,5)" rx="2" ry="2" />
<text  x="566.82" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (1 samples, 0.01%)</title><rect x="1186.6" y="437" width="0.2" height="15.0" fill="rgb(246,182,23)" rx="2" ry="2" />
<text  x="1189.64" y="447.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="15.0" y="517" width="0.7" height="15.0" fill="rgb(247,87,17)" rx="2" ry="2" />
<text  x="17.96" y="527.5" ></text>
</g>
<g >
<title>clockevents_program_event (2 samples, 0.02%)</title><rect x="563.5" y="229" width="0.3" height="15.0" fill="rgb(241,146,24)" rx="2" ry="2" />
<text  x="566.53" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="1153.1" y="261" width="0.1" height="15.0" fill="rgb(246,127,52)" rx="2" ry="2" />
<text  x="1156.09" y="271.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.01%)</title><rect x="396.8" y="229" width="0.1" height="15.0" fill="rgb(206,107,47)" rx="2" ry="2" />
<text  x="399.77" y="239.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1153.1" y="309" width="0.1" height="15.0" fill="rgb(250,115,11)" rx="2" ry="2" />
<text  x="1156.09" y="319.5" ></text>
</g>
<g >
<title>__update_load_avg_se.isra.37 (4 samples, 0.05%)</title><rect x="326.7" y="165" width="0.6" height="15.0" fill="rgb(230,13,20)" rx="2" ry="2" />
<text  x="329.74" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt; (27 samples, 0.33%)</title><rect x="298.7" y="373" width="4.0" height="15.0" fill="rgb(248,198,49)" rx="2" ry="2" />
<text  x="301.73" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt;::emplace_back&lt;Ope, unsigned long&amp;&gt; (1 samples, 0.01%)</title><rect x="622.8" y="405" width="0.1" height="15.0" fill="rgb(244,33,9)" rx="2" ry="2" />
<text  x="625.76" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator* (1 samples, 0.01%)</title><rect x="119.9" y="373" width="0.1" height="15.0" fill="rgb(254,229,49)" rx="2" ry="2" />
<text  x="122.86" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (12 samples, 0.15%)</title><rect x="1182.3" y="341" width="1.7" height="15.0" fill="rgb(220,134,51)" rx="2" ry="2" />
<text  x="1185.27" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::checkWound (1 samples, 0.01%)</title><rect x="17.9" y="533" width="0.1" height="15.0" fill="rgb(232,9,50)" rx="2" ry="2" />
<text  x="20.88" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.15%)</title><rect x="117.8" y="309" width="1.8" height="15.0" fill="rgb(219,47,52)" rx="2" ry="2" />
<text  x="120.82" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_Temporary_value::_Temporary_value&lt;int const&amp;&gt; (1 samples, 0.01%)</title><rect x="532.9" y="341" width="0.1" height="15.0" fill="rgb(218,170,34)" rx="2" ry="2" />
<text  x="535.89" y="351.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.05%)</title><rect x="572.7" y="53" width="0.6" height="15.0" fill="rgb(211,26,20)" rx="2" ry="2" />
<text  x="575.72" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="222.6" y="309" width="0.3" height="15.0" fill="rgb(231,10,38)" rx="2" ry="2" />
<text  x="225.57" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="430.2" y="293" width="0.1" height="15.0" fill="rgb(249,185,15)" rx="2" ry="2" />
<text  x="433.18" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (15 samples, 0.19%)</title><rect x="585.1" y="373" width="2.2" height="15.0" fill="rgb(214,101,46)" rx="2" ry="2" />
<text  x="588.12" y="383.5" ></text>
</g>
<g >
<title>ctx_resched (3 samples, 0.04%)</title><rect x="12.6" y="421" width="0.5" height="15.0" fill="rgb(237,20,6)" rx="2" ry="2" />
<text  x="15.63" y="431.5" ></text>
</g>
<g >
<title>remote_function (5 samples, 0.06%)</title><rect x="13.5" y="453" width="0.7" height="15.0" fill="rgb(251,109,37)" rx="2" ry="2" />
<text  x="16.50" y="463.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="1186.1" y="469" width="0.1" height="15.0" fill="rgb(220,217,37)" rx="2" ry="2" />
<text  x="1189.06" y="479.5" ></text>
</g>
<g >
<title>__perf_event_enable (3 samples, 0.04%)</title><rect x="1045.3" y="437" width="0.4" height="15.0" fill="rgb(251,98,28)" rx="2" ry="2" />
<text  x="1048.27" y="447.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="394.4" y="309" width="0.2" height="15.0" fill="rgb(251,220,31)" rx="2" ry="2" />
<text  x="397.43" y="319.5" ></text>
</g>
<g >
<title>std::operator&amp; (5 samples, 0.06%)</title><rect x="367.9" y="341" width="0.7" height="15.0" fill="rgb(216,225,29)" rx="2" ry="2" />
<text  x="370.88" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (18 samples, 0.22%)</title><rect x="554.0" y="357" width="2.7" height="15.0" fill="rgb(245,193,5)" rx="2" ry="2" />
<text  x="557.04" y="367.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (18 samples, 0.22%)</title><rect x="163.5" y="277" width="2.6" height="15.0" fill="rgb(244,54,31)" rx="2" ry="2" />
<text  x="166.48" y="287.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (2 samples, 0.02%)</title><rect x="463.7" y="341" width="0.3" height="15.0" fill="rgb(224,189,38)" rx="2" ry="2" />
<text  x="466.73" y="351.5" ></text>
</g>
<g >
<title>waitSema (24 samples, 0.30%)</title><rect x="1186.2" y="549" width="3.5" height="15.0" fill="rgb(247,193,43)" rx="2" ry="2" />
<text  x="1189.21" y="559.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (7 samples, 0.09%)</title><rect x="267.9" y="149" width="1.1" height="15.0" fill="rgb(236,189,51)" rx="2" ry="2" />
<text  x="270.94" y="159.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (3 samples, 0.04%)</title><rect x="12.6" y="485" width="0.5" height="15.0" fill="rgb(241,175,34)" rx="2" ry="2" />
<text  x="15.63" y="495.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (2 samples, 0.02%)</title><rect x="112.1" y="261" width="0.3" height="15.0" fill="rgb(205,217,27)" rx="2" ry="2" />
<text  x="115.13" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (3 samples, 0.04%)</title><rect x="258.9" y="325" width="0.4" height="15.0" fill="rgb(230,161,33)" rx="2" ry="2" />
<text  x="261.90" y="335.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (14 samples, 0.17%)</title><rect x="200.8" y="357" width="2.1" height="15.0" fill="rgb(223,59,0)" rx="2" ry="2" />
<text  x="203.83" y="367.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (60 samples, 0.74%)</title><rect x="359.9" y="373" width="8.7" height="15.0" fill="rgb(239,36,34)" rx="2" ry="2" />
<text  x="362.86" y="383.5" ></text>
</g>
<g >
<title>TxExecutor::conflict (2 samples, 0.02%)</title><rect x="533.3" y="357" width="0.3" height="15.0" fill="rgb(242,193,28)" rx="2" ry="2" />
<text  x="536.33" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator* (3 samples, 0.04%)</title><rect x="278.9" y="373" width="0.4" height="15.0" fill="rgb(212,219,50)" rx="2" ry="2" />
<text  x="281.88" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.01%)</title><rect x="532.3" y="357" width="0.2" height="15.0" fill="rgb(232,59,25)" rx="2" ry="2" />
<text  x="535.30" y="367.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_tlbonly (1 samples, 0.01%)</title><rect x="1184.9" y="389" width="0.1" height="15.0" fill="rgb(225,10,3)" rx="2" ry="2" />
<text  x="1187.89" y="399.5" ></text>
</g>
<g >
<title>uncharge_page (10 samples, 0.12%)</title><rect x="1182.6" y="325" width="1.4" height="15.0" fill="rgb(227,207,3)" rx="2" ry="2" />
<text  x="1185.56" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator++ (7 samples, 0.09%)</title><rect x="574.8" y="389" width="1.0" height="15.0" fill="rgb(212,110,10)" rx="2" ry="2" />
<text  x="577.76" y="399.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.01%)</title><rect x="333.2" y="149" width="0.1" height="15.0" fill="rgb(250,2,33)" rx="2" ry="2" />
<text  x="336.16" y="159.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.01%)</title><rect x="138.2" y="325" width="0.2" height="15.0" fill="rgb(223,21,19)" rx="2" ry="2" />
<text  x="141.24" y="335.5" ></text>
</g>
<g >
<title>native_write_msr (25 samples, 0.31%)</title><rect x="568.8" y="149" width="3.6" height="15.0" fill="rgb(223,109,29)" rx="2" ry="2" />
<text  x="571.78" y="159.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="16.7" y="501" width="0.2" height="15.0" fill="rgb(232,176,22)" rx="2" ry="2" />
<text  x="19.71" y="511.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.02%)</title><rect x="255.5" y="309" width="0.3" height="15.0" fill="rgb(217,210,48)" rx="2" ry="2" />
<text  x="258.54" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (1 samples, 0.01%)</title><rect x="149.2" y="341" width="0.1" height="15.0" fill="rgb(233,74,35)" rx="2" ry="2" />
<text  x="152.18" y="351.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="396.5" y="261" width="0.1" height="15.0" fill="rgb(239,10,32)" rx="2" ry="2" />
<text  x="399.48" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (7 samples, 0.09%)</title><rect x="1073.3" y="357" width="1.0" height="15.0" fill="rgb(226,21,3)" rx="2" ry="2" />
<text  x="1076.28" y="367.5" ></text>
</g>
<g >
<title>ctx_resched (3 samples, 0.04%)</title><rect x="1045.3" y="421" width="0.4" height="15.0" fill="rgb(237,42,18)" rx="2" ry="2" />
<text  x="1048.27" y="431.5" ></text>
</g>
<g >
<title>mi_heap_collect (1 samples, 0.01%)</title><rect x="1046.7" y="469" width="0.2" height="15.0" fill="rgb(217,57,27)" rx="2" ry="2" />
<text  x="1049.73" y="479.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (92 samples, 1.14%)</title><rect x="505.2" y="357" width="13.4" height="15.0" fill="rgb(212,33,25)" rx="2" ry="2" />
<text  x="508.17" y="367.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.01%)</title><rect x="273.8" y="229" width="0.1" height="15.0" fill="rgb(234,182,41)" rx="2" ry="2" />
<text  x="276.78" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="226.2" y="357" width="0.2" height="15.0" fill="rgb(224,189,51)" rx="2" ry="2" />
<text  x="229.22" y="367.5" ></text>
</g>
<g >
<title>remote_function (5 samples, 0.06%)</title><rect x="464.5" y="245" width="0.7" height="15.0" fill="rgb(239,102,28)" rx="2" ry="2" />
<text  x="467.46" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (1 samples, 0.01%)</title><rect x="545.6" y="309" width="0.1" height="15.0" fill="rgb(213,75,49)" rx="2" ry="2" />
<text  x="548.58" y="319.5" ></text>
</g>
<g >
<title>__slowpow_fma (1 samples, 0.01%)</title><rect x="32.9" y="389" width="0.2" height="15.0" fill="rgb(210,94,30)" rx="2" ry="2" />
<text  x="35.91" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="383.9" y="325" width="0.2" height="15.0" fill="rgb(232,56,22)" rx="2" ry="2" />
<text  x="386.93" y="335.5" ></text>
</g>
<g >
<title>__perf_event_enable (15 samples, 0.19%)</title><rect x="1187.5" y="437" width="2.2" height="15.0" fill="rgb(222,181,50)" rx="2" ry="2" />
<text  x="1190.52" y="447.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.05%)</title><rect x="272.9" y="213" width="0.6" height="15.0" fill="rgb(215,81,3)" rx="2" ry="2" />
<text  x="275.90" y="223.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (2 samples, 0.02%)</title><rect x="29.7" y="533" width="0.3" height="15.0" fill="rgb(231,25,23)" rx="2" ry="2" />
<text  x="32.70" y="543.5" ></text>
</g>
<g >
<title>sys_nanosleep (204 samples, 2.52%)</title><rect x="315.4" y="309" width="29.7" height="15.0" fill="rgb(221,113,42)" rx="2" ry="2" />
<text  x="318.36" y="319.5" >sy..</text>
</g>
<g >
<title>free_pgtables (1 samples, 0.01%)</title><rect x="1048.2" y="437" width="0.1" height="15.0" fill="rgb(251,78,33)" rx="2" ry="2" />
<text  x="1051.19" y="447.5" ></text>
</g>
<g >
<title>OpElement&lt;Tuple&gt;::OpElement (1 samples, 0.01%)</title><rect x="435.4" y="325" width="0.2" height="15.0" fill="rgb(229,198,50)" rx="2" ry="2" />
<text  x="438.43" y="335.5" ></text>
</g>
<g >
<title>Tuple::remove (2 samples, 0.02%)</title><rect x="17.1" y="533" width="0.3" height="15.0" fill="rgb(246,115,32)" rx="2" ry="2" />
<text  x="20.15" y="543.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (6,883 samples, 85.10%)</title><rect x="40.8" y="517" width="1004.2" height="15.0" fill="rgb(224,162,11)" rx="2" ry="2" />
<text  x="43.78" y="527.5" >[libstdc++.so.6.0.25]</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.01%)</title><rect x="88.9" y="309" width="0.2" height="15.0" fill="rgb(214,188,51)" rx="2" ry="2" />
<text  x="91.93" y="319.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.06%)</title><rect x="14.2" y="517" width="0.8" height="15.0" fill="rgb(220,61,50)" rx="2" ry="2" />
<text  x="17.23" y="527.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (15 samples, 0.19%)</title><rect x="1187.5" y="485" width="2.2" height="15.0" fill="rgb(251,209,47)" rx="2" ry="2" />
<text  x="1190.52" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (2 samples, 0.02%)</title><rect x="222.6" y="325" width="0.3" height="15.0" fill="rgb(232,224,34)" rx="2" ry="2" />
<text  x="225.57" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="398.2" y="293" width="0.2" height="15.0" fill="rgb(240,69,13)" rx="2" ry="2" />
<text  x="401.23" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt; (10 samples, 0.12%)</title><rect x="589.2" y="405" width="1.5" height="15.0" fill="rgb(217,87,43)" rx="2" ry="2" />
<text  x="592.20" y="415.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.06%)</title><rect x="14.2" y="501" width="0.8" height="15.0" fill="rgb(207,177,2)" rx="2" ry="2" />
<text  x="17.23" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;SetElement&lt;Tuple&gt; &gt;::construct&lt;SetElement&lt;Tuple&gt;, unsigned long&amp;, Tuple*&amp;, char  (1 samples, 0.01%)</title><rect x="313.5" y="341" width="0.1" height="15.0" fill="rgb(244,52,28)" rx="2" ry="2" />
<text  x="316.46" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (3 samples, 0.04%)</title><rect x="38.6" y="533" width="0.4" height="15.0" fill="rgb(226,17,26)" rx="2" ry="2" />
<text  x="41.60" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.01%)</title><rect x="152.4" y="309" width="0.1" height="15.0" fill="rgb(223,19,35)" rx="2" ry="2" />
<text  x="155.39" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="15.7" y="501" width="0.1" height="15.0" fill="rgb(225,134,51)" rx="2" ry="2" />
<text  x="18.69" y="511.5" ></text>
</g>
<g >
<title>usleep (1 samples, 0.01%)</title><rect x="398.7" y="373" width="0.1" height="15.0" fill="rgb(223,30,40)" rx="2" ry="2" />
<text  x="401.66" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (41 samples, 0.51%)</title><rect x="1143.6" y="341" width="6.0" height="15.0" fill="rgb(253,205,43)" rx="2" ry="2" />
<text  x="1146.61" y="351.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="614.0" y="277" width="0.2" height="15.0" fill="rgb(236,169,6)" rx="2" ry="2" />
<text  x="617.01" y="287.5" ></text>
</g>
<g >
<title>Tuple::itrRemove (18 samples, 0.22%)</title><rect x="543.2" y="341" width="2.7" height="15.0" fill="rgb(216,173,21)" rx="2" ry="2" />
<text  x="546.25" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (1 samples, 0.01%)</title><rect x="398.2" y="229" width="0.2" height="15.0" fill="rgb(232,151,4)" rx="2" ry="2" />
<text  x="401.23" y="239.5" ></text>
</g>
<g >
<title>acpi_os_read_memory (2 samples, 0.02%)</title><rect x="331.1" y="149" width="0.3" height="15.0" fill="rgb(210,42,21)" rx="2" ry="2" />
<text  x="334.12" y="159.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (4 samples, 0.05%)</title><rect x="112.1" y="293" width="0.6" height="15.0" fill="rgb(252,217,20)" rx="2" ry="2" />
<text  x="115.13" y="303.5" ></text>
</g>
<g >
<title>TxExecutor::conflict (3 samples, 0.04%)</title><rect x="216.4" y="357" width="0.5" height="15.0" fill="rgb(208,212,19)" rx="2" ry="2" />
<text  x="219.44" y="367.5" ></text>
</g>
<g >
<title>mi_process_done (1 samples, 0.01%)</title><rect x="1046.7" y="485" width="0.2" height="15.0" fill="rgb(220,81,23)" rx="2" ry="2" />
<text  x="1049.73" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (1 samples, 0.01%)</title><rect x="15.8" y="437" width="0.2" height="15.0" fill="rgb(210,166,12)" rx="2" ry="2" />
<text  x="18.84" y="447.5" ></text>
</g>
<g >
<title>Tuple::ownersRemove (3 samples, 0.04%)</title><rect x="311.3" y="373" width="0.4" height="15.0" fill="rgb(229,56,23)" rx="2" ry="2" />
<text  x="314.27" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (2 samples, 0.02%)</title><rect x="112.1" y="245" width="0.3" height="15.0" fill="rgb(241,127,45)" rx="2" ry="2" />
<text  x="115.13" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (5 samples, 0.06%)</title><rect x="157.4" y="325" width="0.7" height="15.0" fill="rgb(241,3,46)" rx="2" ry="2" />
<text  x="160.35" y="335.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.01%)</title><rect x="118.4" y="181" width="0.1" height="15.0" fill="rgb(242,88,2)" rx="2" ry="2" />
<text  x="121.40" y="191.5" ></text>
</g>
<g >
<title>TxExecutor::addCommitSemaphore (1 samples, 0.01%)</title><rect x="17.7" y="533" width="0.2" height="15.0" fill="rgb(228,107,24)" rx="2" ry="2" />
<text  x="20.73" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator* (2 samples, 0.02%)</title><rect x="257.9" y="341" width="0.3" height="15.0" fill="rgb(205,59,54)" rx="2" ry="2" />
<text  x="260.88" y="351.5" ></text>
</g>
<g >
<title>read_tsc (4 samples, 0.05%)</title><rect x="562.5" y="229" width="0.6" height="15.0" fill="rgb(207,58,50)" rx="2" ry="2" />
<text  x="565.50" y="239.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.02%)</title><rect x="573.3" y="245" width="0.3" height="15.0" fill="rgb(223,217,54)" rx="2" ry="2" />
<text  x="576.30" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="313.2" y="325" width="0.1" height="15.0" fill="rgb(232,57,13)" rx="2" ry="2" />
<text  x="316.17" y="335.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (3 samples, 0.04%)</title><rect x="1045.3" y="485" width="0.4" height="15.0" fill="rgb(254,36,26)" rx="2" ry="2" />
<text  x="1048.27" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_page_lruvec (4 samples, 0.05%)</title><rect x="1181.7" y="341" width="0.6" height="15.0" fill="rgb(233,192,14)" rx="2" ry="2" />
<text  x="1184.68" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="1153.1" y="245" width="0.1" height="15.0" fill="rgb(211,200,40)" rx="2" ry="2" />
<text  x="1156.09" y="255.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.04%)</title><rect x="14.5" y="357" width="0.5" height="15.0" fill="rgb(227,193,54)" rx="2" ry="2" />
<text  x="17.52" y="367.5" ></text>
</g>
<g >
<title>worker (2 samples, 0.02%)</title><rect x="1189.7" y="549" width="0.3" height="15.0" fill="rgb(232,21,32)" rx="2" ry="2" />
<text  x="1192.71" y="559.5" ></text>
</g>
<g >
<title>__ieee754_pow_fma (95 samples, 1.17%)</title><rect x="600.3" y="357" width="13.9" height="15.0" fill="rgb(227,164,10)" rx="2" ry="2" />
<text  x="603.29" y="367.5" ></text>
</g>
<g >
<title>do_nanosleep (17 samples, 0.21%)</title><rect x="163.6" y="261" width="2.5" height="15.0" fill="rgb(240,145,47)" rx="2" ry="2" />
<text  x="166.63" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt; (31 samples, 0.38%)</title><rect x="575.8" y="389" width="4.5" height="15.0" fill="rgb(254,85,15)" rx="2" ry="2" />
<text  x="578.78" y="399.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (41 samples, 0.51%)</title><rect x="518.7" y="341" width="6.0" height="15.0" fill="rgb(228,120,35)" rx="2" ry="2" />
<text  x="521.74" y="351.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.01%)</title><rect x="118.0" y="197" width="0.1" height="15.0" fill="rgb(242,203,1)" rx="2" ry="2" />
<text  x="120.96" y="207.5" ></text>
</g>
<g >
<title>TxExecutor::checkWound (103 samples, 1.27%)</title><rect x="217.3" y="373" width="15.0" height="15.0" fill="rgb(230,156,31)" rx="2" ry="2" />
<text  x="220.32" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="16.7" y="533" width="0.2" height="15.0" fill="rgb(238,80,31)" rx="2" ry="2" />
<text  x="19.71" y="543.5" ></text>
</g>
<g >
<title>__schedule (10 samples, 0.12%)</title><rect x="118.1" y="229" width="1.5" height="15.0" fill="rgb(249,74,50)" rx="2" ry="2" />
<text  x="121.11" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="12.5" y="485" width="0.1" height="15.0" fill="rgb(251,225,45)" rx="2" ry="2" />
<text  x="15.48" y="495.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.01%)</title><rect x="164.6" y="133" width="0.2" height="15.0" fill="rgb(209,78,28)" rx="2" ry="2" />
<text  x="167.65" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (7 samples, 0.09%)</title><rect x="258.3" y="341" width="1.0" height="15.0" fill="rgb(225,222,9)" rx="2" ry="2" />
<text  x="261.31" y="351.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (1 samples, 0.01%)</title><rect x="163.3" y="325" width="0.2" height="15.0" fill="rgb(225,164,1)" rx="2" ry="2" />
<text  x="166.34" y="335.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (6 samples, 0.07%)</title><rect x="264.1" y="261" width="0.9" height="15.0" fill="rgb(230,101,12)" rx="2" ry="2" />
<text  x="267.15" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="396.2" y="373" width="0.1" height="15.0" fill="rgb(224,198,51)" rx="2" ry="2" />
<text  x="399.18" y="383.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.04%)</title><rect x="12.6" y="357" width="0.5" height="15.0" fill="rgb(235,78,17)" rx="2" ry="2" />
<text  x="15.63" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="394.4" y="245" width="0.2" height="15.0" fill="rgb(249,225,0)" rx="2" ry="2" />
<text  x="397.43" y="255.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.01%)</title><rect x="118.1" y="197" width="0.2" height="15.0" fill="rgb(254,45,19)" rx="2" ry="2" />
<text  x="121.11" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (3 samples, 0.04%)</title><rect x="550.0" y="341" width="0.4" height="15.0" fill="rgb(244,84,4)" rx="2" ry="2" />
<text  x="552.96" y="351.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (3 samples, 0.04%)</title><rect x="1045.3" y="373" width="0.4" height="15.0" fill="rgb(248,219,53)" rx="2" ry="2" />
<text  x="1048.27" y="383.5" ></text>
</g>
<g >
<title>worker (6,881 samples, 85.08%)</title><rect x="41.1" y="421" width="1003.9" height="15.0" fill="rgb(235,48,37)" rx="2" ry="2" />
<text  x="44.08" y="431.5" >worker</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.02%)</title><rect x="111.7" y="325" width="0.3" height="15.0" fill="rgb(251,210,30)" rx="2" ry="2" />
<text  x="114.69" y="335.5" ></text>
</g>
<g >
<title>Tuple::remove (1 samples, 0.01%)</title><rect x="398.2" y="325" width="0.2" height="15.0" fill="rgb(209,50,16)" rx="2" ry="2" />
<text  x="401.23" y="335.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (29 samples, 0.36%)</title><rect x="425.4" y="357" width="4.2" height="15.0" fill="rgb(231,13,47)" rx="2" ry="2" />
<text  x="428.36" y="367.5" ></text>
</g>
<g >
<title>event_function (3 samples, 0.04%)</title><rect x="12.6" y="453" width="0.5" height="15.0" fill="rgb(209,31,20)" rx="2" ry="2" />
<text  x="15.63" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int&amp;&gt; (9 samples, 0.11%)</title><rect x="386.7" y="325" width="1.3" height="15.0" fill="rgb(205,21,1)" rx="2" ry="2" />
<text  x="389.70" y="335.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.06%)</title><rect x="1185.0" y="405" width="0.8" height="15.0" fill="rgb(229,216,42)" rx="2" ry="2" />
<text  x="1188.04" y="415.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 0.10%)</title><rect x="118.4" y="197" width="1.2" height="15.0" fill="rgb(219,108,29)" rx="2" ry="2" />
<text  x="121.40" y="207.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.06%)</title><rect x="15.0" y="485" width="0.7" height="15.0" fill="rgb(243,29,46)" rx="2" ry="2" />
<text  x="17.96" y="495.5" ></text>
</g>
<g >
<title>_mi_os_free (2 samples, 0.02%)</title><rect x="1045.0" y="485" width="0.3" height="15.0" fill="rgb(240,169,18)" rx="2" ry="2" />
<text  x="1047.98" y="495.5" ></text>
</g>
<g >
<title>__update_load_avg_se.isra.37 (1 samples, 0.01%)</title><rect x="475.0" y="165" width="0.1" height="15.0" fill="rgb(228,103,53)" rx="2" ry="2" />
<text  x="477.97" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (1 samples, 0.01%)</title><rect x="106.4" y="277" width="0.2" height="15.0" fill="rgb(208,103,44)" rx="2" ry="2" />
<text  x="109.44" y="287.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.01%)</title><rect x="493.2" y="229" width="0.2" height="15.0" fill="rgb(250,153,42)" rx="2" ry="2" />
<text  x="496.20" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="316.1" y="229" width="0.1" height="15.0" fill="rgb(217,41,19)" rx="2" ry="2" />
<text  x="319.09" y="239.5" ></text>
</g>
<g >
<title>makeProcedure (1 samples, 0.01%)</title><rect x="32.9" y="469" width="0.2" height="15.0" fill="rgb(254,86,16)" rx="2" ry="2" />
<text  x="35.91" y="479.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.06%)</title><rect x="1046.0" y="469" width="0.7" height="15.0" fill="rgb(210,13,0)" rx="2" ry="2" />
<text  x="1049.00" y="479.5" ></text>
</g>
<g >
<title>TxExecutor::spinWait (5 samples, 0.06%)</title><rect x="16.0" y="549" width="0.7" height="15.0" fill="rgb(243,225,50)" rx="2" ry="2" />
<text  x="18.98" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.01%)</title><rect x="88.8" y="325" width="0.1" height="15.0" fill="rgb(243,216,54)" rx="2" ry="2" />
<text  x="91.78" y="335.5" ></text>
</g>
<g >
<title>std::forward&lt;Tuple*&amp;&gt; (2 samples, 0.02%)</title><rect x="31.0" y="533" width="0.3" height="15.0" fill="rgb(239,144,43)" rx="2" ry="2" />
<text  x="34.01" y="543.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 0.06%)</title><rect x="1185.0" y="533" width="0.8" height="15.0" fill="rgb(253,167,42)" rx="2" ry="2" />
<text  x="1188.04" y="543.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.06%)</title><rect x="13.5" y="469" width="0.7" height="15.0" fill="rgb(223,125,23)" rx="2" ry="2" />
<text  x="16.50" y="479.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (195 samples, 2.41%)</title><rect x="465.6" y="293" width="28.5" height="15.0" fill="rgb(233,217,9)" rx="2" ry="2" />
<text  x="468.63" y="303.5" >hr..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator* (5 samples, 0.06%)</title><rect x="574.0" y="389" width="0.8" height="15.0" fill="rgb(209,207,2)" rx="2" ry="2" />
<text  x="577.03" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (4 samples, 0.05%)</title><rect x="545.1" y="325" width="0.6" height="15.0" fill="rgb(242,177,17)" rx="2" ry="2" />
<text  x="548.14" y="335.5" ></text>
</g>
<g >
<title>TxExecutor::LockRetire (1 samples, 0.01%)</title><rect x="17.6" y="533" width="0.1" height="15.0" fill="rgb(217,149,0)" rx="2" ry="2" />
<text  x="20.59" y="543.5" ></text>
</g>
<g >
<title>__mod_node_page_state (5 samples, 0.06%)</title><rect x="1141.0" y="341" width="0.7" height="15.0" fill="rgb(212,220,32)" rx="2" ry="2" />
<text  x="1143.98" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.04%)</title><rect x="213.2" y="357" width="0.5" height="15.0" fill="rgb(233,61,9)" rx="2" ry="2" />
<text  x="216.23" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::emplace_back&lt;int&amp;&gt; (1 samples, 0.01%)</title><rect x="159.0" y="325" width="0.1" height="15.0" fill="rgb(243,160,50)" rx="2" ry="2" />
<text  x="161.96" y="335.5" ></text>
</g>
<g >
<title>event_function (3 samples, 0.04%)</title><rect x="272.9" y="133" width="0.4" height="15.0" fill="rgb(231,96,47)" rx="2" ry="2" />
<text  x="275.90" y="143.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.01%)</title><rect x="563.8" y="213" width="0.2" height="15.0" fill="rgb(216,66,7)" rx="2" ry="2" />
<text  x="566.82" y="223.5" ></text>
</g>
<g >
<title>Procedure::Procedure (6 samples, 0.07%)</title><rect x="617.5" y="341" width="0.9" height="15.0" fill="rgb(212,20,24)" rx="2" ry="2" />
<text  x="620.51" y="351.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.01%)</title><rect x="165.8" y="229" width="0.2" height="15.0" fill="rgb(245,41,31)" rx="2" ry="2" />
<text  x="168.82" y="239.5" ></text>
</g>
<g >
<title>schedule (16 samples, 0.20%)</title><rect x="163.8" y="245" width="2.3" height="15.0" fill="rgb(234,30,34)" rx="2" ry="2" />
<text  x="166.77" y="255.5" ></text>
</g>
<g >
<title>makeProcedure (209 samples, 2.58%)</title><rect x="592.1" y="405" width="30.5" height="15.0" fill="rgb(214,129,36)" rx="2" ry="2" />
<text  x="595.12" y="415.5" >ma..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="116.8" y="293" width="0.1" height="15.0" fill="rgb(205,12,4)" rx="2" ry="2" />
<text  x="119.80" y="303.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (33 samples, 0.41%)</title><rect x="420.1" y="357" width="4.8" height="15.0" fill="rgb(240,9,27)" rx="2" ry="2" />
<text  x="423.11" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (32 samples, 0.40%)</title><rect x="151.5" y="325" width="4.7" height="15.0" fill="rgb(221,114,7)" rx="2" ry="2" />
<text  x="154.52" y="335.5" ></text>
</g>
<g >
<title>ctx_resched (5 samples, 0.06%)</title><rect x="1046.0" y="405" width="0.7" height="15.0" fill="rgb(229,98,48)" rx="2" ry="2" />
<text  x="1049.00" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::clear (7 samples, 0.09%)</title><rect x="125.4" y="389" width="1.0" height="15.0" fill="rgb(221,65,28)" rx="2" ry="2" />
<text  x="128.40" y="399.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.05%)</title><rect x="272.9" y="197" width="0.6" height="15.0" fill="rgb(237,122,28)" rx="2" ry="2" />
<text  x="275.90" y="207.5" ></text>
</g>
<g >
<title>TxExecutor::addCommitSemaphore (1 samples, 0.01%)</title><rect x="159.3" y="341" width="0.1" height="15.0" fill="rgb(247,192,53)" rx="2" ry="2" />
<text  x="162.25" y="351.5" ></text>
</g>
<g >
<title>Tuple::remove (1 samples, 0.01%)</title><rect x="397.9" y="373" width="0.2" height="15.0" fill="rgb(236,218,7)" rx="2" ry="2" />
<text  x="400.94" y="383.5" ></text>
</g>
<g >
<title>myBinarySearch (2 samples, 0.02%)</title><rect x="429.7" y="341" width="0.3" height="15.0" fill="rgb(236,57,7)" rx="2" ry="2" />
<text  x="432.74" y="351.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (55 samples, 0.68%)</title><rect x="360.6" y="357" width="8.0" height="15.0" fill="rgb(233,44,48)" rx="2" ry="2" />
<text  x="363.59" y="367.5" ></text>
</g>
<g >
<title>update_cfs_group (2 samples, 0.02%)</title><rect x="266.8" y="181" width="0.3" height="15.0" fill="rgb(243,18,6)" rx="2" ry="2" />
<text  x="269.78" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.01%)</title><rect x="396.0" y="373" width="0.2" height="15.0" fill="rgb(253,37,48)" rx="2" ry="2" />
<text  x="399.04" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (24 samples, 0.30%)</title><rect x="557.0" y="373" width="3.5" height="15.0" fill="rgb(249,98,41)" rx="2" ry="2" />
<text  x="559.96" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="396.3" y="373" width="0.2" height="15.0" fill="rgb(224,57,33)" rx="2" ry="2" />
<text  x="399.33" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (12 samples, 0.15%)</title><rect x="289.1" y="357" width="1.7" height="15.0" fill="rgb(230,103,49)" rx="2" ry="2" />
<text  x="292.10" y="367.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.01%)</title><rect x="481.5" y="149" width="0.2" height="15.0" fill="rgb(216,70,10)" rx="2" ry="2" />
<text  x="484.53" y="159.5" ></text>
</g>
<g >
<title>do_nanosleep (198 samples, 2.45%)</title><rect x="316.2" y="277" width="28.9" height="15.0" fill="rgb(226,65,22)" rx="2" ry="2" />
<text  x="319.23" y="287.5" >do..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="109.1" y="309" width="0.3" height="15.0" fill="rgb(227,61,12)" rx="2" ry="2" />
<text  x="112.06" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="466.7" y="261" width="0.1" height="15.0" fill="rgb(236,77,26)" rx="2" ry="2" />
<text  x="469.65" y="271.5" ></text>
</g>
<g >
<title>__schedule (14 samples, 0.17%)</title><rect x="163.8" y="229" width="2.0" height="15.0" fill="rgb(239,80,34)" rx="2" ry="2" />
<text  x="166.77" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (207 samples, 2.56%)</title><rect x="315.1" y="341" width="30.2" height="15.0" fill="rgb(208,140,47)" rx="2" ry="2" />
<text  x="318.07" y="351.5" >en..</text>
</g>
<g >
<title>dequeue_entity (4 samples, 0.05%)</title><rect x="163.9" y="181" width="0.6" height="15.0" fill="rgb(233,152,38)" rx="2" ry="2" />
<text  x="166.92" y="191.5" ></text>
</g>
<g >
<title>__schedule (156 samples, 1.93%)</title><rect x="470.6" y="245" width="22.8" height="15.0" fill="rgb(232,156,34)" rx="2" ry="2" />
<text  x="473.59" y="255.5" >_..</text>
</g>
<g >
<title>deactivate_task (29 samples, 0.36%)</title><rect x="323.4" y="229" width="4.2" height="15.0" fill="rgb(214,38,51)" rx="2" ry="2" />
<text  x="326.38" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::base (6 samples, 0.07%)</title><rect x="22.0" y="533" width="0.8" height="15.0" fill="rgb(211,170,46)" rx="2" ry="2" />
<text  x="24.96" y="543.5" ></text>
</g>
<g >
<title>timerqueue_add (2 samples, 0.02%)</title><rect x="467.7" y="229" width="0.3" height="15.0" fill="rgb(240,78,21)" rx="2" ry="2" />
<text  x="470.67" y="239.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (2 samples, 0.02%)</title><rect x="471.8" y="181" width="0.2" height="15.0" fill="rgb(245,156,13)" rx="2" ry="2" />
<text  x="474.76" y="191.5" ></text>
</g>
<g >
<title>event_function (5 samples, 0.06%)</title><rect x="11.8" y="437" width="0.7" height="15.0" fill="rgb(242,12,5)" rx="2" ry="2" />
<text  x="14.75" y="447.5" ></text>
</g>
<g >
<title>finish_task_switch (9 samples, 0.11%)</title><rect x="164.5" y="213" width="1.3" height="15.0" fill="rgb(242,134,8)" rx="2" ry="2" />
<text  x="167.50" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator* (4 samples, 0.05%)</title><rect x="529.2" y="325" width="0.6" height="15.0" fill="rgb(244,70,9)" rx="2" ry="2" />
<text  x="532.24" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (8 samples, 0.10%)</title><rect x="155.0" y="293" width="1.2" height="15.0" fill="rgb(241,135,32)" rx="2" ry="2" />
<text  x="158.02" y="303.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="1186.4" y="405" width="0.1" height="15.0" fill="rgb(252,44,35)" rx="2" ry="2" />
<text  x="1189.35" y="415.5" ></text>
</g>
<g >
<title>__exp1_fma (30 samples, 0.37%)</title><rect x="602.9" y="341" width="4.4" height="15.0" fill="rgb(250,18,13)" rx="2" ry="2" />
<text  x="605.92" y="351.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.01%)</title><rect x="568.3" y="149" width="0.2" height="15.0" fill="rgb(241,126,4)" rx="2" ry="2" />
<text  x="571.34" y="159.5" ></text>
</g>
<g >
<title>myBinaryInsert (3 samples, 0.04%)</title><rect x="531.9" y="357" width="0.4" height="15.0" fill="rgb(249,85,22)" rx="2" ry="2" />
<text  x="534.87" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (76 samples, 0.94%)</title><rect x="263.0" y="341" width="11.1" height="15.0" fill="rgb(250,172,45)" rx="2" ry="2" />
<text  x="265.98" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="377.4" y="341" width="0.3" height="15.0" fill="rgb(205,7,3)" rx="2" ry="2" />
<text  x="380.36" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (11 samples, 0.14%)</title><rect x="548.1" y="341" width="1.6" height="15.0" fill="rgb(213,43,13)" rx="2" ry="2" />
<text  x="551.06" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::back (1 samples, 0.01%)</title><rect x="33.6" y="533" width="0.2" height="15.0" fill="rgb(238,178,16)" rx="2" ry="2" />
<text  x="36.64" y="543.5" ></text>
</g>
<g >
<title>unmap_single_vma (937 samples, 11.59%)</title><rect x="1048.3" y="421" width="136.7" height="15.0" fill="rgb(244,211,28)" rx="2" ry="2" />
<text  x="1051.34" y="431.5" >unmap_single_vma</text>
</g>
<g >
<title>std::floor&lt;int&gt; (1 samples, 0.01%)</title><rect x="394.0" y="325" width="0.1" height="15.0" fill="rgb(206,204,3)" rx="2" ry="2" />
<text  x="397.00" y="335.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="16.0" y="485" width="0.7" height="15.0" fill="rgb(230,194,34)" rx="2" ry="2" />
<text  x="18.98" y="495.5" ></text>
</g>
<g >
<title>std::floor&lt;int&gt; (3 samples, 0.04%)</title><rect x="30.6" y="533" width="0.4" height="15.0" fill="rgb(234,216,29)" rx="2" ry="2" />
<text  x="33.57" y="543.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="430.2" y="309" width="0.1" height="15.0" fill="rgb(207,85,25)" rx="2" ry="2" />
<text  x="433.18" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt; (34 samples, 0.42%)</title><rect x="406.3" y="373" width="4.9" height="15.0" fill="rgb(241,197,32)" rx="2" ry="2" />
<text  x="409.25" y="383.5" ></text>
</g>
<g >
<title>sys_nanosleep (1 samples, 0.01%)</title><rect x="345.1" y="325" width="0.2" height="15.0" fill="rgb(234,77,10)" rx="2" ry="2" />
<text  x="348.12" y="335.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (1 samples, 0.01%)</title><rect x="32.9" y="517" width="0.2" height="15.0" fill="rgb(233,55,39)" rx="2" ry="2" />
<text  x="35.91" y="527.5" ></text>
</g>
<g >
<title>pick_next_task_idle (2 samples, 0.02%)</title><rect x="344.4" y="229" width="0.3" height="15.0" fill="rgb(246,46,12)" rx="2" ry="2" />
<text  x="347.39" y="239.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.06%)</title><rect x="464.5" y="181" width="0.7" height="15.0" fill="rgb(231,28,27)" rx="2" ry="2" />
<text  x="467.46" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.02%)</title><rect x="223.9" y="309" width="0.3" height="15.0" fill="rgb(240,194,14)" rx="2" ry="2" />
<text  x="226.88" y="319.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="618.4" y="341" width="0.1" height="15.0" fill="rgb(214,136,26)" rx="2" ry="2" />
<text  x="621.38" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::emplace_back&lt;unsigned long&amp;, Tuple*&amp;, char  (1 samples, 0.01%)</title><rect x="313.5" y="373" width="0.1" height="15.0" fill="rgb(239,15,41)" rx="2" ry="2" />
<text  x="316.46" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (6 samples, 0.07%)</title><rect x="379.4" y="309" width="0.9" height="15.0" fill="rgb(251,44,39)" rx="2" ry="2" />
<text  x="382.41" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (8 samples, 0.10%)</title><rect x="156.2" y="325" width="1.2" height="15.0" fill="rgb(225,113,29)" rx="2" ry="2" />
<text  x="159.19" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="1185.8" y="501" width="0.1" height="15.0" fill="rgb(252,105,25)" rx="2" ry="2" />
<text  x="1188.77" y="511.5" ></text>
</g>
<g >
<title>native_write_msr (65 samples, 0.80%)</title><rect x="333.9" y="149" width="9.5" height="15.0" fill="rgb(253,8,43)" rx="2" ry="2" />
<text  x="336.89" y="159.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (6,883 samples, 85.10%)</title><rect x="40.8" y="501" width="1004.2" height="15.0" fill="rgb(233,23,38)" rx="2" ry="2" />
<text  x="43.78" y="511.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>std::__copy_move_backward_a&lt;true, int*, int*&gt; (1 samples, 0.01%)</title><rect x="532.7" y="293" width="0.2" height="15.0" fill="rgb(250,219,32)" rx="2" ry="2" />
<text  x="535.74" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (204 samples, 2.52%)</title><rect x="315.4" y="325" width="29.7" height="15.0" fill="rgb(241,166,13)" rx="2" ry="2" />
<text  x="318.36" y="335.5" >do..</text>
</g>
<g >
<title>__schedule (65 samples, 0.80%)</title><rect x="563.8" y="245" width="9.5" height="15.0" fill="rgb(242,163,54)" rx="2" ry="2" />
<text  x="566.82" y="255.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.02%)</title><rect x="396.6" y="245" width="0.3" height="15.0" fill="rgb(251,191,19)" rx="2" ry="2" />
<text  x="399.62" y="255.5" ></text>
</g>
<g >
<title>Tuple::sortAdd (69 samples, 0.85%)</title><rect x="202.9" y="373" width="10.0" height="15.0" fill="rgb(220,7,42)" rx="2" ry="2" />
<text  x="205.87" y="383.5" ></text>
</g>
<g >
<title>TxExecutor::concat (1 samples, 0.01%)</title><rect x="398.4" y="325" width="0.1" height="15.0" fill="rgb(248,4,25)" rx="2" ry="2" />
<text  x="401.37" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="167.6" y="357" width="0.3" height="15.0" fill="rgb(205,111,46)" rx="2" ry="2" />
<text  x="170.57" y="367.5" ></text>
</g>
<g >
<title>schedule (10 samples, 0.12%)</title><rect x="118.1" y="245" width="1.5" height="15.0" fill="rgb(215,77,8)" rx="2" ry="2" />
<text  x="121.11" y="255.5" ></text>
</g>
<g >
<title>myBinarySearch (2 samples, 0.02%)</title><rect x="546.3" y="309" width="0.3" height="15.0" fill="rgb(254,7,24)" rx="2" ry="2" />
<text  x="549.31" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="1185.8" y="485" width="0.1" height="15.0" fill="rgb(206,145,27)" rx="2" ry="2" />
<text  x="1188.77" y="495.5" ></text>
</g>
<g >
<title>ctx_resched (5 samples, 0.06%)</title><rect x="15.0" y="421" width="0.7" height="15.0" fill="rgb(214,51,12)" rx="2" ry="2" />
<text  x="17.96" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;SetElement&lt;Tuple&gt;*, SetElement&lt;Tuple&gt; &gt; (1 samples, 0.01%)</title><rect x="126.0" y="357" width="0.1" height="15.0" fill="rgb(232,3,36)" rx="2" ry="2" />
<text  x="128.99" y="367.5" ></text>
</g>
<g >
<title>RWLock::w_trylock (94 samples, 1.16%)</title><rect x="187.0" y="357" width="13.7" height="15.0" fill="rgb(217,78,35)" rx="2" ry="2" />
<text  x="189.97" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="1046.9" y="453" width="0.7" height="15.0" fill="rgb(240,4,45)" rx="2" ry="2" />
<text  x="1049.88" y="463.5" ></text>
</g>
<g >
<title>TxExecutor::get_tuple (6 samples, 0.07%)</title><rect x="171.9" y="389" width="0.9" height="15.0" fill="rgb(242,80,34)" rx="2" ry="2" />
<text  x="174.94" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (2 samples, 0.02%)</title><rect x="106.1" y="309" width="0.3" height="15.0" fill="rgb(206,43,50)" rx="2" ry="2" />
<text  x="109.14" y="319.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="11.5" y="517" width="0.3" height="15.0" fill="rgb(236,24,25)" rx="2" ry="2" />
<text  x="14.46" y="527.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.06%)</title><rect x="15.0" y="389" width="0.7" height="15.0" fill="rgb(230,131,38)" rx="2" ry="2" />
<text  x="17.96" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="323.2" y="229" width="0.2" height="15.0" fill="rgb(253,13,41)" rx="2" ry="2" />
<text  x="326.24" y="239.5" ></text>
</g>
<g >
<title>tick_program_event (17 samples, 0.21%)</title><rect x="318.6" y="245" width="2.4" height="15.0" fill="rgb(245,36,34)" rx="2" ry="2" />
<text  x="321.57" y="255.5" ></text>
</g>
<g >
<title>std::floor&lt;int&gt; (1 samples, 0.01%)</title><rect x="544.4" y="325" width="0.2" height="15.0" fill="rgb(245,105,43)" rx="2" ry="2" />
<text  x="547.41" y="335.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (3 samples, 0.04%)</title><rect x="272.9" y="165" width="0.4" height="15.0" fill="rgb(249,91,22)" rx="2" ry="2" />
<text  x="275.90" y="175.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.06%)</title><rect x="11.8" y="469" width="0.7" height="15.0" fill="rgb(235,62,54)" rx="2" ry="2" />
<text  x="14.75" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="1046.9" y="437" width="0.7" height="15.0" fill="rgb(216,104,47)" rx="2" ry="2" />
<text  x="1049.88" y="447.5" ></text>
</g>
<g >
<title>TxExecutor::PromoteWaiters (5 samples, 0.06%)</title><rect x="212.9" y="373" width="0.8" height="15.0" fill="rgb(252,225,15)" rx="2" ry="2" />
<text  x="215.94" y="383.5" ></text>
</g>
<g >
<title>__perf_event_enable (5 samples, 0.06%)</title><rect x="16.0" y="421" width="0.7" height="15.0" fill="rgb(220,71,46)" rx="2" ry="2" />
<text  x="18.98" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="429.6" y="357" width="0.1" height="15.0" fill="rgb(227,209,34)" rx="2" ry="2" />
<text  x="432.59" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (1 samples, 0.01%)</title><rect x="531.7" y="357" width="0.2" height="15.0" fill="rgb(229,214,25)" rx="2" ry="2" />
<text  x="534.72" y="367.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (5 samples, 0.06%)</title><rect x="1046.9" y="405" width="0.7" height="15.0" fill="rgb(228,64,54)" rx="2" ry="2" />
<text  x="1049.88" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.02%)</title><rect x="543.4" y="309" width="0.3" height="15.0" fill="rgb(225,115,5)" rx="2" ry="2" />
<text  x="546.39" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (1 samples, 0.01%)</title><rect x="126.4" y="389" width="0.2" height="15.0" fill="rgb(236,148,14)" rx="2" ry="2" />
<text  x="129.42" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="1189.7" y="533" width="0.3" height="15.0" fill="rgb(244,102,3)" rx="2" ry="2" />
<text  x="1192.71" y="543.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.01%)</title><rect x="264.9" y="245" width="0.1" height="15.0" fill="rgb(239,109,26)" rx="2" ry="2" />
<text  x="267.88" y="255.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (4 samples, 0.05%)</title><rect x="1074.3" y="357" width="0.6" height="15.0" fill="rgb(243,211,21)" rx="2" ry="2" />
<text  x="1077.31" y="367.5" ></text>
</g>
<g >
<title>vm_munmap (2 samples, 0.02%)</title><rect x="1045.0" y="405" width="0.3" height="15.0" fill="rgb(232,27,50)" rx="2" ry="2" />
<text  x="1047.98" y="415.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (3 samples, 0.04%)</title><rect x="272.9" y="69" width="0.4" height="15.0" fill="rgb(236,151,16)" rx="2" ry="2" />
<text  x="275.90" y="79.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.01%)</title><rect x="141.6" y="309" width="0.1" height="15.0" fill="rgb(216,205,28)" rx="2" ry="2" />
<text  x="144.60" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="116.8" y="277" width="0.1" height="15.0" fill="rgb(206,58,13)" rx="2" ry="2" />
<text  x="119.80" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="311.6" y="309" width="0.1" height="15.0" fill="rgb(209,194,30)" rx="2" ry="2" />
<text  x="314.57" y="319.5" ></text>
</g>
<g >
<title>__GI___nanosleep (14 samples, 0.17%)</title><rect x="117.7" y="341" width="2.0" height="15.0" fill="rgb(229,29,11)" rx="2" ry="2" />
<text  x="120.67" y="351.5" ></text>
</g>
<g >
<title>fill_pmd (1 samples, 0.01%)</title><rect x="1185.2" y="357" width="0.1" height="15.0" fill="rgb(247,159,39)" rx="2" ry="2" />
<text  x="1188.19" y="367.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.01%)</title><rect x="1045.7" y="533" width="0.2" height="15.0" fill="rgb(244,90,35)" rx="2" ry="2" />
<text  x="1048.71" y="543.5" ></text>
</g>
<g >
<title>do_nanosleep (12 samples, 0.15%)</title><rect x="117.8" y="261" width="1.8" height="15.0" fill="rgb(211,179,6)" rx="2" ry="2" />
<text  x="120.82" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (1 samples, 0.01%)</title><rect x="398.2" y="245" width="0.2" height="15.0" fill="rgb(231,68,39)" rx="2" ry="2" />
<text  x="401.23" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::end (27 samples, 0.33%)</title><rect x="583.4" y="389" width="3.9" height="15.0" fill="rgb(236,59,12)" rx="2" ry="2" />
<text  x="586.37" y="399.5" ></text>
</g>
<g >
<title>TxExecutor::LockRetire (258 samples, 3.19%)</title><rect x="359.3" y="389" width="37.6" height="15.0" fill="rgb(224,156,13)" rx="2" ry="2" />
<text  x="362.27" y="399.5" >TxE..</text>
</g>
<g >
<title>update_curr (5 samples, 0.06%)</title><rect x="474.2" y="181" width="0.8" height="15.0" fill="rgb(250,220,0)" rx="2" ry="2" />
<text  x="477.24" y="191.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.06%)</title><rect x="1046.0" y="373" width="0.7" height="15.0" fill="rgb(206,196,51)" rx="2" ry="2" />
<text  x="1049.00" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (7 samples, 0.09%)</title><rect x="90.7" y="341" width="1.0" height="15.0" fill="rgb(211,4,45)" rx="2" ry="2" />
<text  x="93.68" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::woundRelease (3 samples, 0.04%)</title><rect x="398.2" y="357" width="0.5" height="15.0" fill="rgb(243,145,49)" rx="2" ry="2" />
<text  x="401.23" y="367.5" ></text>
</g>
<g >
<title>Tuple::ownersRemove (4 samples, 0.05%)</title><rect x="88.6" y="357" width="0.6" height="15.0" fill="rgb(250,3,40)" rx="2" ry="2" />
<text  x="91.64" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator++ (4 samples, 0.05%)</title><rect x="23.9" y="533" width="0.5" height="15.0" fill="rgb(241,135,13)" rx="2" ry="2" />
<text  x="26.86" y="543.5" ></text>
</g>
<g >
<title>run_local_timers (1 samples, 0.01%)</title><rect x="1185.8" y="421" width="0.1" height="15.0" fill="rgb(243,71,19)" rx="2" ry="2" />
<text  x="1188.77" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (204 samples, 2.52%)</title><rect x="464.3" y="325" width="29.8" height="15.0" fill="rgb(229,176,24)" rx="2" ry="2" />
<text  x="467.32" y="335.5" >do..</text>
</g>
<g >
<title>RWLock::w_unlock (15 samples, 0.19%)</title><rect x="200.7" y="373" width="2.2" height="15.0" fill="rgb(250,226,40)" rx="2" ry="2" />
<text  x="203.68" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="112.3" y="229" width="0.1" height="15.0" fill="rgb(237,214,23)" rx="2" ry="2" />
<text  x="115.27" y="239.5" ></text>
</g>
<g >
<title>TxExecutor::woundRelease (35 samples, 0.43%)</title><rect x="221.1" y="357" width="5.1" height="15.0" fill="rgb(220,177,33)" rx="2" ry="2" />
<text  x="224.11" y="367.5" ></text>
</g>
<g >
<title>nmi_restore (1 samples, 0.01%)</title><rect x="572.4" y="149" width="0.2" height="15.0" fill="rgb(244,92,42)" rx="2" ry="2" />
<text  x="575.43" y="159.5" ></text>
</g>
<g >
<title>Tuple::itrRemove (7 samples, 0.09%)</title><rect x="222.0" y="341" width="1.0" height="15.0" fill="rgb(234,58,13)" rx="2" ry="2" />
<text  x="224.99" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.04%)</title><rect x="15.1" y="357" width="0.4" height="15.0" fill="rgb(214,9,39)" rx="2" ry="2" />
<text  x="18.11" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.01%)</title><rect x="38.4" y="533" width="0.2" height="15.0" fill="rgb(221,152,9)" rx="2" ry="2" />
<text  x="41.45" y="543.5" ></text>
</g>
<g >
<title>myBinarySearch (39 samples, 0.48%)</title><rect x="91.8" y="341" width="5.7" height="15.0" fill="rgb(217,39,25)" rx="2" ry="2" />
<text  x="94.85" y="351.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.01%)</title><rect x="16.7" y="453" width="0.2" height="15.0" fill="rgb(235,100,42)" rx="2" ry="2" />
<text  x="19.71" y="463.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.06%)</title><rect x="14.2" y="421" width="0.8" height="15.0" fill="rgb(217,19,35)" rx="2" ry="2" />
<text  x="17.23" y="431.5" ></text>
</g>
<g >
<title>std::this_thread::sleep_for&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (5 samples, 0.06%)</title><rect x="1046.9" y="485" width="0.7" height="15.0" fill="rgb(241,2,6)" rx="2" ry="2" />
<text  x="1049.88" y="495.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (5 samples, 0.06%)</title><rect x="464.5" y="277" width="0.7" height="15.0" fill="rgb(247,196,15)" rx="2" ry="2" />
<text  x="467.46" y="287.5" ></text>
</g>
<g >
<title>TxExecutor::addCommitSemaphore (25 samples, 0.31%)</title><rect x="213.7" y="373" width="3.6" height="15.0" fill="rgb(205,177,17)" rx="2" ry="2" />
<text  x="216.67" y="383.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (9 samples, 0.11%)</title><rect x="138.7" y="325" width="1.3" height="15.0" fill="rgb(225,50,27)" rx="2" ry="2" />
<text  x="141.68" y="335.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="15.8" y="517" width="0.2" height="15.0" fill="rgb(242,61,4)" rx="2" ry="2" />
<text  x="18.84" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.01%)</title><rect x="153.0" y="293" width="0.1" height="15.0" fill="rgb(225,180,29)" rx="2" ry="2" />
<text  x="155.98" y="303.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.01%)</title><rect x="272.8" y="133" width="0.1" height="15.0" fill="rgb(226,180,12)" rx="2" ry="2" />
<text  x="275.76" y="143.5" ></text>
</g>
<g >
<title>native_apic_msr_write (1 samples, 0.01%)</title><rect x="1047.0" y="261" width="0.2" height="15.0" fill="rgb(237,5,1)" rx="2" ry="2" />
<text  x="1050.02" y="271.5" ></text>
</g>
<g >
<title>do_nanosleep (1 samples, 0.01%)</title><rect x="398.7" y="277" width="0.1" height="15.0" fill="rgb(233,185,24)" rx="2" ry="2" />
<text  x="401.66" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.04%)</title><rect x="216.9" y="357" width="0.4" height="15.0" fill="rgb(224,137,26)" rx="2" ry="2" />
<text  x="219.88" y="367.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.04%)</title><rect x="16.1" y="341" width="0.5" height="15.0" fill="rgb(220,30,45)" rx="2" ry="2" />
<text  x="19.13" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (18 samples, 0.22%)</title><rect x="259.3" y="373" width="2.7" height="15.0" fill="rgb(216,180,46)" rx="2" ry="2" />
<text  x="262.33" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int&amp;&gt; (19 samples, 0.23%)</title><rect x="525.9" y="341" width="2.8" height="15.0" fill="rgb(221,15,35)" rx="2" ry="2" />
<text  x="528.89" y="351.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.01%)</title><rect x="264.9" y="229" width="0.1" height="15.0" fill="rgb(237,191,1)" rx="2" ry="2" />
<text  x="267.88" y="239.5" ></text>
</g>
<g >
<title>do_exit (938 samples, 11.60%)</title><rect x="1048.2" y="485" width="136.8" height="15.0" fill="rgb(223,22,15)" rx="2" ry="2" />
<text  x="1051.19" y="495.5" >do_exit</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator- (5 samples, 0.06%)</title><rect x="460.8" y="341" width="0.7" height="15.0" fill="rgb(209,13,16)" rx="2" ry="2" />
<text  x="463.82" y="351.5" ></text>
</g>
<g >
<title>TxExecutor::PromoteWaiters (6 samples, 0.07%)</title><rect x="312.1" y="373" width="0.9" height="15.0" fill="rgb(219,50,39)" rx="2" ry="2" />
<text  x="315.15" y="383.5" ></text>
</g>
<g >
<title>deactivate_task (5 samples, 0.06%)</title><rect x="163.8" y="213" width="0.7" height="15.0" fill="rgb(214,102,14)" rx="2" ry="2" />
<text  x="166.77" y="223.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="12.5" y="469" width="0.1" height="15.0" fill="rgb(234,87,34)" rx="2" ry="2" />
<text  x="15.48" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;SetElement&lt;Tuple&gt;*, std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt; &gt;::operator- (1 samples, 0.01%)</title><rect x="258.2" y="341" width="0.1" height="15.0" fill="rgb(226,26,33)" rx="2" ry="2" />
<text  x="261.17" y="351.5" ></text>
</g>
<g >
<title>update_curr (3 samples, 0.04%)</title><rect x="565.0" y="181" width="0.4" height="15.0" fill="rgb(220,41,54)" rx="2" ry="2" />
<text  x="567.99" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="28.7" y="533" width="0.3" height="15.0" fill="rgb(214,199,53)" rx="2" ry="2" />
<text  x="31.67" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::begin (28 samples, 0.35%)</title><rect x="33.8" y="533" width="4.1" height="15.0" fill="rgb(227,182,51)" rx="2" ry="2" />
<text  x="36.78" y="543.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.02%)</title><rect x="11.5" y="421" width="0.3" height="15.0" fill="rgb(211,88,38)" rx="2" ry="2" />
<text  x="14.46" y="431.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator++ (27 samples, 0.33%)</title><rect x="425.7" y="341" width="3.9" height="15.0" fill="rgb(228,106,27)" rx="2" ry="2" />
<text  x="428.66" y="351.5" ></text>
</g>
<g >
<title>cpuacct_charge (3 samples, 0.04%)</title><rect x="326.0" y="165" width="0.4" height="15.0" fill="rgb(214,110,12)" rx="2" ry="2" />
<text  x="329.01" y="175.5" ></text>
</g>
<g >
<title>sys_munmap (2 samples, 0.02%)</title><rect x="1045.0" y="421" width="0.3" height="15.0" fill="rgb(243,75,6)" rx="2" ry="2" />
<text  x="1047.98" y="431.5" ></text>
</g>
<g >
<title>TxExecutor::abort (384 samples, 4.75%)</title><rect x="70.5" y="405" width="56.1" height="15.0" fill="rgb(247,219,17)" rx="2" ry="2" />
<text  x="73.55" y="415.5" >TxExe..</text>
</g>
<g >
<title>uncharge_page (2 samples, 0.02%)</title><rect x="1184.6" y="341" width="0.3" height="15.0" fill="rgb(206,80,31)" rx="2" ry="2" />
<text  x="1187.60" y="351.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.01%)</title><rect x="15.0" y="357" width="0.1" height="15.0" fill="rgb(217,201,38)" rx="2" ry="2" />
<text  x="17.96" y="367.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.01%)</title><rect x="116.9" y="357" width="0.2" height="15.0" fill="rgb(231,33,4)" rx="2" ry="2" />
<text  x="119.94" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="1185.8" y="469" width="0.1" height="15.0" fill="rgb(227,37,18)" rx="2" ry="2" />
<text  x="1188.77" y="479.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.01%)</title><rect x="264.4" y="229" width="0.2" height="15.0" fill="rgb(244,43,53)" rx="2" ry="2" />
<text  x="267.44" y="239.5" ></text>
</g>
<g >
<title>do_group_exit (938 samples, 11.60%)</title><rect x="1048.2" y="501" width="136.8" height="15.0" fill="rgb(246,106,23)" rx="2" ry="2" />
<text  x="1051.19" y="511.5" >do_group_exit</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="1073.0" y="357" width="0.3" height="15.0" fill="rgb(247,71,20)" rx="2" ry="2" />
<text  x="1075.99" y="367.5" ></text>
</g>
<g >
<title>__dec_node_page_state (3 samples, 0.04%)</title><rect x="1065.3" y="373" width="0.4" height="15.0" fill="rgb(250,176,45)" rx="2" ry="2" />
<text  x="1068.26" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="546.5" y="293" width="0.1" height="15.0" fill="rgb(238,60,4)" rx="2" ry="2" />
<text  x="549.46" y="303.5" ></text>
</g>
<g >
<title>remote_function (5 samples, 0.06%)</title><rect x="1185.0" y="469" width="0.8" height="15.0" fill="rgb(210,142,37)" rx="2" ry="2" />
<text  x="1188.04" y="479.5" ></text>
</g>
<g >
<title>rebalance_domains (2 samples, 0.02%)</title><rect x="1189.7" y="453" width="0.3" height="15.0" fill="rgb(206,174,24)" rx="2" ry="2" />
<text  x="1192.71" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (2 samples, 0.02%)</title><rect x="102.1" y="309" width="0.3" height="15.0" fill="rgb(246,196,9)" rx="2" ry="2" />
<text  x="105.06" y="319.5" ></text>
</g>
<g >
<title>TxExecutor::writelockAcquire (1 samples, 0.01%)</title><rect x="16.7" y="549" width="0.2" height="15.0" fill="rgb(229,86,31)" rx="2" ry="2" />
<text  x="19.71" y="559.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.02%)</title><rect x="1189.7" y="469" width="0.3" height="15.0" fill="rgb(235,91,35)" rx="2" ry="2" />
<text  x="1192.71" y="479.5" ></text>
</g>
<g >
<title>usleep (224 samples, 2.77%)</title><rect x="313.6" y="373" width="32.7" height="15.0" fill="rgb(205,57,35)" rx="2" ry="2" />
<text  x="316.61" y="383.5" >us..</text>
</g>
<g >
<title>std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt;::emplace_back&lt;Ope, unsigned long&amp;&gt; (56 samples, 0.69%)</title><rect x="614.4" y="389" width="8.2" height="15.0" fill="rgb(228,144,40)" rx="2" ry="2" />
<text  x="617.44" y="399.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.01%)</title><rect x="1046.0" y="341" width="0.1" height="15.0" fill="rgb(239,14,28)" rx="2" ry="2" />
<text  x="1049.00" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (6 samples, 0.07%)</title><rect x="380.3" y="325" width="0.9" height="15.0" fill="rgb(207,80,15)" rx="2" ry="2" />
<text  x="383.28" y="335.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (6 samples, 0.07%)</title><rect x="471.5" y="213" width="0.8" height="15.0" fill="rgb(215,188,41)" rx="2" ry="2" />
<text  x="474.47" y="223.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (1 samples, 0.01%)</title><rect x="398.7" y="293" width="0.1" height="15.0" fill="rgb(236,105,44)" rx="2" ry="2" />
<text  x="401.66" y="303.5" ></text>
</g>
<g >
<title>Tuple::remove (8 samples, 0.10%)</title><rect x="111.5" y="341" width="1.2" height="15.0" fill="rgb(215,71,3)" rx="2" ry="2" />
<text  x="114.54" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="316.1" y="213" width="0.1" height="15.0" fill="rgb(213,88,6)" rx="2" ry="2" />
<text  x="319.09" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;SetElement&lt;Tuple&gt;, std::allocator&lt;SetElement&lt;Tuple&gt; &gt; &gt;::begin (1 samples, 0.01%)</title><rect x="346.4" y="389" width="0.2" height="15.0" fill="rgb(212,179,53)" rx="2" ry="2" />
<text  x="349.43" y="399.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.04%)</title><rect x="1046.1" y="341" width="0.5" height="15.0" fill="rgb(227,99,20)" rx="2" ry="2" />
<text  x="1049.15" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (2 samples, 0.02%)</title><rect x="556.7" y="373" width="0.3" height="15.0" fill="rgb(213,136,48)" rx="2" ry="2" />
<text  x="559.67" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;SetElement&lt;Tuple&gt;*&gt; (1 samples, 0.01%)</title><rect x="126.0" y="341" width="0.1" height="15.0" fill="rgb(230,18,43)" rx="2" ry="2" />
<text  x="128.99" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (145 samples, 1.79%)</title><rect x="437.0" y="309" width="21.2" height="15.0" fill="rgb(229,129,30)" rx="2" ry="2" />
<text  x="440.04" y="319.5" ></text>
</g>
<g >
<title>nmi_restore (6 samples, 0.07%)</title><rect x="491.7" y="149" width="0.9" height="15.0" fill="rgb(207,88,54)" rx="2" ry="2" />
<text  x="494.75" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.01%)</title><rect x="384.1" y="341" width="0.1" height="15.0" fill="rgb(207,21,14)" rx="2" ry="2" />
<text  x="387.08" y="351.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.01%)</title><rect x="344.2" y="229" width="0.2" height="15.0" fill="rgb(253,38,4)" rx="2" ry="2" />
<text  x="347.25" y="239.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.05%)</title><rect x="1047.0" y="325" width="0.6" height="15.0" fill="rgb(205,177,9)" rx="2" ry="2" />
<text  x="1050.02" y="335.5" ></text>
</g>
<g >
<title>ctx_resched (5 samples, 0.06%)</title><rect x="1185.0" y="421" width="0.8" height="15.0" fill="rgb(217,34,15)" rx="2" ry="2" />
<text  x="1188.04" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Procedure*, std::vector&lt;Procedure, std::allocator&lt;Procedure&gt; &gt; &gt;::operator* (2 samples, 0.02%)</title><rect x="620.4" y="357" width="0.3" height="15.0" fill="rgb(254,31,37)" rx="2" ry="2" />
<text  x="623.43" y="367.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="398.2" y="261" width="0.2" height="15.0" fill="rgb(225,214,39)" rx="2" ry="2" />
<text  x="401.23" y="271.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (6,883 samples, 85.10%)</title><rect x="40.8" y="485" width="1004.2" height="15.0" fill="rgb(234,186,47)" rx="2" ry="2" />
<text  x="43.78" y="495.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.01%)</title><rect x="1151.8" y="341" width="0.1" height="15.0" fill="rgb(214,98,30)" rx="2" ry="2" />
<text  x="1154.78" y="351.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.01%)</title><rect x="470.2" y="245" width="0.1" height="15.0" fill="rgb(218,124,53)" rx="2" ry="2" />
<text  x="473.15" y="255.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.01%)</title><rect x="1153.2" y="325" width="0.2" height="15.0" fill="rgb(220,23,52)" rx="2" ry="2" />
<text  x="1156.23" y="335.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.65 (8 samples, 0.10%)</title><rect x="1180.1" y="325" width="1.1" height="15.0" fill="rgb(241,38,11)" rx="2" ry="2" />
<text  x="1183.08" y="335.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="333.6" y="149" width="0.1" height="15.0" fill="rgb(222,76,53)" rx="2" ry="2" />
<text  x="336.60" y="159.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.01%)</title><rect x="118.0" y="245" width="0.1" height="15.0" fill="rgb(218,12,46)" rx="2" ry="2" />
<text  x="120.96" y="255.5" ></text>
</g>
</g>
</svg>
